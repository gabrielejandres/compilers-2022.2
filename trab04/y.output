Terminals unused in grammar

    '?'
    ':'


State 2 conflicts: 1 shift/reduce
State 13 conflicts: 8 shift/reduce
State 32 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 69 conflicts: 1 shift/reduce
State 103 conflicts: 2 shift/reduce
State 121 conflicts: 1 shift/reduce
State 126 conflicts: 2 shift/reduce
State 139 conflicts: 17 shift/reduce, 1 reduce/reduce
State 145 conflicts: 2 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 separador cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | VAR decl
    8      | CONST decl
    9      | loop
   10      | exp ASM
   11      | exp
   12      | RETURN
   13      | RETURN exp

   14 cmd_2: condicional
   15      | funcao
   16      | bloco

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func

   20 args: args ',' arg
   21     | arg

   22 arg: ID
   23    | ID '=' exp
   24    | exp

   25 empilha_escopo_func: empilha_escopo

   26 desempilha_escopo_func: desempilha_escopo

   27 empilha_escopo: %empty

   28 desempilha_escopo: %empty

   29 atr: atr_id
   30    | atr_obj
   31    | atr_array

   32 atr_id: ID '=' exp
   33       | ID '=' atr_recursiva
   34       | ID ADD exp

   35 atr_recursiva: ID '=' exp
   36              | ID '=' atr_recursiva

   37 atr_obj: ID '.' prop '=' exp
   38        | ID '.' prop ADD exp
   39        | '(' exp ')' '.' prop '=' exp

   40 prop: ID
   41     | ID '[' exp ']'

   42 atr_array: exp indices '=' rec
   43          | ID '[' atr ']' '=' exp

   44 rec: exp
   45    | matexp
   46    | exp '=' rec
   47    | atr_array

   48 matexp: matrix
   49       | matexp '*' matexp
   50       | matexp '+' matexp

   51 matrix: ID indices

   52 indices: '[' exp ']' indices
   53        | '[' exp ']'

   54 decl: ID '=' exp fim_decl
   55     | ID fim_decl

   56 fim_decl: ',' decl
   57         | %empty

   58 loop: while_loop
   59     | for_loop

   60 separador: separador ';'
   61          | %empty

   62 while_loop: WHILE '(' condicao ')' corpo

   63 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   64         | FOR '(' atr ';' condicao ';' atr ')' corpo

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo

   67 corpo: '{' cmds '}'
   68      | cmd_1 ';'
   69      | cmd_2

   70 condicao: exp '>' exp
   71         | exp '<' exp
   72         | exp IGUAL exp
   73         | exp DIF exp
   74         | exp

   75 exp: exp '+' exp
   76    | exp '-' exp
   77    | exp '*' exp
   78    | exp '/' exp
   79    | exp '%' exp
   80    | ID '.' ID
   81    | val
   82    | exp '(' params ')'

   83 params: exp ',' params
   84       | exp
   85       | %empty

   86 val: ID
   87    | NUM
   88    | '-' NUM
   89    | '(' exp ')'
   90    | OBJ
   91    | ARRAY
   92    | STRING
   93    | ID INC
   94    | BLOCO


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 79
    '(' (40) 18 19 39 62 63 64 65 66 82 89
    ')' (41) 18 19 39 62 63 64 65 66 82 89
    '*' (42) 49 77
    '+' (43) 50 75
    ',' (44) 20 56 83
    '-' (45) 76 88
    '.' (46) 37 38 39 80
    '/' (47) 78
    ':' (58)
    ';' (59) 60 63 64 68
    '<' (60) 71
    '=' (61) 23 32 33 35 36 37 39 42 43 46 54
    '>' (62) 70
    '?' (63)
    'T' (84)
    '[' (91) 41 43 52 53
    ']' (93) 41 43 52 53
    '{' (123) 17 67
    '}' (125) 17 67
    error (256)
    NUM (258) 87 88
    ID (259) 18 19 22 23 32 33 34 35 36 37 38 40 41 43 51 54 55 80 86 93
    LET (260) 6 63
    VAR (261) 7
    CONST (262) 8
    OBJ (263) 90
    ARRAY (264) 91
    STRING (265) 92
    ADD (266) 34 38
    IF (267) 65 66
    ELSE (268) 65
    IGUAL (269) 72
    DIF (270) 73
    INC (271) 93
    WHILE (272) 62
    FOR (273) 63 64
    FUNCTION (274) 18 19
    ASM (275) 10
    RETURN (276) 12 13
    BLOCO (277) 94


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    s (44)
        on left: 1
        on right: 0
    cmds (45)
        on left: 2 3 4
        on right: 1 2 3 17 67
    cmd_1 (46)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 2 68
    cmd_2 (47)
        on left: 14 15 16
        on right: 3 69
    bloco (48)
        on left: 17
        on right: 16
    funcao (49)
        on left: 18 19
        on right: 15
    args (50)
        on left: 20 21
        on right: 18 20
    arg (51)
        on left: 22 23 24
        on right: 20 21
    empilha_escopo_func (52)
        on left: 25
        on right: 18 19
    desempilha_escopo_func (53)
        on left: 26
        on right: 18 19
    empilha_escopo (54)
        on left: 27
        on right: 17 25 65 66
    desempilha_escopo (55)
        on left: 28
        on right: 17 26 65 66
    atr (56)
        on left: 29 30 31
        on right: 5 43 63 64
    atr_id (57)
        on left: 32 33 34
        on right: 29
    atr_recursiva (58)
        on left: 35 36
        on right: 33 36
    atr_obj (59)
        on left: 37 38 39
        on right: 30
    prop (60)
        on left: 40 41
        on right: 37 38 39
    atr_array (61)
        on left: 42 43
        on right: 31 47
    rec (62)
        on left: 44 45 46 47
        on right: 42 46
    matexp (63)
        on left: 48 49 50
        on right: 45 49 50
    matrix (64)
        on left: 51
        on right: 48
    indices (65)
        on left: 52 53
        on right: 42 51 52
    decl (66)
        on left: 54 55
        on right: 6 7 8 56 63
    fim_decl (67)
        on left: 56 57
        on right: 54 55
    loop (68)
        on left: 58 59
        on right: 9
    separador (69)
        on left: 60 61
        on right: 2 60
    while_loop (70)
        on left: 62
        on right: 58
    for_loop (71)
        on left: 63 64
        on right: 59
    condicional (72)
        on left: 65 66
        on right: 14
    corpo (73)
        on left: 67 68 69
        on right: 18 19 62 63 64 65 66
    condicao (74)
        on left: 70 71 72 73 74
        on right: 62 63 64 65 66
    exp (75)
        on left: 75 76 77 78 79 80 81 82
        on right: 10 11 13 23 24 32 34 35 37 38 39 41 42 43 44 46 52 53 54 70 71 72 73 74 75 76 77 78 79 82 83 84 89
    params (76)
        on left: 83 84 85
        on right: 82 83
    val (77)
        on left: 86 87 88 89 90 91 92 93 94
        on right: 81


State 0

    0 $accept: . s $end

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    s            go to state 18
    cmds         go to state 19
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 1

   87 val: NUM .

    $default  reduce using rule 87 (val)


State 2

   32 atr_id: ID . '=' exp
   33       | ID . '=' atr_recursiva
   34       | ID . ADD exp
   37 atr_obj: ID . '.' prop '=' exp
   38        | ID . '.' prop ADD exp
   43 atr_array: ID . '[' atr ']' '=' exp
   80 exp: ID . '.' ID
   86 val: ID .
   93    | ID . INC

    ADD  shift, and go to state 34
    INC  shift, and go to state 35
    '='  shift, and go to state 36
    '.'  shift, and go to state 37
    '['  shift, and go to state 38

    '['       [reduce using rule 86 (val)]
    $default  reduce using rule 86 (val)


State 3

    6 cmd_1: LET . decl

    ID  shift, and go to state 39

    decl  go to state 40


State 4

    7 cmd_1: VAR . decl

    ID  shift, and go to state 39

    decl  go to state 41


State 5

    8 cmd_1: CONST . decl

    ID  shift, and go to state 39

    decl  go to state 42


State 6

   90 val: OBJ .

    $default  reduce using rule 90 (val)


State 7

   91 val: ARRAY .

    $default  reduce using rule 91 (val)


State 8

   92 val: STRING .

    $default  reduce using rule 92 (val)


State 9

   65 condicional: IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo

    '('  shift, and go to state 43


State 10

   62 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 44


State 11

   63 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   64         | FOR . '(' atr ';' condicao ';' atr ')' corpo

    '('  shift, and go to state 45


State 12

   18 funcao: FUNCTION . ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION . ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    ID  shift, and go to state 46


State 13

   12 cmd_1: RETURN .
   13      | RETURN . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    NUM       [reduce using rule 12 (cmd_1)]
    ID        [reduce using rule 12 (cmd_1)]
    OBJ       [reduce using rule 12 (cmd_1)]
    ARRAY     [reduce using rule 12 (cmd_1)]
    STRING    [reduce using rule 12 (cmd_1)]
    BLOCO     [reduce using rule 12 (cmd_1)]
    '-'       [reduce using rule 12 (cmd_1)]
    '('       [reduce using rule 12 (cmd_1)]
    $default  reduce using rule 12 (cmd_1)

    exp  go to state 49
    val  go to state 33


State 14

   94 val: BLOCO .

    $default  reduce using rule 94 (val)


State 15

   88 val: '-' . NUM

    NUM  shift, and go to state 50


State 16

   39 atr_obj: '(' . exp ')' '.' prop '=' exp
   89 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 51
    val  go to state 33


State 17

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 52


State 18

    0 $accept: s . $end

    $end  shift, and go to state 53


State 19

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 20

    2 cmds: cmd_1 . separador cmds

    $default  reduce using rule 61 (separador)

    separador  go to state 54


State 21

    3 cmds: cmd_2 . cmds

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 55
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 22

   16 cmd_2: bloco .

    $default  reduce using rule 16 (cmd_2)


State 23

   15 cmd_2: funcao .

    $default  reduce using rule 15 (cmd_2)


State 24

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 25

   29 atr: atr_id .

    $default  reduce using rule 29 (atr)


State 26

   30 atr: atr_obj .

    $default  reduce using rule 30 (atr)


State 27

   31 atr: atr_array .

    $default  reduce using rule 31 (atr)


State 28

    9 cmd_1: loop .

    $default  reduce using rule 9 (cmd_1)


State 29

   58 loop: while_loop .

    $default  reduce using rule 58 (loop)


State 30

   59 loop: for_loop .

    $default  reduce using rule 59 (loop)


State 31

   14 cmd_2: condicional .

    $default  reduce using rule 14 (cmd_2)


State 32

   10 cmd_1: exp . ASM
   11      | exp .
   42 atr_array: exp . indices '=' rec
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    ASM  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    '['  shift, and go to state 63

    '-'       [reduce using rule 11 (cmd_1)]
    '('       [reduce using rule 11 (cmd_1)]
    $default  reduce using rule 11 (cmd_1)

    indices  go to state 64


State 33

   81 exp: val .

    $default  reduce using rule 81 (exp)


State 34

   34 atr_id: ID ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 65
    val  go to state 33


State 35

   93 val: ID INC .

    $default  reduce using rule 93 (val)


State 36

   32 atr_id: ID '=' . exp
   33       | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 66
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    atr_recursiva  go to state 67
    exp            go to state 68
    val            go to state 33


State 37

   37 atr_obj: ID '.' . prop '=' exp
   38        | ID '.' . prop ADD exp
   80 exp: ID '.' . ID

    ID  shift, and go to state 69

    prop  go to state 70


State 38

   43 atr_array: ID '[' . atr ']' '=' exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 71
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 72
    val        go to state 33


State 39

   54 decl: ID . '=' exp fim_decl
   55     | ID . fim_decl

    '='  shift, and go to state 73
    ','  shift, and go to state 74

    $default  reduce using rule 57 (fim_decl)

    fim_decl  go to state 75


State 40

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 41

    7 cmd_1: VAR decl .

    $default  reduce using rule 7 (cmd_1)


State 42

    8 cmd_1: CONST decl .

    $default  reduce using rule 8 (cmd_1)


State 43

   65 condicional: IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    condicao  go to state 76
    exp       go to state 77
    val       go to state 33


State 44

   62 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    condicao  go to state 78
    exp       go to state 77
    val       go to state 33


State 45

   63 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   64         | FOR '(' . atr ';' condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    LET     shift, and go to state 79
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 80
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 72
    val        go to state 33


State 46

   18 funcao: FUNCTION ID . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID . empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo_func  go to state 81
    empilha_escopo       go to state 82


State 47

   80 exp: ID . '.' ID
   86 val: ID .
   93    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 83

    $default  reduce using rule 86 (val)


State 48

   89 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 84
    val  go to state 33


State 49

   13 cmd_1: RETURN exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    '-'       [reduce using rule 13 (cmd_1)]
    '('       [reduce using rule 13 (cmd_1)]
    $default  reduce using rule 13 (cmd_1)


State 50

   88 val: '-' NUM .

    $default  reduce using rule 88 (val)


State 51

   39 atr_obj: '(' exp . ')' '.' prop '=' exp
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'
   89 val: '(' exp . ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ')'  shift, and go to state 85


State 52

   17 bloco: '{' empilha_escopo . cmds '}' desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 86
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 53

    0 $accept: s $end .

    $default  accept


State 54

    2 cmds: cmd_1 separador . cmds
   60 separador: separador . ';'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17
    ';'       shift, and go to state 87

    $default  reduce using rule 4 (cmds)

    cmds         go to state 88
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 55

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 56

   10 cmd_1: exp ASM .

    $default  reduce using rule 10 (cmd_1)


State 57

   75 exp: exp '+' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 89
    val  go to state 33


State 58

   76 exp: exp '-' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 90
    val  go to state 33


State 59

   77 exp: exp '*' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 91
    val  go to state 33


State 60

   78 exp: exp '/' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 92
    val  go to state 33


State 61

   79 exp: exp '%' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 93
    val  go to state 33


State 62

   82 exp: exp '(' . params ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    $default  reduce using rule 85 (params)

    exp     go to state 94
    params  go to state 95
    val     go to state 33


State 63

   52 indices: '[' . exp ']' indices
   53        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 96
    val  go to state 33


State 64

   42 atr_array: exp indices . '=' rec

    '='  shift, and go to state 97


State 65

   34 atr_id: ID ADD exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 34 (atr_id)


State 66

   35 atr_recursiva: ID . '=' exp
   36              | ID . '=' atr_recursiva
   80 exp: ID . '.' ID
   86 val: ID .
   93    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 98
    '.'  shift, and go to state 83

    $default  reduce using rule 86 (val)


State 67

   33 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 33 (atr_id)


State 68

   32 atr_id: ID '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 32 (atr_id)


State 69

   40 prop: ID .
   41     | ID . '[' exp ']'
   80 exp: ID '.' ID .

    '['  shift, and go to state 99

    ADD       reduce using rule 40 (prop)
    '='       reduce using rule 40 (prop)
    '['       [reduce using rule 80 (exp)]
    $default  reduce using rule 80 (exp)


State 70

   37 atr_obj: ID '.' prop . '=' exp
   38        | ID '.' prop . ADD exp

    ADD  shift, and go to state 100
    '='  shift, and go to state 101


State 71

   43 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 102


State 72

   42 atr_array: exp . indices '=' rec
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    '['  shift, and go to state 63

    indices  go to state 64


State 73

   54 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 103
    val  go to state 33


State 74

   56 fim_decl: ',' . decl

    ID  shift, and go to state 39

    decl  go to state 104


State 75

   55 decl: ID fim_decl .

    $default  reduce using rule 55 (decl)


State 76

   65 condicional: IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo

    ')'  shift, and go to state 105


State 77

   70 condicao: exp . '>' exp
   71         | exp . '<' exp
   72         | exp . IGUAL exp
   73         | exp . DIF exp
   74         | exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    IGUAL  shift, and go to state 106
    DIF    shift, and go to state 107
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    '('    shift, and go to state 62
    '>'    shift, and go to state 108
    '<'    shift, and go to state 109

    $default  reduce using rule 74 (condicao)


State 78

   62 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 110


State 79

   63 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 39

    decl  go to state 111


State 80

   64 for_loop: FOR '(' atr . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 112


State 81

   18 funcao: FUNCTION ID empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func . '(' ')' corpo desempilha_escopo_func

    '('  shift, and go to state 113


State 82

   25 empilha_escopo_func: empilha_escopo .

    $default  reduce using rule 25 (empilha_escopo_func)


State 83

   80 exp: ID '.' . ID

    ID  shift, and go to state 114


State 84

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'
   89 val: '(' exp . ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ')'  shift, and go to state 115


State 85

   39 atr_obj: '(' exp ')' . '.' prop '=' exp
   89 val: '(' exp ')' .

    '.'  shift, and go to state 116

    $default  reduce using rule 89 (val)


State 86

   17 bloco: '{' empilha_escopo cmds . '}' desempilha_escopo

    '}'  shift, and go to state 117


State 87

   60 separador: separador ';' .

    $default  reduce using rule 60 (separador)


State 88

    2 cmds: cmd_1 separador cmds .

    $default  reduce using rule 2 (cmds)


State 89

   75 exp: exp . '+' exp
   75    | exp '+' exp .
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 75 (exp)


State 90

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   76    | exp '-' exp .
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 76 (exp)


State 91

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   77    | exp '*' exp .
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 77 (exp)


State 92

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   78    | exp '/' exp .
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 78 (exp)


State 93

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   79    | exp '%' exp .
   82    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 79 (exp)


State 94

   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'
   83 params: exp . ',' params
   84       | exp .

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ','  shift, and go to state 118

    $default  reduce using rule 84 (params)


State 95

   82 exp: exp '(' params . ')'

    ')'  shift, and go to state 119


State 96

   52 indices: '[' exp . ']' indices
   53        | '[' exp . ']'
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ']'  shift, and go to state 120


State 97

   42 atr_array: exp indices '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 121
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    atr_array  go to state 122
    rec        go to state 123
    matexp     go to state 124
    matrix     go to state 125
    exp        go to state 126
    val        go to state 33


State 98

   35 atr_recursiva: ID '=' . exp
   36              | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 66
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    atr_recursiva  go to state 127
    exp            go to state 128
    val            go to state 33


State 99

   41 prop: ID '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 129
    val  go to state 33


State 100

   38 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 130
    val  go to state 33


State 101

   37 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 131
    val  go to state 33


State 102

   43 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 132


State 103

   54 decl: ID '=' exp . fim_decl
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ','  shift, and go to state 74

    '-'       [reduce using rule 57 (fim_decl)]
    '('       [reduce using rule 57 (fim_decl)]
    $default  reduce using rule 57 (fim_decl)

    fim_decl  go to state 133


State 104

   56 fim_decl: ',' decl .

    $default  reduce using rule 56 (fim_decl)


State 105

   65 condicional: IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 134


State 106

   72 condicao: exp IGUAL . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 135
    val  go to state 33


State 107

   73 condicao: exp DIF . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 136
    val  go to state 33


State 108

   70 condicao: exp '>' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 137
    val  go to state 33


State 109

   71 condicao: exp '<' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 138
    val  go to state 33


State 110

   62 while_loop: WHILE '(' condicao ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 142
    exp          go to state 32
    val          go to state 33


State 111

   63 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 143


State 112

   64 for_loop: FOR '(' atr ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    condicao  go to state 144
    exp       go to state 77
    val       go to state 33


State 113

   18 funcao: FUNCTION ID empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' . ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 145
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48
    ')'     shift, and go to state 146

    args  go to state 147
    arg   go to state 148
    exp   go to state 149
    val   go to state 33


State 114

   80 exp: ID '.' ID .

    $default  reduce using rule 80 (exp)


State 115

   89 val: '(' exp ')' .

    $default  reduce using rule 89 (val)


State 116

   39 atr_obj: '(' exp ')' '.' . prop '=' exp

    ID  shift, and go to state 150

    prop  go to state 151


State 117

   17 bloco: '{' empilha_escopo cmds '}' . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 152


State 118

   83 params: exp ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    $default  reduce using rule 85 (params)

    exp     go to state 94
    params  go to state 153
    val     go to state 33


State 119

   82 exp: exp '(' params ')' .

    $default  reduce using rule 82 (exp)


State 120

   52 indices: '[' exp ']' . indices
   53        | '[' exp ']' .

    '['  shift, and go to state 63

    $default  reduce using rule 53 (indices)

    indices  go to state 154


State 121

   43 atr_array: ID . '[' atr ']' '=' exp
   51 matrix: ID . indices
   80 exp: ID . '.' ID
   86 val: ID .
   93    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 83
    '['  shift, and go to state 155

    '['       [reduce using rule 86 (val)]
    $default  reduce using rule 86 (val)

    indices  go to state 156


State 122

   47 rec: atr_array .

    $default  reduce using rule 47 (rec)


State 123

   42 atr_array: exp indices '=' rec .

    $default  reduce using rule 42 (atr_array)


State 124

   45 rec: matexp .
   49 matexp: matexp . '*' matexp
   50       | matexp . '+' matexp

    '+'  shift, and go to state 157
    '*'  shift, and go to state 158

    $default  reduce using rule 45 (rec)


State 125

   48 matexp: matrix .

    $default  reduce using rule 48 (matexp)


State 126

   42 atr_array: exp . indices '=' rec
   44 rec: exp .
   46    | exp . '=' rec
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '='  shift, and go to state 159
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    '['  shift, and go to state 63

    '-'       [reduce using rule 44 (rec)]
    '('       [reduce using rule 44 (rec)]
    $default  reduce using rule 44 (rec)

    indices  go to state 64


State 127

   36 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 36 (atr_recursiva)


State 128

   35 atr_recursiva: ID '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 35 (atr_recursiva)


State 129

   41 prop: ID '[' exp . ']'
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ']'  shift, and go to state 160


State 130

   38 atr_obj: ID '.' prop ADD exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 38 (atr_obj)


State 131

   37 atr_obj: ID '.' prop '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 37 (atr_obj)


State 132

   43 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 161
    val  go to state 33


State 133

   54 decl: ID '=' exp fim_decl .

    $default  reduce using rule 54 (decl)


State 134

   65 condicional: IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 162
    exp          go to state 32
    val          go to state 33


State 135

   72 condicao: exp IGUAL exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 72 (condicao)


State 136

   73 condicao: exp DIF exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 73 (condicao)


State 137

   70 condicao: exp '>' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 70 (condicao)


State 138

   71 condicao: exp '<' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 71 (condicao)


State 139

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo
   67 corpo: '{' . cmds '}'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    NUM       [reduce using rule 27 (empilha_escopo)]
    ID        [reduce using rule 27 (empilha_escopo)]
    LET       [reduce using rule 27 (empilha_escopo)]
    VAR       [reduce using rule 27 (empilha_escopo)]
    CONST     [reduce using rule 27 (empilha_escopo)]
    OBJ       [reduce using rule 27 (empilha_escopo)]
    ARRAY     [reduce using rule 27 (empilha_escopo)]
    STRING    [reduce using rule 27 (empilha_escopo)]
    IF        [reduce using rule 27 (empilha_escopo)]
    WHILE     [reduce using rule 27 (empilha_escopo)]
    FOR       [reduce using rule 27 (empilha_escopo)]
    FUNCTION  [reduce using rule 27 (empilha_escopo)]
    RETURN    [reduce using rule 27 (empilha_escopo)]
    BLOCO     [reduce using rule 27 (empilha_escopo)]
    '-'       [reduce using rule 27 (empilha_escopo)]
    '('       [reduce using rule 27 (empilha_escopo)]
    '{'       [reduce using rule 27 (empilha_escopo)]
    '}'       reduce using rule 4 (cmds)
    '}'       [reduce using rule 27 (empilha_escopo)]
    $default  reduce using rule 4 (cmds)

    cmds            go to state 163
    cmd_1           go to state 20
    cmd_2           go to state 21
    bloco           go to state 22
    funcao          go to state 23
    empilha_escopo  go to state 52
    atr             go to state 24
    atr_id          go to state 25
    atr_obj         go to state 26
    atr_array       go to state 27
    loop            go to state 28
    while_loop      go to state 29
    for_loop        go to state 30
    condicional     go to state 31
    exp             go to state 32
    val             go to state 33


State 140

   68 corpo: cmd_1 . ';'

    ';'  shift, and go to state 164


State 141

   69 corpo: cmd_2 .

    $default  reduce using rule 69 (corpo)


State 142

   62 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 62 (while_loop)


State 143

   63 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    condicao  go to state 165
    exp       go to state 77
    val       go to state 33


State 144

   64 for_loop: FOR '(' atr ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 166


State 145

   22 arg: ID .
   23    | ID . '=' exp
   80 exp: ID . '.' ID
   86 val: ID .
   93    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 167
    '.'  shift, and go to state 83

    ')'       reduce using rule 22 (arg)
    ')'       [reduce using rule 86 (val)]
    ','       reduce using rule 22 (arg)
    ','       [reduce using rule 86 (val)]
    $default  reduce using rule 86 (val)


State 146

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 168
    exp          go to state 32
    val          go to state 33


State 147

   18 funcao: FUNCTION ID empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   20 args: args . ',' arg

    ')'  shift, and go to state 169
    ','  shift, and go to state 170


State 148

   21 args: arg .

    $default  reduce using rule 21 (args)


State 149

   24 arg: exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 24 (arg)


State 150

   40 prop: ID .
   41     | ID . '[' exp ']'

    '['  shift, and go to state 99

    $default  reduce using rule 40 (prop)


State 151

   39 atr_obj: '(' exp ')' '.' prop . '=' exp

    '='  shift, and go to state 171


State 152

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo .

    $default  reduce using rule 17 (bloco)


State 153

   83 params: exp ',' params .

    $default  reduce using rule 83 (params)


State 154

   52 indices: '[' exp ']' indices .

    $default  reduce using rule 52 (indices)


State 155

   43 atr_array: ID '[' . atr ']' '=' exp
   52 indices: '[' . exp ']' indices
   53        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 71
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 172
    val        go to state 33


State 156

   51 matrix: ID indices .

    $default  reduce using rule 51 (matrix)


State 157

   50 matexp: matexp '+' . matexp

    ID  shift, and go to state 173

    matexp  go to state 174
    matrix  go to state 125


State 158

   49 matexp: matexp '*' . matexp

    ID  shift, and go to state 173

    matexp  go to state 175
    matrix  go to state 125


State 159

   46 rec: exp '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 121
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    atr_array  go to state 122
    rec        go to state 176
    matexp     go to state 124
    matrix     go to state 125
    exp        go to state 126
    val        go to state 33


State 160

   41 prop: ID '[' exp ']' .

    $default  reduce using rule 41 (prop)


State 161

   43 atr_array: ID '[' atr ']' '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 43 (atr_array)


State 162

   65 condicional: IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 177


State 163

   67 corpo: '{' cmds . '}'

    '}'  shift, and go to state 178


State 164

   68 corpo: cmd_1 ';' .

    $default  reduce using rule 68 (corpo)


State 165

   63 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 179


State 166

   64 for_loop: FOR '(' atr ';' condicao ';' . atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 180
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 72
    val        go to state 33


State 167

   23 arg: ID '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 181
    val  go to state 33


State 168

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo . desempilha_escopo_func

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo_func  go to state 182
    desempilha_escopo       go to state 183


State 169

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 184
    exp          go to state 32
    val          go to state 33


State 170

   20 args: args ',' . arg

    NUM     shift, and go to state 1
    ID      shift, and go to state 145
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    arg  go to state 185
    exp  go to state 149
    val  go to state 33


State 171

   39 atr_obj: '(' exp ')' '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 47
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 48

    exp  go to state 186
    val  go to state 33


State 172

   42 atr_array: exp . indices '=' rec
   52 indices: '[' exp . ']' indices
   53        | '[' exp . ']'
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    '['  shift, and go to state 63
    ']'  shift, and go to state 120

    indices  go to state 64


State 173

   51 matrix: ID . indices

    '['  shift, and go to state 63

    indices  go to state 156


State 174

   49 matexp: matexp . '*' matexp
   50       | matexp . '+' matexp
   50       | matexp '+' matexp .

    '*'  shift, and go to state 158

    $default  reduce using rule 50 (matexp)


State 175

   49 matexp: matexp . '*' matexp
   49       | matexp '*' matexp .
   50       | matexp . '+' matexp

    $default  reduce using rule 49 (matexp)


State 176

   46 rec: exp '=' rec .

    $default  reduce using rule 46 (rec)


State 177

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo . ELSE empilha_escopo corpo desempilha_escopo
   66            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo .

    ELSE  shift, and go to state 187

    $default  reduce using rule 66 (condicional)


State 178

   67 corpo: '{' cmds '}' .

    $default  reduce using rule 67 (corpo)


State 179

   63 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 188
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 72
    val        go to state 33


State 180

   64 for_loop: FOR '(' atr ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 189


State 181

   23 arg: ID '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 23 (arg)


State 182

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func .

    $default  reduce using rule 19 (funcao)


State 183

   26 desempilha_escopo_func: desempilha_escopo .

    $default  reduce using rule 26 (desempilha_escopo_func)


State 184

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo_func  go to state 190
    desempilha_escopo       go to state 183


State 185

   20 args: args ',' arg .

    $default  reduce using rule 20 (args)


State 186

   39 atr_obj: '(' exp ')' '.' prop '=' exp .
   75 exp: exp . '+' exp
   76    | exp . '-' exp
   77    | exp . '*' exp
   78    | exp . '/' exp
   79    | exp . '%' exp
   82    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 39 (atr_obj)


State 187

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 191


State 188

   63 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 192


State 189

   64 for_loop: FOR '(' atr ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 193
    exp          go to state 32
    val          go to state 33


State 190

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 18 (funcao)


State 191

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 194
    exp          go to state 32
    val          go to state 33


State 192

   63 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 139

    cmd_1        go to state 140
    cmd_2        go to state 141
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 195
    exp          go to state 32
    val          go to state 33


State 193

   64 for_loop: FOR '(' atr ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 64 (for_loop)


State 194

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 196


State 195

   63 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 63 (for_loop)


State 196

   65 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo .

    $default  reduce using rule 65 (condicional)

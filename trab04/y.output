Terminals unused in grammar

    '?'
    ':'


State 13 conflicts: 8 shift/reduce
State 32 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 141 conflicts: 17 shift/reduce, 1 reduce/reduce
State 148 conflicts: 2 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 separador cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | VAR decl
    8      | CONST decl
    9      | loop
   10      | exp ASM
   11      | exp
   12      | RETURN
   13      | RETURN exp

   14 cmd_2: condicional
   15      | funcao
   16      | bloco

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func

   20 args: args ',' arg
   21     | arg

   22 arg: ID
   23    | ID '=' exp
   24    | exp

   25 empilha_escopo_func: empilha_escopo

   26 desempilha_escopo_func: desempilha_escopo

   27 empilha_escopo: %empty

   28 desempilha_escopo: %empty

   29 atr: atr_id
   30    | atr_obj
   31    | atr_array

   32 atr_id: ID '=' exp
   33       | ID '=' atr_recursiva
   34       | ID ADD exp

   35 atr_recursiva: ID '=' exp
   36              | ID '=' atr_recursiva

   37 atr_obj: ID '.' prop '=' exp
   38        | ID '.' prop ADD exp

   39 prop: ID
   40     | ID '[' exp ']'

   41 atr_array: ID indices '=' rec
   42          | ID '[' atr ']' '=' exp

   43 rec: exp
   44    | matexp
   45    | exp '=' rec
   46    | atr_array

   47 matexp: matrix
   48       | matexp '*' matexp
   49       | matexp '+' matexp

   50 matrix: ID indices

   51 indices: '[' exp ']' indices
   52        | '[' exp ']'

   53 decl: ID '=' exp fim_decl
   54     | ID fim_decl

   55 fim_decl: ',' decl
   56         | %empty

   57 loop: while_loop
   58     | for_loop

   59 separador: separador ';'
   60          | %empty

   61 while_loop: WHILE '(' condicao ')' corpo

   62 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   63         | FOR '(' atr ';' condicao ';' atr ')' corpo

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo

   66 corpo: '{' cmds '}'
   67      | cmd_1 ';'
   68      | cmd_2

   69 condicao: exp '>' exp
   70         | exp '<' exp
   71         | exp IGUAL exp
   72         | exp DIF exp
   73         | exp

   74 exp: exp '+' exp
   75    | exp '-' exp
   76    | exp '*' exp
   77    | exp '/' exp
   78    | exp '%' exp
   79    | ID '.' ID
   80    | val
   81    | exp '(' params ')'

   82 params: exp ',' params
   83       | exp
   84       | %empty

   85 val: ID
   86    | NUM
   87    | '-' NUM
   88    | '(' exp ')'
   89    | OBJ
   90    | ARRAY
   91    | STRING
   92    | ID INC
   93    | BLOCO


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 78
    '(' (40) 18 19 61 62 63 64 65 81 88
    ')' (41) 18 19 61 62 63 64 65 81 88
    '*' (42) 48 76
    '+' (43) 49 74
    ',' (44) 20 55 82
    '-' (45) 75 87
    '.' (46) 37 38 79
    '/' (47) 77
    ':' (58)
    ';' (59) 59 62 63 67
    '<' (60) 70
    '=' (61) 23 32 33 35 36 37 41 42 45 53
    '>' (62) 69
    '?' (63)
    'T' (84)
    '[' (91) 40 42 51 52
    ']' (93) 40 42 51 52
    '{' (123) 17 66
    '}' (125) 17 66
    error (256)
    NUM (258) 86 87
    ID (259) 18 19 22 23 32 33 34 35 36 37 38 39 40 41 42 50 53 54 79 85 92
    LET (260) 6 62
    VAR (261) 7
    CONST (262) 8
    OBJ (263) 89
    ARRAY (264) 90
    STRING (265) 91
    ADD (266) 34 38
    IF (267) 64 65
    ELSE (268) 64
    IGUAL (269) 71
    DIF (270) 72
    INC (271) 92
    WHILE (272) 61
    FOR (273) 62 63
    FUNCTION (274) 18 19
    ASM (275) 10
    RETURN (276) 12 13
    BLOCO (277) 93


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    s (44)
        on left: 1
        on right: 0
    cmds (45)
        on left: 2 3 4
        on right: 1 2 3 17 66
    cmd_1 (46)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 2 67
    cmd_2 (47)
        on left: 14 15 16
        on right: 3 68
    bloco (48)
        on left: 17
        on right: 16
    funcao (49)
        on left: 18 19
        on right: 15
    args (50)
        on left: 20 21
        on right: 18 20
    arg (51)
        on left: 22 23 24
        on right: 20 21
    empilha_escopo_func (52)
        on left: 25
        on right: 18 19
    desempilha_escopo_func (53)
        on left: 26
        on right: 18 19
    empilha_escopo (54)
        on left: 27
        on right: 17 25 64 65
    desempilha_escopo (55)
        on left: 28
        on right: 17 26 64 65
    atr (56)
        on left: 29 30 31
        on right: 5 42 62 63
    atr_id (57)
        on left: 32 33 34
        on right: 29
    atr_recursiva (58)
        on left: 35 36
        on right: 33 36
    atr_obj (59)
        on left: 37 38
        on right: 30
    prop (60)
        on left: 39 40
        on right: 37 38
    atr_array (61)
        on left: 41 42
        on right: 31 46
    rec (62)
        on left: 43 44 45 46
        on right: 41 45
    matexp (63)
        on left: 47 48 49
        on right: 44 48 49
    matrix (64)
        on left: 50
        on right: 47
    indices (65)
        on left: 51 52
        on right: 41 50 51
    decl (66)
        on left: 53 54
        on right: 6 7 8 55 62
    fim_decl (67)
        on left: 55 56
        on right: 53 54
    loop (68)
        on left: 57 58
        on right: 9
    separador (69)
        on left: 59 60
        on right: 2 59
    while_loop (70)
        on left: 61
        on right: 57
    for_loop (71)
        on left: 62 63
        on right: 58
    condicional (72)
        on left: 64 65
        on right: 14
    corpo (73)
        on left: 66 67 68
        on right: 18 19 61 62 63 64 65
    condicao (74)
        on left: 69 70 71 72 73
        on right: 61 62 63 64 65
    exp (75)
        on left: 74 75 76 77 78 79 80 81
        on right: 10 11 13 23 24 32 34 35 37 38 40 42 43 45 51 52 53 69 70 71 72 73 74 75 76 77 78 81 82 83 88
    params (76)
        on left: 82 83 84
        on right: 81 82
    val (77)
        on left: 85 86 87 88 89 90 91 92 93
        on right: 80


State 0

    0 $accept: . s $end

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    s            go to state 18
    cmds         go to state 19
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 1

   86 val: NUM .

    $default  reduce using rule 86 (val)


State 2

   32 atr_id: ID . '=' exp
   33       | ID . '=' atr_recursiva
   34       | ID . ADD exp
   37 atr_obj: ID . '.' prop '=' exp
   38        | ID . '.' prop ADD exp
   41 atr_array: ID . indices '=' rec
   42          | ID . '[' atr ']' '=' exp
   79 exp: ID . '.' ID
   85 val: ID .
   92    | ID . INC

    ADD  shift, and go to state 34
    INC  shift, and go to state 35
    '='  shift, and go to state 36
    '.'  shift, and go to state 37
    '['  shift, and go to state 38

    $default  reduce using rule 85 (val)

    indices  go to state 39


State 3

    6 cmd_1: LET . decl

    ID  shift, and go to state 40

    decl  go to state 41


State 4

    7 cmd_1: VAR . decl

    ID  shift, and go to state 40

    decl  go to state 42


State 5

    8 cmd_1: CONST . decl

    ID  shift, and go to state 40

    decl  go to state 43


State 6

   89 val: OBJ .

    $default  reduce using rule 89 (val)


State 7

   90 val: ARRAY .

    $default  reduce using rule 90 (val)


State 8

   91 val: STRING .

    $default  reduce using rule 91 (val)


State 9

   64 condicional: IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo

    '('  shift, and go to state 44


State 10

   61 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 45


State 11

   62 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   63         | FOR . '(' atr ';' condicao ';' atr ')' corpo

    '('  shift, and go to state 46


State 12

   18 funcao: FUNCTION . ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION . ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    ID  shift, and go to state 47


State 13

   12 cmd_1: RETURN .
   13      | RETURN . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    NUM       [reduce using rule 12 (cmd_1)]
    ID        [reduce using rule 12 (cmd_1)]
    OBJ       [reduce using rule 12 (cmd_1)]
    ARRAY     [reduce using rule 12 (cmd_1)]
    STRING    [reduce using rule 12 (cmd_1)]
    BLOCO     [reduce using rule 12 (cmd_1)]
    '-'       [reduce using rule 12 (cmd_1)]
    '('       [reduce using rule 12 (cmd_1)]
    $default  reduce using rule 12 (cmd_1)

    exp  go to state 49
    val  go to state 33


State 14

   93 val: BLOCO .

    $default  reduce using rule 93 (val)


State 15

   87 val: '-' . NUM

    NUM  shift, and go to state 50


State 16

   88 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 51
    val  go to state 33


State 17

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 52


State 18

    0 $accept: s . $end

    $end  shift, and go to state 53


State 19

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 20

    2 cmds: cmd_1 . separador cmds

    $default  reduce using rule 60 (separador)

    separador  go to state 54


State 21

    3 cmds: cmd_2 . cmds

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 55
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 22

   16 cmd_2: bloco .

    $default  reduce using rule 16 (cmd_2)


State 23

   15 cmd_2: funcao .

    $default  reduce using rule 15 (cmd_2)


State 24

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 25

   29 atr: atr_id .

    $default  reduce using rule 29 (atr)


State 26

   30 atr: atr_obj .

    $default  reduce using rule 30 (atr)


State 27

   31 atr: atr_array .

    $default  reduce using rule 31 (atr)


State 28

    9 cmd_1: loop .

    $default  reduce using rule 9 (cmd_1)


State 29

   57 loop: while_loop .

    $default  reduce using rule 57 (loop)


State 30

   58 loop: for_loop .

    $default  reduce using rule 58 (loop)


State 31

   14 cmd_2: condicional .

    $default  reduce using rule 14 (cmd_2)


State 32

   10 cmd_1: exp . ASM
   11      | exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    ASM  shift, and go to state 56
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    '-'       [reduce using rule 11 (cmd_1)]
    '('       [reduce using rule 11 (cmd_1)]
    $default  reduce using rule 11 (cmd_1)


State 33

   80 exp: val .

    $default  reduce using rule 80 (exp)


State 34

   34 atr_id: ID ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 63
    val  go to state 33


State 35

   92 val: ID INC .

    $default  reduce using rule 92 (val)


State 36

   32 atr_id: ID '=' . exp
   33       | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 64
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_recursiva  go to state 65
    exp            go to state 66
    val            go to state 33


State 37

   37 atr_obj: ID '.' . prop '=' exp
   38        | ID '.' . prop ADD exp
   79 exp: ID '.' . ID

    ID  shift, and go to state 67

    prop  go to state 68


State 38

   42 atr_array: ID '[' . atr ']' '=' exp
   51 indices: '[' . exp ']' indices
   52        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 2
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 69
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 70
    val        go to state 33


State 39

   41 atr_array: ID indices . '=' rec

    '='  shift, and go to state 71


State 40

   53 decl: ID . '=' exp fim_decl
   54     | ID . fim_decl

    '='  shift, and go to state 72
    ','  shift, and go to state 73

    $default  reduce using rule 56 (fim_decl)

    fim_decl  go to state 74


State 41

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 42

    7 cmd_1: VAR decl .

    $default  reduce using rule 7 (cmd_1)


State 43

    8 cmd_1: CONST decl .

    $default  reduce using rule 8 (cmd_1)


State 44

   64 condicional: IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 75
    exp       go to state 76
    val       go to state 33


State 45

   61 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 77
    exp       go to state 76
    val       go to state 33


State 46

   62 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   63         | FOR '(' . atr ';' condicao ';' atr ')' corpo

    ID   shift, and go to state 78
    LET  shift, and go to state 79

    atr        go to state 80
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27


State 47

   18 funcao: FUNCTION ID . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID . empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo_func  go to state 81
    empilha_escopo       go to state 82


State 48

   79 exp: ID . '.' ID
   85 val: ID .
   92    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 83

    $default  reduce using rule 85 (val)


State 49

   13 cmd_1: RETURN exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    '-'       [reduce using rule 13 (cmd_1)]
    '('       [reduce using rule 13 (cmd_1)]
    $default  reduce using rule 13 (cmd_1)


State 50

   87 val: '-' NUM .

    $default  reduce using rule 87 (val)


State 51

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'
   88 val: '(' exp . ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ')'  shift, and go to state 84


State 52

   17 bloco: '{' empilha_escopo . cmds '}' desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 85
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 53

    0 $accept: s $end .

    $default  accept


State 54

    2 cmds: cmd_1 separador . cmds
   59 separador: separador . ';'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17
    ';'       shift, and go to state 86

    $default  reduce using rule 4 (cmds)

    cmds         go to state 87
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 55

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 56

   10 cmd_1: exp ASM .

    $default  reduce using rule 10 (cmd_1)


State 57

   74 exp: exp '+' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 88
    val  go to state 33


State 58

   75 exp: exp '-' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 89
    val  go to state 33


State 59

   76 exp: exp '*' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 90
    val  go to state 33


State 60

   77 exp: exp '/' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 91
    val  go to state 33


State 61

   78 exp: exp '%' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 92
    val  go to state 33


State 62

   81 exp: exp '(' . params ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 84 (params)

    exp     go to state 93
    params  go to state 94
    val     go to state 33


State 63

   34 atr_id: ID ADD exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 34 (atr_id)


State 64

   35 atr_recursiva: ID . '=' exp
   36              | ID . '=' atr_recursiva
   79 exp: ID . '.' ID
   85 val: ID .
   92    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 95
    '.'  shift, and go to state 83

    $default  reduce using rule 85 (val)


State 65

   33 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 33 (atr_id)


State 66

   32 atr_id: ID '=' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 32 (atr_id)


State 67

   39 prop: ID .
   40     | ID . '[' exp ']'
   79 exp: ID '.' ID .

    '['  shift, and go to state 96

    ADD       reduce using rule 39 (prop)
    '='       reduce using rule 39 (prop)
    $default  reduce using rule 79 (exp)


State 68

   37 atr_obj: ID '.' prop . '=' exp
   38        | ID '.' prop . ADD exp

    ADD  shift, and go to state 97
    '='  shift, and go to state 98


State 69

   42 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 99


State 70

   51 indices: '[' exp . ']' indices
   52        | '[' exp . ']'
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ']'  shift, and go to state 100


State 71

   41 atr_array: ID indices '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 101
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_array  go to state 102
    rec        go to state 103
    matexp     go to state 104
    matrix     go to state 105
    exp        go to state 106
    val        go to state 33


State 72

   53 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 107
    val  go to state 33


State 73

   55 fim_decl: ',' . decl

    ID  shift, and go to state 40

    decl  go to state 108


State 74

   54 decl: ID fim_decl .

    $default  reduce using rule 54 (decl)


State 75

   64 condicional: IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo

    ')'  shift, and go to state 109


State 76

   69 condicao: exp . '>' exp
   70         | exp . '<' exp
   71         | exp . IGUAL exp
   72         | exp . DIF exp
   73         | exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    IGUAL  shift, and go to state 110
    DIF    shift, and go to state 111
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    '('    shift, and go to state 62
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113

    $default  reduce using rule 73 (condicao)


State 77

   61 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 114


State 78

   32 atr_id: ID . '=' exp
   33       | ID . '=' atr_recursiva
   34       | ID . ADD exp
   37 atr_obj: ID . '.' prop '=' exp
   38        | ID . '.' prop ADD exp
   41 atr_array: ID . indices '=' rec
   42          | ID . '[' atr ']' '=' exp

    ADD  shift, and go to state 34
    '='  shift, and go to state 36
    '.'  shift, and go to state 115
    '['  shift, and go to state 38

    indices  go to state 39


State 79

   62 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 40

    decl  go to state 116


State 80

   63 for_loop: FOR '(' atr . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 117


State 81

   18 funcao: FUNCTION ID empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func . '(' ')' corpo desempilha_escopo_func

    '('  shift, and go to state 118


State 82

   25 empilha_escopo_func: empilha_escopo .

    $default  reduce using rule 25 (empilha_escopo_func)


State 83

   79 exp: ID '.' . ID

    ID  shift, and go to state 119


State 84

   88 val: '(' exp ')' .

    $default  reduce using rule 88 (val)


State 85

   17 bloco: '{' empilha_escopo cmds . '}' desempilha_escopo

    '}'  shift, and go to state 120


State 86

   59 separador: separador ';' .

    $default  reduce using rule 59 (separador)


State 87

    2 cmds: cmd_1 separador cmds .

    $default  reduce using rule 2 (cmds)


State 88

   74 exp: exp . '+' exp
   74    | exp '+' exp .
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 74 (exp)


State 89

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   75    | exp '-' exp .
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 75 (exp)


State 90

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   76    | exp '*' exp .
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 76 (exp)


State 91

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   77    | exp '/' exp .
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 77 (exp)


State 92

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   78    | exp '%' exp .
   81    | exp . '(' params ')'

    '('  shift, and go to state 62

    $default  reduce using rule 78 (exp)


State 93

   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'
   82 params: exp . ',' params
   83       | exp .

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ','  shift, and go to state 121

    $default  reduce using rule 83 (params)


State 94

   81 exp: exp '(' params . ')'

    ')'  shift, and go to state 122


State 95

   35 atr_recursiva: ID '=' . exp
   36              | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 64
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_recursiva  go to state 123
    exp            go to state 124
    val            go to state 33


State 96

   40 prop: ID '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 125
    val  go to state 33


State 97

   38 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 126
    val  go to state 33


State 98

   37 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 127
    val  go to state 33


State 99

   42 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 128


State 100

   51 indices: '[' exp ']' . indices
   52        | '[' exp ']' .

    '['  shift, and go to state 129

    $default  reduce using rule 52 (indices)

    indices  go to state 130


State 101

   41 atr_array: ID . indices '=' rec
   42          | ID . '[' atr ']' '=' exp
   50 matrix: ID . indices
   79 exp: ID . '.' ID
   85 val: ID .
   92    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 83
    '['  shift, and go to state 38

    $default  reduce using rule 85 (val)

    indices  go to state 131


State 102

   46 rec: atr_array .

    $default  reduce using rule 46 (rec)


State 103

   41 atr_array: ID indices '=' rec .

    $default  reduce using rule 41 (atr_array)


State 104

   44 rec: matexp .
   48 matexp: matexp . '*' matexp
   49       | matexp . '+' matexp

    '+'  shift, and go to state 132
    '*'  shift, and go to state 133

    $default  reduce using rule 44 (rec)


State 105

   47 matexp: matrix .

    $default  reduce using rule 47 (matexp)


State 106

   43 rec: exp .
   45    | exp . '=' rec
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '='  shift, and go to state 134
    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    '-'       [reduce using rule 43 (rec)]
    '('       [reduce using rule 43 (rec)]
    $default  reduce using rule 43 (rec)


State 107

   53 decl: ID '=' exp . fim_decl
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ','  shift, and go to state 73

    '-'       [reduce using rule 56 (fim_decl)]
    '('       [reduce using rule 56 (fim_decl)]
    $default  reduce using rule 56 (fim_decl)

    fim_decl  go to state 135


State 108

   55 fim_decl: ',' decl .

    $default  reduce using rule 55 (fim_decl)


State 109

   64 condicional: IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 136


State 110

   71 condicao: exp IGUAL . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 137
    val  go to state 33


State 111

   72 condicao: exp DIF . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 138
    val  go to state 33


State 112

   69 condicao: exp '>' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 139
    val  go to state 33


State 113

   70 condicao: exp '<' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 140
    val  go to state 33


State 114

   61 while_loop: WHILE '(' condicao ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 144
    exp          go to state 32
    val          go to state 33


State 115

   37 atr_obj: ID '.' . prop '=' exp
   38        | ID '.' . prop ADD exp

    ID  shift, and go to state 145

    prop  go to state 68


State 116

   62 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 146


State 117

   63 for_loop: FOR '(' atr ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 147
    exp       go to state 76
    val       go to state 33


State 118

   18 funcao: FUNCTION ID empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' . ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 148
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16
    ')'     shift, and go to state 149

    args  go to state 150
    arg   go to state 151
    exp   go to state 152
    val   go to state 33


State 119

   79 exp: ID '.' ID .

    $default  reduce using rule 79 (exp)


State 120

   17 bloco: '{' empilha_escopo cmds '}' . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 153


State 121

   82 params: exp ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 84 (params)

    exp     go to state 93
    params  go to state 154
    val     go to state 33


State 122

   81 exp: exp '(' params ')' .

    $default  reduce using rule 81 (exp)


State 123

   36 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 36 (atr_recursiva)


State 124

   35 atr_recursiva: ID '=' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 35 (atr_recursiva)


State 125

   40 prop: ID '[' exp . ']'
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62
    ']'  shift, and go to state 155


State 126

   38 atr_obj: ID '.' prop ADD exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 38 (atr_obj)


State 127

   37 atr_obj: ID '.' prop '=' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 37 (atr_obj)


State 128

   42 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 156
    val  go to state 33


State 129

   51 indices: '[' . exp ']' indices
   52        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 70
    val  go to state 33


State 130

   51 indices: '[' exp ']' indices .

    $default  reduce using rule 51 (indices)


State 131

   41 atr_array: ID indices . '=' rec
   50 matrix: ID indices .

    '='  shift, and go to state 71

    $default  reduce using rule 50 (matrix)


State 132

   49 matexp: matexp '+' . matexp

    ID  shift, and go to state 157

    matexp  go to state 158
    matrix  go to state 105


State 133

   48 matexp: matexp '*' . matexp

    ID  shift, and go to state 157

    matexp  go to state 159
    matrix  go to state 105


State 134

   45 rec: exp '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 101
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_array  go to state 102
    rec        go to state 160
    matexp     go to state 104
    matrix     go to state 105
    exp        go to state 106
    val        go to state 33


State 135

   53 decl: ID '=' exp fim_decl .

    $default  reduce using rule 53 (decl)


State 136

   64 condicional: IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 161
    exp          go to state 32
    val          go to state 33


State 137

   71 condicao: exp IGUAL exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 71 (condicao)


State 138

   72 condicao: exp DIF exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 72 (condicao)


State 139

   69 condicao: exp '>' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 69 (condicao)


State 140

   70 condicao: exp '<' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 70 (condicao)


State 141

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo
   66 corpo: '{' . cmds '}'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    NUM       [reduce using rule 27 (empilha_escopo)]
    ID        [reduce using rule 27 (empilha_escopo)]
    LET       [reduce using rule 27 (empilha_escopo)]
    VAR       [reduce using rule 27 (empilha_escopo)]
    CONST     [reduce using rule 27 (empilha_escopo)]
    OBJ       [reduce using rule 27 (empilha_escopo)]
    ARRAY     [reduce using rule 27 (empilha_escopo)]
    STRING    [reduce using rule 27 (empilha_escopo)]
    IF        [reduce using rule 27 (empilha_escopo)]
    WHILE     [reduce using rule 27 (empilha_escopo)]
    FOR       [reduce using rule 27 (empilha_escopo)]
    FUNCTION  [reduce using rule 27 (empilha_escopo)]
    RETURN    [reduce using rule 27 (empilha_escopo)]
    BLOCO     [reduce using rule 27 (empilha_escopo)]
    '-'       [reduce using rule 27 (empilha_escopo)]
    '('       [reduce using rule 27 (empilha_escopo)]
    '{'       [reduce using rule 27 (empilha_escopo)]
    '}'       reduce using rule 4 (cmds)
    '}'       [reduce using rule 27 (empilha_escopo)]
    $default  reduce using rule 4 (cmds)

    cmds            go to state 162
    cmd_1           go to state 20
    cmd_2           go to state 21
    bloco           go to state 22
    funcao          go to state 23
    empilha_escopo  go to state 52
    atr             go to state 24
    atr_id          go to state 25
    atr_obj         go to state 26
    atr_array       go to state 27
    loop            go to state 28
    while_loop      go to state 29
    for_loop        go to state 30
    condicional     go to state 31
    exp             go to state 32
    val             go to state 33


State 142

   67 corpo: cmd_1 . ';'

    ';'  shift, and go to state 163


State 143

   68 corpo: cmd_2 .

    $default  reduce using rule 68 (corpo)


State 144

   61 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 61 (while_loop)


State 145

   39 prop: ID .
   40     | ID . '[' exp ']'

    '['  shift, and go to state 96

    $default  reduce using rule 39 (prop)


State 146

   62 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 164
    exp       go to state 76
    val       go to state 33


State 147

   63 for_loop: FOR '(' atr ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 165


State 148

   22 arg: ID .
   23    | ID . '=' exp
   79 exp: ID . '.' ID
   85 val: ID .
   92    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 166
    '.'  shift, and go to state 83

    ')'       reduce using rule 22 (arg)
    ')'       [reduce using rule 85 (val)]
    ','       reduce using rule 22 (arg)
    ','       [reduce using rule 85 (val)]
    $default  reduce using rule 85 (val)


State 149

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 167
    exp          go to state 32
    val          go to state 33


State 150

   18 funcao: FUNCTION ID empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   20 args: args . ',' arg

    ')'  shift, and go to state 168
    ','  shift, and go to state 169


State 151

   21 args: arg .

    $default  reduce using rule 21 (args)


State 152

   24 arg: exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 24 (arg)


State 153

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo .

    $default  reduce using rule 17 (bloco)


State 154

   82 params: exp ',' params .

    $default  reduce using rule 82 (params)


State 155

   40 prop: ID '[' exp ']' .

    $default  reduce using rule 40 (prop)


State 156

   42 atr_array: ID '[' atr ']' '=' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 42 (atr_array)


State 157

   50 matrix: ID . indices

    '['  shift, and go to state 129

    indices  go to state 170


State 158

   48 matexp: matexp . '*' matexp
   49       | matexp . '+' matexp
   49       | matexp '+' matexp .

    '*'  shift, and go to state 133

    $default  reduce using rule 49 (matexp)


State 159

   48 matexp: matexp . '*' matexp
   48       | matexp '*' matexp .
   49       | matexp . '+' matexp

    $default  reduce using rule 48 (matexp)


State 160

   45 rec: exp '=' rec .

    $default  reduce using rule 45 (rec)


State 161

   64 condicional: IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 171


State 162

   66 corpo: '{' cmds . '}'

    '}'  shift, and go to state 172


State 163

   67 corpo: cmd_1 ';' .

    $default  reduce using rule 67 (corpo)


State 164

   62 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 173


State 165

   63 for_loop: FOR '(' atr ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 78

    atr        go to state 174
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27


State 166

   23 arg: ID '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 48
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 175
    val  go to state 33


State 167

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo . desempilha_escopo_func

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo_func  go to state 176
    desempilha_escopo       go to state 177


State 168

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 178
    exp          go to state 32
    val          go to state 33


State 169

   20 args: args ',' . arg

    NUM     shift, and go to state 1
    ID      shift, and go to state 148
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    arg  go to state 179
    exp  go to state 152
    val  go to state 33


State 170

   50 matrix: ID indices .

    $default  reduce using rule 50 (matrix)


State 171

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo . ELSE empilha_escopo corpo desempilha_escopo
   65            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo .

    ELSE  shift, and go to state 180

    $default  reduce using rule 65 (condicional)


State 172

   66 corpo: '{' cmds '}' .

    $default  reduce using rule 66 (corpo)


State 173

   62 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 78

    atr        go to state 181
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27


State 174

   63 for_loop: FOR '(' atr ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 182


State 175

   23 arg: ID '=' exp .
   74 exp: exp . '+' exp
   75    | exp . '-' exp
   76    | exp . '*' exp
   77    | exp . '/' exp
   78    | exp . '%' exp
   81    | exp . '(' params ')'

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 23 (arg)


State 176

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func .

    $default  reduce using rule 19 (funcao)


State 177

   26 desempilha_escopo_func: desempilha_escopo .

    $default  reduce using rule 26 (desempilha_escopo_func)


State 178

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo_func  go to state 183
    desempilha_escopo       go to state 177


State 179

   20 args: args ',' arg .

    $default  reduce using rule 20 (args)


State 180

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 27 (empilha_escopo)

    empilha_escopo  go to state 184


State 181

   62 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 185


State 182

   63 for_loop: FOR '(' atr ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 186
    exp          go to state 32
    val          go to state 33


State 183

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 18 (funcao)


State 184

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 187
    exp          go to state 32
    val          go to state 33


State 185

   62 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 141

    cmd_1        go to state 142
    cmd_2        go to state 143
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 188
    exp          go to state 32
    val          go to state 33


State 186

   63 for_loop: FOR '(' atr ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 63 (for_loop)


State 187

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 28 (desempilha_escopo)

    desempilha_escopo  go to state 189


State 188

   62 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 62 (for_loop)


State 189

   64 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo .

    $default  reduce using rule 64 (condicional)

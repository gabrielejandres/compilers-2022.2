Terminals unused in grammar

    '?'


State 13 conflicts: 8 shift/reduce
State 32 conflicts: 2 shift/reduce
State 51 conflicts: 2 shift/reduce
State 66 conflicts: 22 reduce/reduce
State 67 conflicts: 2 shift/reduce
State 113 conflicts: 2 shift/reduce
State 118 conflicts: 2 shift/reduce
State 158 conflicts: 17 shift/reduce, 1 reduce/reduce
State 165 conflicts: 2 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 separador cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | VAR decl
    8      | CONST decl
    9      | loop
   10      | exp ASM
   11      | exp
   12      | RETURN
   13      | RETURN exp

   14 cmd_2: condicional
   15      | funcao
   16      | bloco

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func
   20       | ID LAMBDA_NOVO_OBJ
   21       | ID ARROW BLOCO
   22       | ID ARROW exp

   23 args: args ',' arg
   24     | arg

   25 arg: ID
   26    | ID '=' exp
   27    | exp

   28 empilha_escopo_func: empilha_escopo

   29 desempilha_escopo_func: desempilha_escopo

   30 empilha_escopo: %empty

   31 desempilha_escopo: %empty

   32 atr: atr_id
   33    | atr_obj
   34    | atr_array

   35 atr_id: ID '=' exp
   36       | ID '=' atr_recursiva
   37       | ID ADD exp

   38 atr_recursiva: ID '=' exp
   39              | ID '=' atr_recursiva

   40 atr_obj: ID '.' prop '=' exp
   41        | ID '.' prop ADD exp

   42 prop: ID
   43     | ID '[' exp ']'

   44 atr_array: ID indices '=' rec
   45          | ID '[' atr ']' '=' exp

   46 rec: exp
   47    | matexp
   48    | exp '=' rec
   49    | atr_array

   50 matexp: matrix
   51       | matexp '*' matexp
   52       | matexp '+' matexp

   53 matrix: ID indices

   54 indices: '[' exp ']' indices
   55        | '[' exp ']'

   56 decl: ID '=' exp fim_decl
   57     | ID fim_decl
   58     | ID '=' funcao fim_decl
   59     | ID '=' objeto fim_decl

   60 objeto: '{' corpo_obj '}'

   61 corpo_obj: ID ':' exp ',' corpo_obj
   62          | ID ':' exp
   63          | ID ':' objeto

   64 fim_decl: ',' decl
   65         | %empty

   66 loop: while_loop
   67     | for_loop

   68 separador: separador ';'
   69          | %empty

   70 while_loop: WHILE '(' condicao ')' corpo

   71 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   72         | FOR '(' atr ';' condicao ';' atr ')' corpo
   73         | FOR '(' atr ';' condicao ';' val ')' OBJ

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo

   76 corpo: '{' cmds '}'
   77      | cmd_1 ';'
   78      | cmd_2

   79 condicao: exp '>' exp
   80         | exp '<' exp
   81         | exp IGUAL exp
   82         | exp DIF exp
   83         | exp

   84 exp: exp '+' exp
   85    | exp '-' exp
   86    | exp '*' exp
   87    | exp '/' exp
   88    | exp '%' exp
   89    | ID '.' ID
   90    | val
   91    | exp '(' params ')'

   92 params: exp ',' params
   93       | exp
   94       | %empty
   95       | matrix ',' params

   96 val: ID
   97    | NUM
   98    | '-' NUM
   99    | '(' exp ')'
  100    | OBJ
  101    | ARRAY
  102    | STRING
  103    | ID INC
  104    | BLOCO


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 88
    '(' (40) 18 19 70 71 72 73 74 75 91 99
    ')' (41) 18 19 70 71 72 73 74 75 91 99
    '*' (42) 51 86
    '+' (43) 52 84
    ',' (44) 23 61 64 92 95
    '-' (45) 85 98
    '.' (46) 40 41 89
    '/' (47) 87
    ':' (58) 61 62 63
    ';' (59) 68 71 72 73 77
    '<' (60) 80
    '=' (61) 26 35 36 38 39 40 44 45 48 56 58 59
    '>' (62) 79
    '?' (63)
    'T' (84)
    '[' (91) 43 45 54 55
    ']' (93) 43 45 54 55
    '{' (123) 17 60 76
    '}' (125) 17 60 76
    error (256)
    NUM (258) 97 98
    ID (259) 18 19 20 21 22 25 26 35 36 37 38 39 40 41 42 43 44 45 53 56 57 58 59 61 62 63 89 96 103
    LET (260) 6 71
    VAR (261) 7
    CONST (262) 8
    OBJ (263) 73 100
    ARRAY (264) 101
    STRING (265) 102
    ADD (266) 37 41
    IF (267) 74 75
    ELSE (268) 74
    IGUAL (269) 81
    DIF (270) 82
    INC (271) 103
    WHILE (272) 70
    FOR (273) 71 72 73
    FUNCTION (274) 18 19
    ASM (275) 10
    RETURN (276) 12 13
    BLOCO (277) 21 104
    LAMBDA_NOVO_OBJ (278) 20
    ARROW (279) 21 22


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    s (46)
        on left: 1
        on right: 0
    cmds (47)
        on left: 2 3 4
        on right: 1 2 3 17 76
    cmd_1 (48)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 2 77
    cmd_2 (49)
        on left: 14 15 16
        on right: 3 78
    bloco (50)
        on left: 17
        on right: 16
    funcao (51)
        on left: 18 19 20 21 22
        on right: 15 58
    args (52)
        on left: 23 24
        on right: 18 23
    arg (53)
        on left: 25 26 27
        on right: 23 24
    empilha_escopo_func (54)
        on left: 28
        on right: 18 19
    desempilha_escopo_func (55)
        on left: 29
        on right: 18 19
    empilha_escopo (56)
        on left: 30
        on right: 17 28 74 75
    desempilha_escopo (57)
        on left: 31
        on right: 17 29 74 75
    atr (58)
        on left: 32 33 34
        on right: 5 45 71 72 73
    atr_id (59)
        on left: 35 36 37
        on right: 32
    atr_recursiva (60)
        on left: 38 39
        on right: 36 39
    atr_obj (61)
        on left: 40 41
        on right: 33
    prop (62)
        on left: 42 43
        on right: 40 41
    atr_array (63)
        on left: 44 45
        on right: 34 49
    rec (64)
        on left: 46 47 48 49
        on right: 44 48
    matexp (65)
        on left: 50 51 52
        on right: 47 51 52
    matrix (66)
        on left: 53
        on right: 50 95
    indices (67)
        on left: 54 55
        on right: 44 53 54
    decl (68)
        on left: 56 57 58 59
        on right: 6 7 8 64 71
    objeto (69)
        on left: 60
        on right: 59 63
    corpo_obj (70)
        on left: 61 62 63
        on right: 60 61
    fim_decl (71)
        on left: 64 65
        on right: 56 57 58 59
    loop (72)
        on left: 66 67
        on right: 9
    separador (73)
        on left: 68 69
        on right: 2 68
    while_loop (74)
        on left: 70
        on right: 66
    for_loop (75)
        on left: 71 72 73
        on right: 67
    condicional (76)
        on left: 74 75
        on right: 14
    corpo (77)
        on left: 76 77 78
        on right: 18 19 70 71 72 74 75
    condicao (78)
        on left: 79 80 81 82 83
        on right: 70 71 72 73 74 75
    exp (79)
        on left: 84 85 86 87 88 89 90 91
        on right: 10 11 13 22 26 27 35 37 38 40 41 43 45 46 48 54 55 56 61 62 79 80 81 82 83 84 85 86 87 88 91 92 93 99
    params (80)
        on left: 92 93 94 95
        on right: 91 92 95
    val (81)
        on left: 96 97 98 99 100 101 102 103 104
        on right: 73 90


State 0

    0 $accept: . s $end

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    s            go to state 18
    cmds         go to state 19
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 1

   97 val: NUM .

    $default  reduce using rule 97 (val)


State 2

   20 funcao: ID . LAMBDA_NOVO_OBJ
   21       | ID . ARROW BLOCO
   22       | ID . ARROW exp
   35 atr_id: ID . '=' exp
   36       | ID . '=' atr_recursiva
   37       | ID . ADD exp
   40 atr_obj: ID . '.' prop '=' exp
   41        | ID . '.' prop ADD exp
   44 atr_array: ID . indices '=' rec
   45          | ID . '[' atr ']' '=' exp
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    ADD              shift, and go to state 34
    INC              shift, and go to state 35
    LAMBDA_NOVO_OBJ  shift, and go to state 36
    ARROW            shift, and go to state 37
    '='              shift, and go to state 38
    '.'              shift, and go to state 39
    '['              shift, and go to state 40

    $default  reduce using rule 96 (val)

    indices  go to state 41


State 3

    6 cmd_1: LET . decl

    ID  shift, and go to state 42

    decl  go to state 43


State 4

    7 cmd_1: VAR . decl

    ID  shift, and go to state 42

    decl  go to state 44


State 5

    8 cmd_1: CONST . decl

    ID  shift, and go to state 42

    decl  go to state 45


State 6

  100 val: OBJ .

    $default  reduce using rule 100 (val)


State 7

  101 val: ARRAY .

    $default  reduce using rule 101 (val)


State 8

  102 val: STRING .

    $default  reduce using rule 102 (val)


State 9

   74 condicional: IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo

    '('  shift, and go to state 46


State 10

   70 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 47


State 11

   71 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   72         | FOR . '(' atr ';' condicao ';' atr ')' corpo
   73         | FOR . '(' atr ';' condicao ';' val ')' OBJ

    '('  shift, and go to state 48


State 12

   18 funcao: FUNCTION . ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION . ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    ID  shift, and go to state 49


State 13

   12 cmd_1: RETURN .
   13      | RETURN . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    NUM       [reduce using rule 12 (cmd_1)]
    ID        [reduce using rule 12 (cmd_1)]
    OBJ       [reduce using rule 12 (cmd_1)]
    ARRAY     [reduce using rule 12 (cmd_1)]
    STRING    [reduce using rule 12 (cmd_1)]
    BLOCO     [reduce using rule 12 (cmd_1)]
    '-'       [reduce using rule 12 (cmd_1)]
    '('       [reduce using rule 12 (cmd_1)]
    $default  reduce using rule 12 (cmd_1)

    exp  go to state 51
    val  go to state 33


State 14

  104 val: BLOCO .

    $default  reduce using rule 104 (val)


State 15

   98 val: '-' . NUM

    NUM  shift, and go to state 52


State 16

   99 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 53
    val  go to state 33


State 17

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo

    $default  reduce using rule 30 (empilha_escopo)

    empilha_escopo  go to state 54


State 18

    0 $accept: s . $end

    $end  shift, and go to state 55


State 19

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 20

    2 cmds: cmd_1 . separador cmds

    $default  reduce using rule 69 (separador)

    separador  go to state 56


State 21

    3 cmds: cmd_2 . cmds

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 57
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 22

   16 cmd_2: bloco .

    $default  reduce using rule 16 (cmd_2)


State 23

   15 cmd_2: funcao .

    $default  reduce using rule 15 (cmd_2)


State 24

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 25

   32 atr: atr_id .

    $default  reduce using rule 32 (atr)


State 26

   33 atr: atr_obj .

    $default  reduce using rule 33 (atr)


State 27

   34 atr: atr_array .

    $default  reduce using rule 34 (atr)


State 28

    9 cmd_1: loop .

    $default  reduce using rule 9 (cmd_1)


State 29

   66 loop: while_loop .

    $default  reduce using rule 66 (loop)


State 30

   67 loop: for_loop .

    $default  reduce using rule 67 (loop)


State 31

   14 cmd_2: condicional .

    $default  reduce using rule 14 (cmd_2)


State 32

   10 cmd_1: exp . ASM
   11      | exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    ASM  shift, and go to state 58
    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    '-'       [reduce using rule 11 (cmd_1)]
    '('       [reduce using rule 11 (cmd_1)]
    $default  reduce using rule 11 (cmd_1)


State 33

   90 exp: val .

    $default  reduce using rule 90 (exp)


State 34

   37 atr_id: ID ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 65
    val  go to state 33


State 35

  103 val: ID INC .

    $default  reduce using rule 103 (val)


State 36

   20 funcao: ID LAMBDA_NOVO_OBJ .

    $default  reduce using rule 20 (funcao)


State 37

   21 funcao: ID ARROW . BLOCO
   22       | ID ARROW . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 66
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 67
    val  go to state 33


State 38

   35 atr_id: ID '=' . exp
   36       | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 68
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_recursiva  go to state 69
    exp            go to state 70
    val            go to state 33


State 39

   40 atr_obj: ID '.' . prop '=' exp
   41        | ID '.' . prop ADD exp
   89 exp: ID '.' . ID

    ID  shift, and go to state 71

    prop  go to state 72


State 40

   45 atr_array: ID '[' . atr ']' '=' exp
   54 indices: '[' . exp ']' indices
   55        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 73
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 74
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    exp        go to state 75
    val        go to state 33


State 41

   44 atr_array: ID indices . '=' rec

    '='  shift, and go to state 76


State 42

   56 decl: ID . '=' exp fim_decl
   57     | ID . fim_decl
   58     | ID . '=' funcao fim_decl
   59     | ID . '=' objeto fim_decl

    '='  shift, and go to state 77
    ','  shift, and go to state 78

    $default  reduce using rule 65 (fim_decl)

    fim_decl  go to state 79


State 43

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 44

    7 cmd_1: VAR decl .

    $default  reduce using rule 7 (cmd_1)


State 45

    8 cmd_1: CONST decl .

    $default  reduce using rule 8 (cmd_1)


State 46

   74 condicional: IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 80
    exp       go to state 81
    val       go to state 33


State 47

   70 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 82
    exp       go to state 81
    val       go to state 33


State 48

   71 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   72         | FOR '(' . atr ';' condicao ';' atr ')' corpo
   73         | FOR '(' . atr ';' condicao ';' val ')' OBJ

    ID   shift, and go to state 83
    LET  shift, and go to state 84

    atr        go to state 85
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27


State 49

   18 funcao: FUNCTION ID . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID . empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    $default  reduce using rule 30 (empilha_escopo)

    empilha_escopo_func  go to state 86
    empilha_escopo       go to state 87


State 50

   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 88

    $default  reduce using rule 96 (val)


State 51

   13 cmd_1: RETURN exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    '-'       [reduce using rule 13 (cmd_1)]
    '('       [reduce using rule 13 (cmd_1)]
    $default  reduce using rule 13 (cmd_1)


State 52

   98 val: '-' NUM .

    $default  reduce using rule 98 (val)


State 53

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'
   99 val: '(' exp . ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ')'  shift, and go to state 89


State 54

   17 bloco: '{' empilha_escopo . cmds '}' desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 4 (cmds)

    cmds         go to state 90
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 55

    0 $accept: s $end .

    $default  accept


State 56

    2 cmds: cmd_1 separador . cmds
   68 separador: separador . ';'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17
    ';'       shift, and go to state 91

    $default  reduce using rule 4 (cmds)

    cmds         go to state 92
    cmd_1        go to state 20
    cmd_2        go to state 21
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    exp          go to state 32
    val          go to state 33


State 57

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 58

   10 cmd_1: exp ASM .

    $default  reduce using rule 10 (cmd_1)


State 59

   84 exp: exp '+' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 93
    val  go to state 33


State 60

   85 exp: exp '-' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 94
    val  go to state 33


State 61

   86 exp: exp '*' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 95
    val  go to state 33


State 62

   87 exp: exp '/' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 96
    val  go to state 33


State 63

   88 exp: exp '%' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 97
    val  go to state 33


State 64

   91 exp: exp '(' . params ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 98
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 94 (params)

    matrix  go to state 99
    exp     go to state 100
    params  go to state 101
    val     go to state 33


State 65

   37 atr_id: ID ADD exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 37 (atr_id)


State 66

   21 funcao: ID ARROW BLOCO .
  104 val: BLOCO .

    $end      reduce using rule 21 (funcao)
    $end      [reduce using rule 104 (val)]
    NUM       reduce using rule 21 (funcao)
    NUM       [reduce using rule 104 (val)]
    ID        reduce using rule 21 (funcao)
    ID        [reduce using rule 104 (val)]
    LET       reduce using rule 21 (funcao)
    LET       [reduce using rule 104 (val)]
    VAR       reduce using rule 21 (funcao)
    VAR       [reduce using rule 104 (val)]
    CONST     reduce using rule 21 (funcao)
    CONST     [reduce using rule 104 (val)]
    OBJ       reduce using rule 21 (funcao)
    OBJ       [reduce using rule 104 (val)]
    ARRAY     reduce using rule 21 (funcao)
    ARRAY     [reduce using rule 104 (val)]
    STRING    reduce using rule 21 (funcao)
    STRING    [reduce using rule 104 (val)]
    IF        reduce using rule 21 (funcao)
    IF        [reduce using rule 104 (val)]
    ELSE      reduce using rule 21 (funcao)
    ELSE      [reduce using rule 104 (val)]
    WHILE     reduce using rule 21 (funcao)
    WHILE     [reduce using rule 104 (val)]
    FOR       reduce using rule 21 (funcao)
    FOR       [reduce using rule 104 (val)]
    FUNCTION  reduce using rule 21 (funcao)
    FUNCTION  [reduce using rule 104 (val)]
    RETURN    reduce using rule 21 (funcao)
    RETURN    [reduce using rule 104 (val)]
    BLOCO     reduce using rule 21 (funcao)
    BLOCO     [reduce using rule 104 (val)]
    '+'       reduce using rule 104 (val)
    '-'       reduce using rule 21 (funcao)
    '-'       [reduce using rule 104 (val)]
    '*'       reduce using rule 104 (val)
    '/'       reduce using rule 104 (val)
    '%'       reduce using rule 104 (val)
    '('       reduce using rule 21 (funcao)
    '('       [reduce using rule 104 (val)]
    '{'       reduce using rule 21 (funcao)
    '{'       [reduce using rule 104 (val)]
    '}'       reduce using rule 21 (funcao)
    '}'       [reduce using rule 104 (val)]
    ','       reduce using rule 21 (funcao)
    ','       [reduce using rule 104 (val)]
    ';'       reduce using rule 21 (funcao)
    ';'       [reduce using rule 104 (val)]
    $default  reduce using rule 21 (funcao)


State 67

   22 funcao: ID ARROW exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    '-'       [reduce using rule 22 (funcao)]
    '('       [reduce using rule 22 (funcao)]
    $default  reduce using rule 22 (funcao)


State 68

   38 atr_recursiva: ID . '=' exp
   39              | ID . '=' atr_recursiva
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 102
    '.'  shift, and go to state 88

    $default  reduce using rule 96 (val)


State 69

   36 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 36 (atr_id)


State 70

   35 atr_id: ID '=' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 35 (atr_id)


State 71

   42 prop: ID .
   43     | ID . '[' exp ']'
   89 exp: ID '.' ID .

    '['  shift, and go to state 103

    ADD       reduce using rule 42 (prop)
    '='       reduce using rule 42 (prop)
    $default  reduce using rule 89 (exp)


State 72

   40 atr_obj: ID '.' prop . '=' exp
   41        | ID '.' prop . ADD exp

    ADD  shift, and go to state 104
    '='  shift, and go to state 105


State 73

   35 atr_id: ID . '=' exp
   36       | ID . '=' atr_recursiva
   37       | ID . ADD exp
   40 atr_obj: ID . '.' prop '=' exp
   41        | ID . '.' prop ADD exp
   44 atr_array: ID . indices '=' rec
   45          | ID . '[' atr ']' '=' exp
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    ADD  shift, and go to state 34
    INC  shift, and go to state 35
    '='  shift, and go to state 38
    '.'  shift, and go to state 39
    '['  shift, and go to state 40

    $default  reduce using rule 96 (val)

    indices  go to state 41


State 74

   45 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 106


State 75

   54 indices: '[' exp . ']' indices
   55        | '[' exp . ']'
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ']'  shift, and go to state 107


State 76

   44 atr_array: ID indices '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 108
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_array  go to state 109
    rec        go to state 110
    matexp     go to state 111
    matrix     go to state 112
    exp        go to state 113
    val        go to state 33


State 77

   56 decl: ID '=' . exp fim_decl
   58     | ID '=' . funcao fim_decl
   59     | ID '=' . objeto fim_decl

    NUM       shift, and go to state 1
    ID        shift, and go to state 114
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    FUNCTION  shift, and go to state 12
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 115

    funcao  go to state 116
    objeto  go to state 117
    exp     go to state 118
    val     go to state 33


State 78

   64 fim_decl: ',' . decl

    ID  shift, and go to state 42

    decl  go to state 119


State 79

   57 decl: ID fim_decl .

    $default  reduce using rule 57 (decl)


State 80

   74 condicional: IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo

    ')'  shift, and go to state 120


State 81

   79 condicao: exp . '>' exp
   80         | exp . '<' exp
   81         | exp . IGUAL exp
   82         | exp . DIF exp
   83         | exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    IGUAL  shift, and go to state 121
    DIF    shift, and go to state 122
    '+'    shift, and go to state 59
    '-'    shift, and go to state 60
    '*'    shift, and go to state 61
    '/'    shift, and go to state 62
    '%'    shift, and go to state 63
    '('    shift, and go to state 64
    '>'    shift, and go to state 123
    '<'    shift, and go to state 124

    $default  reduce using rule 83 (condicao)


State 82

   70 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 125


State 83

   35 atr_id: ID . '=' exp
   36       | ID . '=' atr_recursiva
   37       | ID . ADD exp
   40 atr_obj: ID . '.' prop '=' exp
   41        | ID . '.' prop ADD exp
   44 atr_array: ID . indices '=' rec
   45          | ID . '[' atr ']' '=' exp

    ADD  shift, and go to state 34
    '='  shift, and go to state 38
    '.'  shift, and go to state 126
    '['  shift, and go to state 40

    indices  go to state 41


State 84

   71 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 42

    decl  go to state 127


State 85

   72 for_loop: FOR '(' atr . ';' condicao ';' atr ')' corpo
   73         | FOR '(' atr . ';' condicao ';' val ')' OBJ

    ';'  shift, and go to state 128


State 86

   18 funcao: FUNCTION ID empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func . '(' ')' corpo desempilha_escopo_func

    '('  shift, and go to state 129


State 87

   28 empilha_escopo_func: empilha_escopo .

    $default  reduce using rule 28 (empilha_escopo_func)


State 88

   89 exp: ID '.' . ID

    ID  shift, and go to state 130


State 89

   99 val: '(' exp ')' .

    $default  reduce using rule 99 (val)


State 90

   17 bloco: '{' empilha_escopo cmds . '}' desempilha_escopo

    '}'  shift, and go to state 131


State 91

   68 separador: separador ';' .

    $default  reduce using rule 68 (separador)


State 92

    2 cmds: cmd_1 separador cmds .

    $default  reduce using rule 2 (cmds)


State 93

   84 exp: exp . '+' exp
   84    | exp '+' exp .
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 84 (exp)


State 94

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   85    | exp '-' exp .
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 85 (exp)


State 95

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   86    | exp '*' exp .
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '('  shift, and go to state 64

    $default  reduce using rule 86 (exp)


State 96

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   87    | exp '/' exp .
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '('  shift, and go to state 64

    $default  reduce using rule 87 (exp)


State 97

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   88    | exp '%' exp .
   91    | exp . '(' params ')'

    '('  shift, and go to state 64

    $default  reduce using rule 88 (exp)


State 98

   53 matrix: ID . indices
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 88
    '['  shift, and go to state 132

    $default  reduce using rule 96 (val)

    indices  go to state 133


State 99

   95 params: matrix . ',' params

    ','  shift, and go to state 134


State 100

   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'
   92 params: exp . ',' params
   93       | exp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ','  shift, and go to state 135

    $default  reduce using rule 93 (params)


State 101

   91 exp: exp '(' params . ')'

    ')'  shift, and go to state 136


State 102

   38 atr_recursiva: ID '=' . exp
   39              | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 68
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_recursiva  go to state 137
    exp            go to state 138
    val            go to state 33


State 103

   43 prop: ID '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 139
    val  go to state 33


State 104

   41 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 140
    val  go to state 33


State 105

   40 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 141
    val  go to state 33


State 106

   45 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 142


State 107

   54 indices: '[' exp ']' . indices
   55        | '[' exp ']' .

    '['  shift, and go to state 132

    $default  reduce using rule 55 (indices)

    indices  go to state 143


State 108

   44 atr_array: ID . indices '=' rec
   45          | ID . '[' atr ']' '=' exp
   53 matrix: ID . indices
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC  shift, and go to state 35
    '.'  shift, and go to state 88
    '['  shift, and go to state 40

    $default  reduce using rule 96 (val)

    indices  go to state 144


State 109

   49 rec: atr_array .

    $default  reduce using rule 49 (rec)


State 110

   44 atr_array: ID indices '=' rec .

    $default  reduce using rule 44 (atr_array)


State 111

   47 rec: matexp .
   51 matexp: matexp . '*' matexp
   52       | matexp . '+' matexp

    '+'  shift, and go to state 145
    '*'  shift, and go to state 146

    $default  reduce using rule 47 (rec)


State 112

   50 matexp: matrix .

    $default  reduce using rule 50 (matexp)


State 113

   46 rec: exp .
   48    | exp . '=' rec
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '='  shift, and go to state 147
    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    '-'       [reduce using rule 46 (rec)]
    '('       [reduce using rule 46 (rec)]
    $default  reduce using rule 46 (rec)


State 114

   20 funcao: ID . LAMBDA_NOVO_OBJ
   21       | ID . ARROW BLOCO
   22       | ID . ARROW exp
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC              shift, and go to state 35
    LAMBDA_NOVO_OBJ  shift, and go to state 36
    ARROW            shift, and go to state 37
    '.'              shift, and go to state 88

    $default  reduce using rule 96 (val)


State 115

   60 objeto: '{' . corpo_obj '}'

    ID  shift, and go to state 148

    corpo_obj  go to state 149


State 116

   58 decl: ID '=' funcao . fim_decl

    ','  shift, and go to state 78

    $default  reduce using rule 65 (fim_decl)

    fim_decl  go to state 150


State 117

   59 decl: ID '=' objeto . fim_decl

    ','  shift, and go to state 78

    $default  reduce using rule 65 (fim_decl)

    fim_decl  go to state 151


State 118

   56 decl: ID '=' exp . fim_decl
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ','  shift, and go to state 78

    '-'       [reduce using rule 65 (fim_decl)]
    '('       [reduce using rule 65 (fim_decl)]
    $default  reduce using rule 65 (fim_decl)

    fim_decl  go to state 152


State 119

   64 fim_decl: ',' decl .

    $default  reduce using rule 64 (fim_decl)


State 120

   74 condicional: IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 30 (empilha_escopo)

    empilha_escopo  go to state 153


State 121

   81 condicao: exp IGUAL . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 154
    val  go to state 33


State 122

   82 condicao: exp DIF . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 155
    val  go to state 33


State 123

   79 condicao: exp '>' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 156
    val  go to state 33


State 124

   80 condicao: exp '<' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 157
    val  go to state 33


State 125

   70 while_loop: WHILE '(' condicao ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 161
    exp          go to state 32
    val          go to state 33


State 126

   40 atr_obj: ID '.' . prop '=' exp
   41        | ID '.' . prop ADD exp

    ID  shift, and go to state 162

    prop  go to state 72


State 127

   71 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 163


State 128

   72 for_loop: FOR '(' atr ';' . condicao ';' atr ')' corpo
   73         | FOR '(' atr ';' . condicao ';' val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 164
    exp       go to state 81
    val       go to state 33


State 129

   18 funcao: FUNCTION ID empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' . ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 165
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16
    ')'     shift, and go to state 166

    args  go to state 167
    arg   go to state 168
    exp   go to state 169
    val   go to state 33


State 130

   89 exp: ID '.' ID .

    $default  reduce using rule 89 (exp)


State 131

   17 bloco: '{' empilha_escopo cmds '}' . desempilha_escopo

    $default  reduce using rule 31 (desempilha_escopo)

    desempilha_escopo  go to state 170


State 132

   54 indices: '[' . exp ']' indices
   55        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 75
    val  go to state 33


State 133

   53 matrix: ID indices .

    $default  reduce using rule 53 (matrix)


State 134

   95 params: matrix ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 98
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 94 (params)

    matrix  go to state 99
    exp     go to state 100
    params  go to state 171
    val     go to state 33


State 135

   92 params: exp ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 98
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 94 (params)

    matrix  go to state 99
    exp     go to state 100
    params  go to state 172
    val     go to state 33


State 136

   91 exp: exp '(' params ')' .

    $default  reduce using rule 91 (exp)


State 137

   39 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 39 (atr_recursiva)


State 138

   38 atr_recursiva: ID '=' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 38 (atr_recursiva)


State 139

   43 prop: ID '[' exp . ']'
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ']'  shift, and go to state 173


State 140

   41 atr_obj: ID '.' prop ADD exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 41 (atr_obj)


State 141

   40 atr_obj: ID '.' prop '=' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 40 (atr_obj)


State 142

   45 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 174
    val  go to state 33


State 143

   54 indices: '[' exp ']' indices .

    $default  reduce using rule 54 (indices)


State 144

   44 atr_array: ID indices . '=' rec
   53 matrix: ID indices .

    '='  shift, and go to state 76

    $default  reduce using rule 53 (matrix)


State 145

   52 matexp: matexp '+' . matexp

    ID  shift, and go to state 175

    matexp  go to state 176
    matrix  go to state 112


State 146

   51 matexp: matexp '*' . matexp

    ID  shift, and go to state 175

    matexp  go to state 177
    matrix  go to state 112


State 147

   48 rec: exp '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 108
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr_array  go to state 109
    rec        go to state 178
    matexp     go to state 111
    matrix     go to state 112
    exp        go to state 113
    val        go to state 33


State 148

   61 corpo_obj: ID . ':' exp ',' corpo_obj
   62          | ID . ':' exp
   63          | ID . ':' objeto

    ':'  shift, and go to state 179


State 149

   60 objeto: '{' corpo_obj . '}'

    '}'  shift, and go to state 180


State 150

   58 decl: ID '=' funcao fim_decl .

    $default  reduce using rule 58 (decl)


State 151

   59 decl: ID '=' objeto fim_decl .

    $default  reduce using rule 59 (decl)


State 152

   56 decl: ID '=' exp fim_decl .

    $default  reduce using rule 56 (decl)


State 153

   74 condicional: IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 181
    exp          go to state 32
    val          go to state 33


State 154

   81 condicao: exp IGUAL exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 81 (condicao)


State 155

   82 condicao: exp DIF exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 82 (condicao)


State 156

   79 condicao: exp '>' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 79 (condicao)


State 157

   80 condicao: exp '<' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 80 (condicao)


State 158

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo
   76 corpo: '{' . cmds '}'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    NUM       [reduce using rule 30 (empilha_escopo)]
    ID        [reduce using rule 30 (empilha_escopo)]
    LET       [reduce using rule 30 (empilha_escopo)]
    VAR       [reduce using rule 30 (empilha_escopo)]
    CONST     [reduce using rule 30 (empilha_escopo)]
    OBJ       [reduce using rule 30 (empilha_escopo)]
    ARRAY     [reduce using rule 30 (empilha_escopo)]
    STRING    [reduce using rule 30 (empilha_escopo)]
    IF        [reduce using rule 30 (empilha_escopo)]
    WHILE     [reduce using rule 30 (empilha_escopo)]
    FOR       [reduce using rule 30 (empilha_escopo)]
    FUNCTION  [reduce using rule 30 (empilha_escopo)]
    RETURN    [reduce using rule 30 (empilha_escopo)]
    BLOCO     [reduce using rule 30 (empilha_escopo)]
    '-'       [reduce using rule 30 (empilha_escopo)]
    '('       [reduce using rule 30 (empilha_escopo)]
    '{'       [reduce using rule 30 (empilha_escopo)]
    '}'       reduce using rule 4 (cmds)
    '}'       [reduce using rule 30 (empilha_escopo)]
    $default  reduce using rule 4 (cmds)

    cmds            go to state 182
    cmd_1           go to state 20
    cmd_2           go to state 21
    bloco           go to state 22
    funcao          go to state 23
    empilha_escopo  go to state 54
    atr             go to state 24
    atr_id          go to state 25
    atr_obj         go to state 26
    atr_array       go to state 27
    loop            go to state 28
    while_loop      go to state 29
    for_loop        go to state 30
    condicional     go to state 31
    exp             go to state 32
    val             go to state 33


State 159

   77 corpo: cmd_1 . ';'

    ';'  shift, and go to state 183


State 160

   78 corpo: cmd_2 .

    $default  reduce using rule 78 (corpo)


State 161

   70 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 70 (while_loop)


State 162

   42 prop: ID .
   43     | ID . '[' exp ']'

    '['  shift, and go to state 103

    $default  reduce using rule 42 (prop)


State 163

   71 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    condicao  go to state 184
    exp       go to state 81
    val       go to state 33


State 164

   72 for_loop: FOR '(' atr ';' condicao . ';' atr ')' corpo
   73         | FOR '(' atr ';' condicao . ';' val ')' OBJ

    ';'  shift, and go to state 185


State 165

   25 arg: ID .
   26    | ID . '=' exp
   89 exp: ID . '.' ID
   96 val: ID .
  103    | ID . INC

    INC  shift, and go to state 35
    '='  shift, and go to state 186
    '.'  shift, and go to state 88

    ')'       reduce using rule 25 (arg)
    ')'       [reduce using rule 96 (val)]
    ','       reduce using rule 25 (arg)
    ','       [reduce using rule 96 (val)]
    $default  reduce using rule 96 (val)


State 166

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 187
    exp          go to state 32
    val          go to state 33


State 167

   18 funcao: FUNCTION ID empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   23 args: args . ',' arg

    ')'  shift, and go to state 188
    ','  shift, and go to state 189


State 168

   24 args: arg .

    $default  reduce using rule 24 (args)


State 169

   27 arg: exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 27 (arg)


State 170

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo .

    $default  reduce using rule 17 (bloco)


State 171

   95 params: matrix ',' params .

    $default  reduce using rule 95 (params)


State 172

   92 params: exp ',' params .

    $default  reduce using rule 92 (params)


State 173

   43 prop: ID '[' exp ']' .

    $default  reduce using rule 43 (prop)


State 174

   45 atr_array: ID '[' atr ']' '=' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 45 (atr_array)


State 175

   53 matrix: ID . indices

    '['  shift, and go to state 132

    indices  go to state 133


State 176

   51 matexp: matexp . '*' matexp
   52       | matexp . '+' matexp
   52       | matexp '+' matexp .

    '*'  shift, and go to state 146

    $default  reduce using rule 52 (matexp)


State 177

   51 matexp: matexp . '*' matexp
   51       | matexp '*' matexp .
   52       | matexp . '+' matexp

    $default  reduce using rule 51 (matexp)


State 178

   48 rec: exp '=' rec .

    $default  reduce using rule 48 (rec)


State 179

   61 corpo_obj: ID ':' . exp ',' corpo_obj
   62          | ID ':' . exp
   63          | ID ':' . objeto

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16
    '{'     shift, and go to state 115

    objeto  go to state 190
    exp     go to state 191
    val     go to state 33


State 180

   60 objeto: '{' corpo_obj '}' .

    $default  reduce using rule 60 (objeto)


State 181

   74 condicional: IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 31 (desempilha_escopo)

    desempilha_escopo  go to state 192


State 182

   76 corpo: '{' cmds . '}'

    '}'  shift, and go to state 193


State 183

   77 corpo: cmd_1 ';' .

    $default  reduce using rule 77 (corpo)


State 184

   71 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 194


State 185

   72 for_loop: FOR '(' atr ';' condicao ';' . atr ')' corpo
   73         | FOR '(' atr ';' condicao ';' . val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 195
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    atr        go to state 196
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27
    val        go to state 197


State 186

   26 arg: ID '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 50
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    exp  go to state 198
    val  go to state 33


State 187

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo . desempilha_escopo_func

    $default  reduce using rule 31 (desempilha_escopo)

    desempilha_escopo_func  go to state 199
    desempilha_escopo       go to state 200


State 188

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 201
    exp          go to state 32
    val          go to state 33


State 189

   23 args: args ',' . arg

    NUM     shift, and go to state 1
    ID      shift, and go to state 165
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 16

    arg  go to state 202
    exp  go to state 169
    val  go to state 33


State 190

   63 corpo_obj: ID ':' objeto .

    $default  reduce using rule 63 (corpo_obj)


State 191

   61 corpo_obj: ID ':' exp . ',' corpo_obj
   62          | ID ':' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64
    ','  shift, and go to state 203

    $default  reduce using rule 62 (corpo_obj)


State 192

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo . ELSE empilha_escopo corpo desempilha_escopo
   75            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo .

    ELSE  shift, and go to state 204

    $default  reduce using rule 75 (condicional)


State 193

   76 corpo: '{' cmds '}' .

    $default  reduce using rule 76 (corpo)


State 194

   71 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 83

    atr        go to state 205
    atr_id     go to state 25
    atr_obj    go to state 26
    atr_array  go to state 27


State 195

   35 atr_id: ID . '=' exp
   36       | ID . '=' atr_recursiva
   37       | ID . ADD exp
   40 atr_obj: ID . '.' prop '=' exp
   41        | ID . '.' prop ADD exp
   44 atr_array: ID . indices '=' rec
   45          | ID . '[' atr ']' '=' exp
   96 val: ID .
  103    | ID . INC

    ADD  shift, and go to state 34
    INC  shift, and go to state 35
    '='  shift, and go to state 38
    '.'  shift, and go to state 126
    '['  shift, and go to state 40

    $default  reduce using rule 96 (val)

    indices  go to state 41


State 196

   72 for_loop: FOR '(' atr ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 206


State 197

   73 for_loop: FOR '(' atr ';' condicao ';' val . ')' OBJ

    ')'  shift, and go to state 207


State 198

   26 arg: ID '=' exp .
   84 exp: exp . '+' exp
   85    | exp . '-' exp
   86    | exp . '*' exp
   87    | exp . '/' exp
   88    | exp . '%' exp
   91    | exp . '(' params ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 26 (arg)


State 199

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func .

    $default  reduce using rule 19 (funcao)


State 200

   29 desempilha_escopo_func: desempilha_escopo .

    $default  reduce using rule 29 (desempilha_escopo_func)


State 201

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 31 (desempilha_escopo)

    desempilha_escopo_func  go to state 208
    desempilha_escopo       go to state 200


State 202

   23 args: args ',' arg .

    $default  reduce using rule 23 (args)


State 203

   61 corpo_obj: ID ':' exp ',' . corpo_obj

    ID  shift, and go to state 148

    corpo_obj  go to state 209


State 204

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 30 (empilha_escopo)

    empilha_escopo  go to state 210


State 205

   71 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 211


State 206

   72 for_loop: FOR '(' atr ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 212
    exp          go to state 32
    val          go to state 33


State 207

   73 for_loop: FOR '(' atr ';' condicao ';' val ')' . OBJ

    OBJ  shift, and go to state 213


State 208

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 18 (funcao)


State 209

   61 corpo_obj: ID ':' exp ',' corpo_obj .

    $default  reduce using rule 61 (corpo_obj)


State 210

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 214
    exp          go to state 32
    val          go to state 33


State 211

   71 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 158

    cmd_1        go to state 159
    cmd_2        go to state 160
    bloco        go to state 22
    funcao       go to state 23
    atr          go to state 24
    atr_id       go to state 25
    atr_obj      go to state 26
    atr_array    go to state 27
    loop         go to state 28
    while_loop   go to state 29
    for_loop     go to state 30
    condicional  go to state 31
    corpo        go to state 215
    exp          go to state 32
    val          go to state 33


State 212

   72 for_loop: FOR '(' atr ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 72 (for_loop)


State 213

   73 for_loop: FOR '(' atr ';' condicao ';' val ')' OBJ .

    $default  reduce using rule 73 (for_loop)


State 214

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 31 (desempilha_escopo)

    desempilha_escopo  go to state 216


State 215

   71 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 71 (for_loop)


State 216

   74 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo .

    $default  reduce using rule 74 (condicional)

Terminals unused in grammar

    '?'


State 13 conflicts: 10 shift/reduce
State 34 conflicts: 2 shift/reduce
State 55 conflicts: 2 shift/reduce
State 70 conflicts: 24 reduce/reduce
State 71 conflicts: 2 shift/reduce
State 117 conflicts: 2 shift/reduce
State 122 conflicts: 2 shift/reduce
State 134 conflicts: 2 reduce/reduce
State 166 conflicts: 19 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 separador cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | VAR decl
    8      | CONST decl
    9      | loop
   10      | exp ASM
   11      | exp
   12      | RETURN
   13      | RETURN exp

   14 cmd_2: condicional
   15      | funcao
   16      | bloco

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func
   20       | FUNCTION empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   21       | ID LAMBDA_NOVO_OBJ
   22       | ID ARROW BLOCO
   23       | ID ARROW exp

   24 args: args ',' arg
   25     | arg

   26 arg: ID
   27    | ID '=' exp
   28    | exp

   29 empilha_escopo_func: empilha_escopo

   30 desempilha_escopo_func: desempilha_escopo

   31 empilha_escopo: %empty

   32 desempilha_escopo: %empty

   33 atr: atr_id
   34    | atr_obj
   35    | atr_array

   36 atr_id: ID '=' exp
   37       | ID '=' atr_recursiva
   38       | ID ADD exp

   39 atr_recursiva: ID '=' exp
   40              | ID '=' atr_recursiva

   41 atr_obj: ID '.' prop '=' exp
   42        | ID '.' prop ADD exp

   43 prop: ID
   44     | ID '[' exp ']'

   45 atr_array: ID indices '=' rec
   46          | ID '[' atr ']' '=' exp

   47 rec: exp
   48    | matexp
   49    | exp '=' rec
   50    | atr_array

   51 matexp: matrix
   52       | matexp '*' matexp
   53       | matexp '+' matexp

   54 matrix: ID indices

   55 indices: '[' exp ']' indices
   56        | '[' exp ']'

   57 decl: ID '=' exp fim_decl
   58     | ID fim_decl
   59     | ID '=' funcao fim_decl
   60     | ID '=' objeto fim_decl

   61 objeto: '{' corpo_obj '}'

   62 corpo_obj: ID ':' exp ',' corpo_obj
   63          | ID ':' exp
   64          | ID ':' objeto

   65 fim_decl: ',' decl
   66         | %empty

   67 loop: while_loop
   68     | for_loop

   69 separador: separador ';'
   70          | %empty

   71 while_loop: WHILE '(' condicao ')' corpo

   72 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   73         | FOR '(' atr ';' condicao ';' atr ')' corpo
   74         | FOR '(' atr ';' condicao ';' val ')' OBJ

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo

   77 corpo: '{' cmds '}'
   78      | cmd_1 ';'
   79      | cmd_2

   80 condicao: exp '>' exp
   81         | exp '<' exp
   82         | exp IGUAL exp
   83         | exp DIF exp
   84         | exp

   85 exp: exp '+' exp
   86    | exp '-' exp
   87    | exp '*' exp
   88    | exp '/' exp
   89    | exp '%' exp
   90    | ID '.' ID
   91    | val
   92    | exp '(' params ')'

   93 params: exp ',' params
   94       | exp
   95       | %empty
   96       | matrix ',' params

   97 val: TRUE
   98    | FALSE
   99    | ID
  100    | NUM
  101    | '-' NUM
  102    | '(' exp ')'
  103    | OBJ
  104    | ARRAY
  105    | STRING
  106    | ID INC
  107    | BLOCO


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 89
    '(' (40) 18 19 20 71 72 73 74 75 76 92 102
    ')' (41) 18 19 20 71 72 73 74 75 76 92 102
    '*' (42) 52 87
    '+' (43) 53 85
    ',' (44) 24 62 65 93 96
    '-' (45) 86 101
    '.' (46) 41 42 90
    '/' (47) 88
    ':' (58) 62 63 64
    ';' (59) 69 72 73 74 78
    '<' (60) 81
    '=' (61) 27 36 37 39 40 41 45 46 49 57 59 60
    '>' (62) 80
    '?' (63)
    'T' (84)
    '[' (91) 44 46 55 56
    ']' (93) 44 46 55 56
    '{' (123) 17 61 77
    '}' (125) 17 61 77
    error (256)
    NUM (258) 100 101
    ID (259) 18 19 21 22 23 26 27 36 37 38 39 40 41 42 43 44 45 46 54 57 58 59 60 62 63 64 90 99 106
    LET (260) 6 72
    VAR (261) 7
    CONST (262) 8
    OBJ (263) 74 103
    ARRAY (264) 104
    STRING (265) 105
    ADD (266) 38 42
    IF (267) 75 76
    ELSE (268) 75
    IGUAL (269) 82
    DIF (270) 83
    INC (271) 106
    WHILE (272) 71
    FOR (273) 72 73 74
    FUNCTION (274) 18 19 20
    ASM (275) 10
    RETURN (276) 12 13
    BLOCO (277) 22 107
    LAMBDA_NOVO_OBJ (278) 21
    ARROW (279) 22 23
    TRUE (280) 97
    FALSE (281) 98


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    s (48)
        on left: 1
        on right: 0
    cmds (49)
        on left: 2 3 4
        on right: 1 2 3 17 77
    cmd_1 (50)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 2 78
    cmd_2 (51)
        on left: 14 15 16
        on right: 3 79
    bloco (52)
        on left: 17
        on right: 16
    funcao (53)
        on left: 18 19 20 21 22 23
        on right: 15 59
    args (54)
        on left: 24 25
        on right: 18 20 24
    arg (55)
        on left: 26 27 28
        on right: 24 25
    empilha_escopo_func (56)
        on left: 29
        on right: 18 19 20
    desempilha_escopo_func (57)
        on left: 30
        on right: 18 19 20
    empilha_escopo (58)
        on left: 31
        on right: 17 29 75 76
    desempilha_escopo (59)
        on left: 32
        on right: 17 30 75 76
    atr (60)
        on left: 33 34 35
        on right: 5 46 72 73 74
    atr_id (61)
        on left: 36 37 38
        on right: 33
    atr_recursiva (62)
        on left: 39 40
        on right: 37 40
    atr_obj (63)
        on left: 41 42
        on right: 34
    prop (64)
        on left: 43 44
        on right: 41 42
    atr_array (65)
        on left: 45 46
        on right: 35 50
    rec (66)
        on left: 47 48 49 50
        on right: 45 49
    matexp (67)
        on left: 51 52 53
        on right: 48 52 53
    matrix (68)
        on left: 54
        on right: 51 96
    indices (69)
        on left: 55 56
        on right: 45 54 55
    decl (70)
        on left: 57 58 59 60
        on right: 6 7 8 65 72
    objeto (71)
        on left: 61
        on right: 60 64
    corpo_obj (72)
        on left: 62 63 64
        on right: 61 62
    fim_decl (73)
        on left: 65 66
        on right: 57 58 59 60
    loop (74)
        on left: 67 68
        on right: 9
    separador (75)
        on left: 69 70
        on right: 2 69
    while_loop (76)
        on left: 71
        on right: 67
    for_loop (77)
        on left: 72 73 74
        on right: 68
    condicional (78)
        on left: 75 76
        on right: 14
    corpo (79)
        on left: 77 78 79
        on right: 18 19 20 71 72 73 75 76
    condicao (80)
        on left: 80 81 82 83 84
        on right: 71 72 73 74 75 76
    exp (81)
        on left: 85 86 87 88 89 90 91 92
        on right: 10 11 13 23 27 28 36 38 39 41 42 44 46 47 49 55 56 57 62 63 80 81 82 83 84 85 86 87 88 89 92 93 94 102
    params (82)
        on left: 93 94 95 96
        on right: 92 93 96
    val (83)
        on left: 97 98 99 100 101 102 103 104 105 106 107
        on right: 74 91


State 0

    0 $accept: . s $end

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    $default  reduce using rule 4 (cmds)

    s            go to state 20
    cmds         go to state 21
    cmd_1        go to state 22
    cmd_2        go to state 23
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    exp          go to state 34
    val          go to state 35


State 1

  100 val: NUM .

    $default  reduce using rule 100 (val)


State 2

   21 funcao: ID . LAMBDA_NOVO_OBJ
   22       | ID . ARROW BLOCO
   23       | ID . ARROW exp
   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    ADD              shift, and go to state 36
    INC              shift, and go to state 37
    LAMBDA_NOVO_OBJ  shift, and go to state 38
    ARROW            shift, and go to state 39
    '='              shift, and go to state 40
    '.'              shift, and go to state 41
    '['              shift, and go to state 42

    $default  reduce using rule 99 (val)

    indices  go to state 43


State 3

    6 cmd_1: LET . decl

    ID  shift, and go to state 44

    decl  go to state 45


State 4

    7 cmd_1: VAR . decl

    ID  shift, and go to state 44

    decl  go to state 46


State 5

    8 cmd_1: CONST . decl

    ID  shift, and go to state 44

    decl  go to state 47


State 6

  103 val: OBJ .

    $default  reduce using rule 103 (val)


State 7

  104 val: ARRAY .

    $default  reduce using rule 104 (val)


State 8

  105 val: STRING .

    $default  reduce using rule 105 (val)


State 9

   75 condicional: IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo

    '('  shift, and go to state 48


State 10

   71 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 49


State 11

   72 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   73         | FOR . '(' atr ';' condicao ';' atr ')' corpo
   74         | FOR . '(' atr ';' condicao ';' val ')' OBJ

    '('  shift, and go to state 50


State 12

   18 funcao: FUNCTION . ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION . ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func
   20       | FUNCTION . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func

    ID  shift, and go to state 51

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo_func  go to state 52
    empilha_escopo       go to state 53


State 13

   12 cmd_1: RETURN .
   13      | RETURN . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    NUM       [reduce using rule 12 (cmd_1)]
    ID        [reduce using rule 12 (cmd_1)]
    OBJ       [reduce using rule 12 (cmd_1)]
    ARRAY     [reduce using rule 12 (cmd_1)]
    STRING    [reduce using rule 12 (cmd_1)]
    BLOCO     [reduce using rule 12 (cmd_1)]
    TRUE      [reduce using rule 12 (cmd_1)]
    FALSE     [reduce using rule 12 (cmd_1)]
    '-'       [reduce using rule 12 (cmd_1)]
    '('       [reduce using rule 12 (cmd_1)]
    $default  reduce using rule 12 (cmd_1)

    exp  go to state 55
    val  go to state 35


State 14

  107 val: BLOCO .

    $default  reduce using rule 107 (val)


State 15

   97 val: TRUE .

    $default  reduce using rule 97 (val)


State 16

   98 val: FALSE .

    $default  reduce using rule 98 (val)


State 17

  101 val: '-' . NUM

    NUM  shift, and go to state 56


State 18

  102 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 57
    val  go to state 35


State 19

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 58


State 20

    0 $accept: s . $end

    $end  shift, and go to state 59


State 21

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 22

    2 cmds: cmd_1 . separador cmds

    $default  reduce using rule 70 (separador)

    separador  go to state 60


State 23

    3 cmds: cmd_2 . cmds

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    $default  reduce using rule 4 (cmds)

    cmds         go to state 61
    cmd_1        go to state 22
    cmd_2        go to state 23
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    exp          go to state 34
    val          go to state 35


State 24

   16 cmd_2: bloco .

    $default  reduce using rule 16 (cmd_2)


State 25

   15 cmd_2: funcao .

    $default  reduce using rule 15 (cmd_2)


State 26

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 27

   33 atr: atr_id .

    $default  reduce using rule 33 (atr)


State 28

   34 atr: atr_obj .

    $default  reduce using rule 34 (atr)


State 29

   35 atr: atr_array .

    $default  reduce using rule 35 (atr)


State 30

    9 cmd_1: loop .

    $default  reduce using rule 9 (cmd_1)


State 31

   67 loop: while_loop .

    $default  reduce using rule 67 (loop)


State 32

   68 loop: for_loop .

    $default  reduce using rule 68 (loop)


State 33

   14 cmd_2: condicional .

    $default  reduce using rule 14 (cmd_2)


State 34

   10 cmd_1: exp . ASM
   11      | exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    ASM  shift, and go to state 62
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    '-'       [reduce using rule 11 (cmd_1)]
    '('       [reduce using rule 11 (cmd_1)]
    $default  reduce using rule 11 (cmd_1)


State 35

   91 exp: val .

    $default  reduce using rule 91 (exp)


State 36

   38 atr_id: ID ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 69
    val  go to state 35


State 37

  106 val: ID INC .

    $default  reduce using rule 106 (val)


State 38

   21 funcao: ID LAMBDA_NOVO_OBJ .

    $default  reduce using rule 21 (funcao)


State 39

   22 funcao: ID ARROW . BLOCO
   23       | ID ARROW . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 70
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 71
    val  go to state 35


State 40

   36 atr_id: ID '=' . exp
   37       | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 72
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr_recursiva  go to state 73
    exp            go to state 74
    val            go to state 35


State 41

   41 atr_obj: ID '.' . prop '=' exp
   42        | ID '.' . prop ADD exp
   90 exp: ID '.' . ID

    ID  shift, and go to state 75

    prop  go to state 76


State 42

   46 atr_array: ID '[' . atr ']' '=' exp
   55 indices: '[' . exp ']' indices
   56        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 77
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr        go to state 78
    atr_id     go to state 27
    atr_obj    go to state 28
    atr_array  go to state 29
    exp        go to state 79
    val        go to state 35


State 43

   45 atr_array: ID indices . '=' rec

    '='  shift, and go to state 80


State 44

   57 decl: ID . '=' exp fim_decl
   58     | ID . fim_decl
   59     | ID . '=' funcao fim_decl
   60     | ID . '=' objeto fim_decl

    '='  shift, and go to state 81
    ','  shift, and go to state 82

    $default  reduce using rule 66 (fim_decl)

    fim_decl  go to state 83


State 45

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 46

    7 cmd_1: VAR decl .

    $default  reduce using rule 7 (cmd_1)


State 47

    8 cmd_1: CONST decl .

    $default  reduce using rule 8 (cmd_1)


State 48

   75 condicional: IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    condicao  go to state 84
    exp       go to state 85
    val       go to state 35


State 49

   71 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    condicao  go to state 86
    exp       go to state 85
    val       go to state 35


State 50

   72 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   73         | FOR '(' . atr ';' condicao ';' atr ')' corpo
   74         | FOR '(' . atr ';' condicao ';' val ')' OBJ

    ID   shift, and go to state 87
    LET  shift, and go to state 88

    atr        go to state 89
    atr_id     go to state 27
    atr_obj    go to state 28
    atr_array  go to state 29


State 51

   18 funcao: FUNCTION ID . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID . empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo_func  go to state 90
    empilha_escopo       go to state 53


State 52

   20 funcao: FUNCTION empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func

    '('  shift, and go to state 91


State 53

   29 empilha_escopo_func: empilha_escopo .

    $default  reduce using rule 29 (empilha_escopo_func)


State 54

   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC  shift, and go to state 37
    '.'  shift, and go to state 92

    $default  reduce using rule 99 (val)


State 55

   13 cmd_1: RETURN exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    '-'       [reduce using rule 13 (cmd_1)]
    '('       [reduce using rule 13 (cmd_1)]
    $default  reduce using rule 13 (cmd_1)


State 56

  101 val: '-' NUM .

    $default  reduce using rule 101 (val)


State 57

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'
  102 val: '(' exp . ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ')'  shift, and go to state 93


State 58

   17 bloco: '{' empilha_escopo . cmds '}' desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    $default  reduce using rule 4 (cmds)

    cmds         go to state 94
    cmd_1        go to state 22
    cmd_2        go to state 23
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    exp          go to state 34
    val          go to state 35


State 59

    0 $accept: s $end .

    $default  accept


State 60

    2 cmds: cmd_1 separador . cmds
   69 separador: separador . ';'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    ';'       shift, and go to state 95

    $default  reduce using rule 4 (cmds)

    cmds         go to state 96
    cmd_1        go to state 22
    cmd_2        go to state 23
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    exp          go to state 34
    val          go to state 35


State 61

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 62

   10 cmd_1: exp ASM .

    $default  reduce using rule 10 (cmd_1)


State 63

   85 exp: exp '+' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 97
    val  go to state 35


State 64

   86 exp: exp '-' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 98
    val  go to state 35


State 65

   87 exp: exp '*' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 99
    val  go to state 35


State 66

   88 exp: exp '/' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 100
    val  go to state 35


State 67

   89 exp: exp '%' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 101
    val  go to state 35


State 68

   92 exp: exp '(' . params ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 102
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    $default  reduce using rule 95 (params)

    matrix  go to state 103
    exp     go to state 104
    params  go to state 105
    val     go to state 35


State 69

   38 atr_id: ID ADD exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 38 (atr_id)


State 70

   22 funcao: ID ARROW BLOCO .
  107 val: BLOCO .

    $end      reduce using rule 22 (funcao)
    $end      [reduce using rule 107 (val)]
    NUM       reduce using rule 22 (funcao)
    NUM       [reduce using rule 107 (val)]
    ID        reduce using rule 22 (funcao)
    ID        [reduce using rule 107 (val)]
    LET       reduce using rule 22 (funcao)
    LET       [reduce using rule 107 (val)]
    VAR       reduce using rule 22 (funcao)
    VAR       [reduce using rule 107 (val)]
    CONST     reduce using rule 22 (funcao)
    CONST     [reduce using rule 107 (val)]
    OBJ       reduce using rule 22 (funcao)
    OBJ       [reduce using rule 107 (val)]
    ARRAY     reduce using rule 22 (funcao)
    ARRAY     [reduce using rule 107 (val)]
    STRING    reduce using rule 22 (funcao)
    STRING    [reduce using rule 107 (val)]
    IF        reduce using rule 22 (funcao)
    IF        [reduce using rule 107 (val)]
    ELSE      reduce using rule 22 (funcao)
    ELSE      [reduce using rule 107 (val)]
    WHILE     reduce using rule 22 (funcao)
    WHILE     [reduce using rule 107 (val)]
    FOR       reduce using rule 22 (funcao)
    FOR       [reduce using rule 107 (val)]
    FUNCTION  reduce using rule 22 (funcao)
    FUNCTION  [reduce using rule 107 (val)]
    RETURN    reduce using rule 22 (funcao)
    RETURN    [reduce using rule 107 (val)]
    BLOCO     reduce using rule 22 (funcao)
    BLOCO     [reduce using rule 107 (val)]
    TRUE      reduce using rule 22 (funcao)
    TRUE      [reduce using rule 107 (val)]
    FALSE     reduce using rule 22 (funcao)
    FALSE     [reduce using rule 107 (val)]
    '+'       reduce using rule 107 (val)
    '-'       reduce using rule 22 (funcao)
    '-'       [reduce using rule 107 (val)]
    '*'       reduce using rule 107 (val)
    '/'       reduce using rule 107 (val)
    '%'       reduce using rule 107 (val)
    '('       reduce using rule 22 (funcao)
    '('       [reduce using rule 107 (val)]
    '{'       reduce using rule 22 (funcao)
    '{'       [reduce using rule 107 (val)]
    '}'       reduce using rule 22 (funcao)
    '}'       [reduce using rule 107 (val)]
    ','       reduce using rule 22 (funcao)
    ','       [reduce using rule 107 (val)]
    ';'       reduce using rule 22 (funcao)
    ';'       [reduce using rule 107 (val)]
    $default  reduce using rule 22 (funcao)


State 71

   23 funcao: ID ARROW exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    '-'       [reduce using rule 23 (funcao)]
    '('       [reduce using rule 23 (funcao)]
    $default  reduce using rule 23 (funcao)


State 72

   39 atr_recursiva: ID . '=' exp
   40              | ID . '=' atr_recursiva
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC  shift, and go to state 37
    '='  shift, and go to state 106
    '.'  shift, and go to state 92

    $default  reduce using rule 99 (val)


State 73

   37 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 37 (atr_id)


State 74

   36 atr_id: ID '=' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 36 (atr_id)


State 75

   43 prop: ID .
   44     | ID . '[' exp ']'
   90 exp: ID '.' ID .

    '['  shift, and go to state 107

    ADD       reduce using rule 43 (prop)
    '='       reduce using rule 43 (prop)
    $default  reduce using rule 90 (exp)


State 76

   41 atr_obj: ID '.' prop . '=' exp
   42        | ID '.' prop . ADD exp

    ADD  shift, and go to state 108
    '='  shift, and go to state 109


State 77

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    ADD  shift, and go to state 36
    INC  shift, and go to state 37
    '='  shift, and go to state 40
    '.'  shift, and go to state 41
    '['  shift, and go to state 42

    $default  reduce using rule 99 (val)

    indices  go to state 43


State 78

   46 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 110


State 79

   55 indices: '[' exp . ']' indices
   56        | '[' exp . ']'
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ']'  shift, and go to state 111


State 80

   45 atr_array: ID indices '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 112
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr_array  go to state 113
    rec        go to state 114
    matexp     go to state 115
    matrix     go to state 116
    exp        go to state 117
    val        go to state 35


State 81

   57 decl: ID '=' . exp fim_decl
   59     | ID '=' . funcao fim_decl
   60     | ID '=' . objeto fim_decl

    NUM       shift, and go to state 1
    ID        shift, and go to state 118
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    FUNCTION  shift, and go to state 12
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 119

    funcao  go to state 120
    objeto  go to state 121
    exp     go to state 122
    val     go to state 35


State 82

   65 fim_decl: ',' . decl

    ID  shift, and go to state 44

    decl  go to state 123


State 83

   58 decl: ID fim_decl .

    $default  reduce using rule 58 (decl)


State 84

   75 condicional: IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo

    ')'  shift, and go to state 124


State 85

   80 condicao: exp . '>' exp
   81         | exp . '<' exp
   82         | exp . IGUAL exp
   83         | exp . DIF exp
   84         | exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    IGUAL  shift, and go to state 125
    DIF    shift, and go to state 126
    '+'    shift, and go to state 63
    '-'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66
    '%'    shift, and go to state 67
    '('    shift, and go to state 68
    '>'    shift, and go to state 127
    '<'    shift, and go to state 128

    $default  reduce using rule 84 (condicao)


State 86

   71 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 129


State 87

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp

    ADD  shift, and go to state 36
    '='  shift, and go to state 40
    '.'  shift, and go to state 130
    '['  shift, and go to state 42

    indices  go to state 43


State 88

   72 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 44

    decl  go to state 131


State 89

   73 for_loop: FOR '(' atr . ';' condicao ';' atr ')' corpo
   74         | FOR '(' atr . ';' condicao ';' val ')' OBJ

    ';'  shift, and go to state 132


State 90

   18 funcao: FUNCTION ID empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func . '(' ')' corpo desempilha_escopo_func

    '('  shift, and go to state 133


State 91

   20 funcao: FUNCTION empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 134
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    args  go to state 135
    arg   go to state 136
    exp   go to state 137
    val   go to state 35


State 92

   90 exp: ID '.' . ID

    ID  shift, and go to state 138


State 93

  102 val: '(' exp ')' .

    $default  reduce using rule 102 (val)


State 94

   17 bloco: '{' empilha_escopo cmds . '}' desempilha_escopo

    '}'  shift, and go to state 139


State 95

   69 separador: separador ';' .

    $default  reduce using rule 69 (separador)


State 96

    2 cmds: cmd_1 separador cmds .

    $default  reduce using rule 2 (cmds)


State 97

   85 exp: exp . '+' exp
   85    | exp '+' exp .
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 85 (exp)


State 98

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   86    | exp '-' exp .
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 86 (exp)


State 99

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   87    | exp '*' exp .
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '('  shift, and go to state 68

    $default  reduce using rule 87 (exp)


State 100

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   88    | exp '/' exp .
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '('  shift, and go to state 68

    $default  reduce using rule 88 (exp)


State 101

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   89    | exp '%' exp .
   92    | exp . '(' params ')'

    '('  shift, and go to state 68

    $default  reduce using rule 89 (exp)


State 102

   54 matrix: ID . indices
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC  shift, and go to state 37
    '.'  shift, and go to state 92
    '['  shift, and go to state 140

    $default  reduce using rule 99 (val)

    indices  go to state 141


State 103

   96 params: matrix . ',' params

    ','  shift, and go to state 142


State 104

   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'
   93 params: exp . ',' params
   94       | exp .

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ','  shift, and go to state 143

    $default  reduce using rule 94 (params)


State 105

   92 exp: exp '(' params . ')'

    ')'  shift, and go to state 144


State 106

   39 atr_recursiva: ID '=' . exp
   40              | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 72
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr_recursiva  go to state 145
    exp            go to state 146
    val            go to state 35


State 107

   44 prop: ID '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 147
    val  go to state 35


State 108

   42 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 148
    val  go to state 35


State 109

   41 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 149
    val  go to state 35


State 110

   46 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 150


State 111

   55 indices: '[' exp ']' . indices
   56        | '[' exp ']' .

    '['  shift, and go to state 140

    $default  reduce using rule 56 (indices)

    indices  go to state 151


State 112

   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   54 matrix: ID . indices
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC  shift, and go to state 37
    '.'  shift, and go to state 92
    '['  shift, and go to state 42

    $default  reduce using rule 99 (val)

    indices  go to state 152


State 113

   50 rec: atr_array .

    $default  reduce using rule 50 (rec)


State 114

   45 atr_array: ID indices '=' rec .

    $default  reduce using rule 45 (atr_array)


State 115

   48 rec: matexp .
   52 matexp: matexp . '*' matexp
   53       | matexp . '+' matexp

    '+'  shift, and go to state 153
    '*'  shift, and go to state 154

    $default  reduce using rule 48 (rec)


State 116

   51 matexp: matrix .

    $default  reduce using rule 51 (matexp)


State 117

   47 rec: exp .
   49    | exp . '=' rec
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '='  shift, and go to state 155
    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    '-'       [reduce using rule 47 (rec)]
    '('       [reduce using rule 47 (rec)]
    $default  reduce using rule 47 (rec)


State 118

   21 funcao: ID . LAMBDA_NOVO_OBJ
   22       | ID . ARROW BLOCO
   23       | ID . ARROW exp
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC              shift, and go to state 37
    LAMBDA_NOVO_OBJ  shift, and go to state 38
    ARROW            shift, and go to state 39
    '.'              shift, and go to state 92

    $default  reduce using rule 99 (val)


State 119

   61 objeto: '{' . corpo_obj '}'

    ID  shift, and go to state 156

    corpo_obj  go to state 157


State 120

   59 decl: ID '=' funcao . fim_decl

    ','  shift, and go to state 82

    $default  reduce using rule 66 (fim_decl)

    fim_decl  go to state 158


State 121

   60 decl: ID '=' objeto . fim_decl

    ','  shift, and go to state 82

    $default  reduce using rule 66 (fim_decl)

    fim_decl  go to state 159


State 122

   57 decl: ID '=' exp . fim_decl
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ','  shift, and go to state 82

    '-'       [reduce using rule 66 (fim_decl)]
    '('       [reduce using rule 66 (fim_decl)]
    $default  reduce using rule 66 (fim_decl)

    fim_decl  go to state 160


State 123

   65 fim_decl: ',' decl .

    $default  reduce using rule 65 (fim_decl)


State 124

   75 condicional: IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 161


State 125

   82 condicao: exp IGUAL . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 162
    val  go to state 35


State 126

   83 condicao: exp DIF . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 163
    val  go to state 35


State 127

   80 condicao: exp '>' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 164
    val  go to state 35


State 128

   81 condicao: exp '<' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 165
    val  go to state 35


State 129

   71 while_loop: WHILE '(' condicao ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 169
    exp          go to state 34
    val          go to state 35


State 130

   41 atr_obj: ID '.' . prop '=' exp
   42        | ID '.' . prop ADD exp

    ID  shift, and go to state 170

    prop  go to state 76


State 131

   72 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 171


State 132

   73 for_loop: FOR '(' atr ';' . condicao ';' atr ')' corpo
   74         | FOR '(' atr ';' . condicao ';' val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    condicao  go to state 172
    exp       go to state 85
    val       go to state 35


State 133

   18 funcao: FUNCTION ID empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' . ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 134
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    ')'     shift, and go to state 173

    args  go to state 174
    arg   go to state 136
    exp   go to state 137
    val   go to state 35


State 134

   26 arg: ID .
   27    | ID . '=' exp
   90 exp: ID . '.' ID
   99 val: ID .
  106    | ID . INC

    INC  shift, and go to state 37
    '='  shift, and go to state 175
    '.'  shift, and go to state 92

    ')'       reduce using rule 26 (arg)
    ')'       [reduce using rule 99 (val)]
    ','       reduce using rule 26 (arg)
    ','       [reduce using rule 99 (val)]
    $default  reduce using rule 99 (val)


State 135

   20 funcao: FUNCTION empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   24 args: args . ',' arg

    ')'  shift, and go to state 176
    ','  shift, and go to state 177


State 136

   25 args: arg .

    $default  reduce using rule 25 (args)


State 137

   28 arg: exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 28 (arg)


State 138

   90 exp: ID '.' ID .

    $default  reduce using rule 90 (exp)


State 139

   17 bloco: '{' empilha_escopo cmds '}' . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 178


State 140

   55 indices: '[' . exp ']' indices
   56        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 79
    val  go to state 35


State 141

   54 matrix: ID indices .

    $default  reduce using rule 54 (matrix)


State 142

   96 params: matrix ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 102
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    $default  reduce using rule 95 (params)

    matrix  go to state 103
    exp     go to state 104
    params  go to state 179
    val     go to state 35


State 143

   93 params: exp ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 102
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    $default  reduce using rule 95 (params)

    matrix  go to state 103
    exp     go to state 104
    params  go to state 180
    val     go to state 35


State 144

   92 exp: exp '(' params ')' .

    $default  reduce using rule 92 (exp)


State 145

   40 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 40 (atr_recursiva)


State 146

   39 atr_recursiva: ID '=' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 39 (atr_recursiva)


State 147

   44 prop: ID '[' exp . ']'
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ']'  shift, and go to state 181


State 148

   42 atr_obj: ID '.' prop ADD exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 42 (atr_obj)


State 149

   41 atr_obj: ID '.' prop '=' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 41 (atr_obj)


State 150

   46 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 182
    val  go to state 35


State 151

   55 indices: '[' exp ']' indices .

    $default  reduce using rule 55 (indices)


State 152

   45 atr_array: ID indices . '=' rec
   54 matrix: ID indices .

    '='  shift, and go to state 80

    $default  reduce using rule 54 (matrix)


State 153

   53 matexp: matexp '+' . matexp

    ID  shift, and go to state 183

    matexp  go to state 184
    matrix  go to state 116


State 154

   52 matexp: matexp '*' . matexp

    ID  shift, and go to state 183

    matexp  go to state 185
    matrix  go to state 116


State 155

   49 rec: exp '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 112
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr_array  go to state 113
    rec        go to state 186
    matexp     go to state 115
    matrix     go to state 116
    exp        go to state 117
    val        go to state 35


State 156

   62 corpo_obj: ID . ':' exp ',' corpo_obj
   63          | ID . ':' exp
   64          | ID . ':' objeto

    ':'  shift, and go to state 187


State 157

   61 objeto: '{' corpo_obj . '}'

    '}'  shift, and go to state 188


State 158

   59 decl: ID '=' funcao fim_decl .

    $default  reduce using rule 59 (decl)


State 159

   60 decl: ID '=' objeto fim_decl .

    $default  reduce using rule 60 (decl)


State 160

   57 decl: ID '=' exp fim_decl .

    $default  reduce using rule 57 (decl)


State 161

   75 condicional: IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 189
    exp          go to state 34
    val          go to state 35


State 162

   82 condicao: exp IGUAL exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 82 (condicao)


State 163

   83 condicao: exp DIF exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 83 (condicao)


State 164

   80 condicao: exp '>' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 80 (condicao)


State 165

   81 condicao: exp '<' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 81 (condicao)


State 166

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo
   77 corpo: '{' . cmds '}'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19

    NUM       [reduce using rule 31 (empilha_escopo)]
    ID        [reduce using rule 31 (empilha_escopo)]
    LET       [reduce using rule 31 (empilha_escopo)]
    VAR       [reduce using rule 31 (empilha_escopo)]
    CONST     [reduce using rule 31 (empilha_escopo)]
    OBJ       [reduce using rule 31 (empilha_escopo)]
    ARRAY     [reduce using rule 31 (empilha_escopo)]
    STRING    [reduce using rule 31 (empilha_escopo)]
    IF        [reduce using rule 31 (empilha_escopo)]
    WHILE     [reduce using rule 31 (empilha_escopo)]
    FOR       [reduce using rule 31 (empilha_escopo)]
    FUNCTION  [reduce using rule 31 (empilha_escopo)]
    RETURN    [reduce using rule 31 (empilha_escopo)]
    BLOCO     [reduce using rule 31 (empilha_escopo)]
    TRUE      [reduce using rule 31 (empilha_escopo)]
    FALSE     [reduce using rule 31 (empilha_escopo)]
    '-'       [reduce using rule 31 (empilha_escopo)]
    '('       [reduce using rule 31 (empilha_escopo)]
    '{'       [reduce using rule 31 (empilha_escopo)]
    '}'       reduce using rule 4 (cmds)
    '}'       [reduce using rule 31 (empilha_escopo)]
    $default  reduce using rule 4 (cmds)

    cmds            go to state 190
    cmd_1           go to state 22
    cmd_2           go to state 23
    bloco           go to state 24
    funcao          go to state 25
    empilha_escopo  go to state 58
    atr             go to state 26
    atr_id          go to state 27
    atr_obj         go to state 28
    atr_array       go to state 29
    loop            go to state 30
    while_loop      go to state 31
    for_loop        go to state 32
    condicional     go to state 33
    exp             go to state 34
    val             go to state 35


State 167

   78 corpo: cmd_1 . ';'

    ';'  shift, and go to state 191


State 168

   79 corpo: cmd_2 .

    $default  reduce using rule 79 (corpo)


State 169

   71 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 71 (while_loop)


State 170

   43 prop: ID .
   44     | ID . '[' exp ']'

    '['  shift, and go to state 107

    $default  reduce using rule 43 (prop)


State 171

   72 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    condicao  go to state 192
    exp       go to state 85
    val       go to state 35


State 172

   73 for_loop: FOR '(' atr ';' condicao . ';' atr ')' corpo
   74         | FOR '(' atr ';' condicao . ';' val ')' OBJ

    ';'  shift, and go to state 193


State 173

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 194
    exp          go to state 34
    val          go to state 35


State 174

   18 funcao: FUNCTION ID empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   24 args: args . ',' arg

    ')'  shift, and go to state 195
    ','  shift, and go to state 177


State 175

   27 arg: ID '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    exp  go to state 196
    val  go to state 35


State 176

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 197
    exp          go to state 34
    val          go to state 35


State 177

   24 args: args ',' . arg

    NUM     shift, and go to state 1
    ID      shift, and go to state 134
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    arg  go to state 198
    exp  go to state 137
    val  go to state 35


State 178

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo .

    $default  reduce using rule 17 (bloco)


State 179

   96 params: matrix ',' params .

    $default  reduce using rule 96 (params)


State 180

   93 params: exp ',' params .

    $default  reduce using rule 93 (params)


State 181

   44 prop: ID '[' exp ']' .

    $default  reduce using rule 44 (prop)


State 182

   46 atr_array: ID '[' atr ']' '=' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 46 (atr_array)


State 183

   54 matrix: ID . indices

    '['  shift, and go to state 140

    indices  go to state 141


State 184

   52 matexp: matexp . '*' matexp
   53       | matexp . '+' matexp
   53       | matexp '+' matexp .

    '*'  shift, and go to state 154

    $default  reduce using rule 53 (matexp)


State 185

   52 matexp: matexp . '*' matexp
   52       | matexp '*' matexp .
   53       | matexp . '+' matexp

    $default  reduce using rule 52 (matexp)


State 186

   49 rec: exp '=' rec .

    $default  reduce using rule 49 (rec)


State 187

   62 corpo_obj: ID ':' . exp ',' corpo_obj
   63          | ID ':' . exp
   64          | ID ':' . objeto

    NUM     shift, and go to state 1
    ID      shift, and go to state 54
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '{'     shift, and go to state 119

    objeto  go to state 199
    exp     go to state 200
    val     go to state 35


State 188

   61 objeto: '{' corpo_obj '}' .

    $default  reduce using rule 61 (objeto)


State 189

   75 condicional: IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 201


State 190

   77 corpo: '{' cmds . '}'

    '}'  shift, and go to state 202


State 191

   78 corpo: cmd_1 ';' .

    $default  reduce using rule 78 (corpo)


State 192

   72 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 203


State 193

   73 for_loop: FOR '(' atr ';' condicao ';' . atr ')' corpo
   74         | FOR '(' atr ';' condicao ';' . val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 204
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18

    atr        go to state 205
    atr_id     go to state 27
    atr_obj    go to state 28
    atr_array  go to state 29
    val        go to state 206


State 194

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 207
    desempilha_escopo       go to state 208


State 195

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 209
    exp          go to state 34
    val          go to state 35


State 196

   27 arg: ID '=' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68

    $default  reduce using rule 27 (arg)


State 197

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 210
    desempilha_escopo       go to state 208


State 198

   24 args: args ',' arg .

    $default  reduce using rule 24 (args)


State 199

   64 corpo_obj: ID ':' objeto .

    $default  reduce using rule 64 (corpo_obj)


State 200

   62 corpo_obj: ID ':' exp . ',' corpo_obj
   63          | ID ':' exp .
   85 exp: exp . '+' exp
   86    | exp . '-' exp
   87    | exp . '*' exp
   88    | exp . '/' exp
   89    | exp . '%' exp
   92    | exp . '(' params ')'

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '%'  shift, and go to state 67
    '('  shift, and go to state 68
    ','  shift, and go to state 211

    $default  reduce using rule 63 (corpo_obj)


State 201

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo . ELSE empilha_escopo corpo desempilha_escopo
   76            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo .

    ELSE  shift, and go to state 212

    $default  reduce using rule 76 (condicional)


State 202

   77 corpo: '{' cmds '}' .

    $default  reduce using rule 77 (corpo)


State 203

   72 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 87

    atr        go to state 213
    atr_id     go to state 27
    atr_obj    go to state 28
    atr_array  go to state 29


State 204

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   99 val: ID .
  106    | ID . INC

    ADD  shift, and go to state 36
    INC  shift, and go to state 37
    '='  shift, and go to state 40
    '.'  shift, and go to state 130
    '['  shift, and go to state 42

    $default  reduce using rule 99 (val)

    indices  go to state 43


State 205

   73 for_loop: FOR '(' atr ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 214


State 206

   74 for_loop: FOR '(' atr ';' condicao ';' val . ')' OBJ

    ')'  shift, and go to state 215


State 207

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func .

    $default  reduce using rule 19 (funcao)


State 208

   30 desempilha_escopo_func: desempilha_escopo .

    $default  reduce using rule 30 (desempilha_escopo_func)


State 209

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 216
    desempilha_escopo       go to state 208


State 210

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 20 (funcao)


State 211

   62 corpo_obj: ID ':' exp ',' . corpo_obj

    ID  shift, and go to state 156

    corpo_obj  go to state 217


State 212

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 218


State 213

   72 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 219


State 214

   73 for_loop: FOR '(' atr ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 220
    exp          go to state 34
    val          go to state 35


State 215

   74 for_loop: FOR '(' atr ';' condicao ';' val ')' . OBJ

    OBJ  shift, and go to state 221


State 216

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 18 (funcao)


State 217

   62 corpo_obj: ID ':' exp ',' corpo_obj .

    $default  reduce using rule 62 (corpo_obj)


State 218

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 222
    exp          go to state 34
    val          go to state 35


State 219

   72 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 166

    cmd_1        go to state 167
    cmd_2        go to state 168
    bloco        go to state 24
    funcao       go to state 25
    atr          go to state 26
    atr_id       go to state 27
    atr_obj      go to state 28
    atr_array    go to state 29
    loop         go to state 30
    while_loop   go to state 31
    for_loop     go to state 32
    condicional  go to state 33
    corpo        go to state 223
    exp          go to state 34
    val          go to state 35


State 220

   73 for_loop: FOR '(' atr ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 73 (for_loop)


State 221

   74 for_loop: FOR '(' atr ';' condicao ';' val ')' OBJ .

    $default  reduce using rule 74 (for_loop)


State 222

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 224


State 223

   72 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 72 (for_loop)


State 224

   75 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo .

    $default  reduce using rule 75 (condicional)

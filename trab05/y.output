Terminals unused in grammar

    '?'


State 2 conflicts: 1 shift/reduce
State 13 conflicts: 11 shift/reduce
State 36 conflicts: 2 shift/reduce
State 57 conflicts: 2 shift/reduce
State 74 conflicts: 25 reduce/reduce
State 75 conflicts: 2 shift/reduce
State 79 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 123 conflicts: 2 shift/reduce
State 128 conflicts: 2 shift/reduce
State 140 conflicts: 2 reduce/reduce
State 174 conflicts: 20 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 separador cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | VAR decl
    8      | CONST decl
    9      | loop
   10      | exp ASM
   11      | exp
   12      | RETURN
   13      | RETURN exp

   14 cmd_2: condicional
   15      | funcao
   16      | bloco

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func
   20       | FUNCTION empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   21       | ID LAMBDA_NOVO_OBJ
   22       | ID ARROW BLOCO
   23       | ID ARROW exp

   24 args: args ',' arg
   25     | arg

   26 arg: ID
   27    | ID '=' exp
   28    | exp

   29 empilha_escopo_func: empilha_escopo

   30 desempilha_escopo_func: desempilha_escopo

   31 empilha_escopo: %empty

   32 desempilha_escopo: %empty

   33 atr: atr_id
   34    | atr_obj
   35    | atr_array

   36 atr_id: ID '=' exp
   37       | ID '=' atr_recursiva
   38       | ID ADD exp

   39 atr_recursiva: ID '=' exp
   40              | ID '=' atr_recursiva

   41 atr_obj: ID '.' prop '=' exp
   42        | ID '.' prop ADD exp

   43 prop: ID
   44     | ID '[' exp ']'

   45 atr_array: ID indices '=' rec
   46          | ID '[' atr ']' '=' exp

   47 rec: exp
   48    | matexp
   49    | exp '=' rec
   50    | atr_array

   51 matexp: matrix
   52       | matexp '*' matexp
   53       | matexp '+' matexp

   54 matrix: ID indices

   55 indices: '[' exp ']' indices
   56        | '[' exp ']'

   57 decl: ID '=' exp fim_decl
   58     | ID fim_decl
   59     | ID '=' funcao fim_decl
   60     | ID '=' objeto fim_decl

   61 objeto: '{' corpo_obj '}'

   62 corpo_obj: ID ':' exp ',' corpo_obj
   63          | ID ':' exp
   64          | ID ':' objeto

   65 array: '[' corpo_array ']'

   66 @1: %empty

   67 corpo_array: exp @1 exps_array

   68 $@2: %empty

   69 exps_array: ',' exp $@2 exps_array
   70           | %empty

   71 fim_decl: ',' decl
   72         | %empty

   73 loop: while_loop
   74     | for_loop

   75 separador: separador ';'
   76          | %empty

   77 while_loop: WHILE '(' condicao ')' corpo

   78 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   79         | FOR '(' atr ';' condicao ';' atr ')' corpo
   80         | FOR '(' atr ';' condicao ';' val ')' OBJ

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo

   83 corpo: '{' cmds '}'
   84      | cmd_1 ';'
   85      | cmd_2

   86 condicao: exp '>' exp
   87         | exp '<' exp
   88         | exp IGUAL exp
   89         | exp DIF exp
   90         | exp

   91 exp: exp '+' exp
   92    | exp '-' exp
   93    | exp '*' exp
   94    | exp '/' exp
   95    | exp '%' exp
   96    | ID '.' ID
   97    | val
   98    | exp '(' params ')'

   99 params: exp ',' params
  100       | exp
  101       | %empty
  102       | matrix ',' params

  103 val: TRUE
  104    | FALSE
  105    | ID
  106    | NUM
  107    | '-' NUM
  108    | '(' exp ')'
  109    | OBJ
  110    | ARRAY
  111    | STRING
  112    | ID INC
  113    | BLOCO
  114    | array


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 95
    '(' (40) 18 19 20 77 78 79 80 81 82 98 108
    ')' (41) 18 19 20 77 78 79 80 81 82 98 108
    '*' (42) 52 93
    '+' (43) 53 91
    ',' (44) 24 62 69 71 99 102
    '-' (45) 92 107
    '.' (46) 41 42 96
    '/' (47) 94
    ':' (58) 62 63 64
    ';' (59) 75 78 79 80 84
    '<' (60) 87
    '=' (61) 27 36 37 39 40 41 45 46 49 57 59 60
    '>' (62) 86
    '?' (63)
    'T' (84)
    '[' (91) 44 46 55 56 65
    ']' (93) 44 46 55 56 65
    '{' (123) 17 61 83
    '}' (125) 17 61 83
    error (256)
    NUM (258) 106 107
    ID (259) 18 19 21 22 23 26 27 36 37 38 39 40 41 42 43 44 45 46 54 57 58 59 60 62 63 64 96 105 112
    LET (260) 6 78
    VAR (261) 7
    CONST (262) 8
    OBJ (263) 80 109
    ARRAY (264) 110
    STRING (265) 111
    ADD (266) 38 42
    IF (267) 81 82
    ELSE (268) 81
    IGUAL (269) 88
    DIF (270) 89
    INC (271) 112
    WHILE (272) 77
    FOR (273) 78 79 80
    FUNCTION (274) 18 19 20
    ASM (275) 10
    RETURN (276) 12 13
    BLOCO (277) 22 113
    LAMBDA_NOVO_OBJ (278) 21
    ARROW (279) 22 23
    TRUE (280) 103
    FALSE (281) 104


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    s (48)
        on left: 1
        on right: 0
    cmds (49)
        on left: 2 3 4
        on right: 1 2 3 17 83
    cmd_1 (50)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 2 84
    cmd_2 (51)
        on left: 14 15 16
        on right: 3 85
    bloco (52)
        on left: 17
        on right: 16
    funcao (53)
        on left: 18 19 20 21 22 23
        on right: 15 59
    args (54)
        on left: 24 25
        on right: 18 20 24
    arg (55)
        on left: 26 27 28
        on right: 24 25
    empilha_escopo_func (56)
        on left: 29
        on right: 18 19 20
    desempilha_escopo_func (57)
        on left: 30
        on right: 18 19 20
    empilha_escopo (58)
        on left: 31
        on right: 17 29 81 82
    desempilha_escopo (59)
        on left: 32
        on right: 17 30 81 82
    atr (60)
        on left: 33 34 35
        on right: 5 46 78 79 80
    atr_id (61)
        on left: 36 37 38
        on right: 33
    atr_recursiva (62)
        on left: 39 40
        on right: 37 40
    atr_obj (63)
        on left: 41 42
        on right: 34
    prop (64)
        on left: 43 44
        on right: 41 42
    atr_array (65)
        on left: 45 46
        on right: 35 50
    rec (66)
        on left: 47 48 49 50
        on right: 45 49
    matexp (67)
        on left: 51 52 53
        on right: 48 52 53
    matrix (68)
        on left: 54
        on right: 51 102
    indices (69)
        on left: 55 56
        on right: 45 54 55
    decl (70)
        on left: 57 58 59 60
        on right: 6 7 8 71 78
    objeto (71)
        on left: 61
        on right: 60 64
    corpo_obj (72)
        on left: 62 63 64
        on right: 61 62
    array (73)
        on left: 65
        on right: 114
    corpo_array (74)
        on left: 67
        on right: 65
    @1 (75)
        on left: 66
        on right: 67
    exps_array (76)
        on left: 69 70
        on right: 67 69
    $@2 (77)
        on left: 68
        on right: 69
    fim_decl (78)
        on left: 71 72
        on right: 57 58 59 60
    loop (79)
        on left: 73 74
        on right: 9
    separador (80)
        on left: 75 76
        on right: 2 75
    while_loop (81)
        on left: 77
        on right: 73
    for_loop (82)
        on left: 78 79 80
        on right: 74
    condicional (83)
        on left: 81 82
        on right: 14
    corpo (84)
        on left: 83 84 85
        on right: 18 19 20 77 78 79 81 82
    condicao (85)
        on left: 86 87 88 89 90
        on right: 77 78 79 80 81 82
    exp (86)
        on left: 91 92 93 94 95 96 97 98
        on right: 10 11 13 23 27 28 36 38 39 41 42 44 46 47 49 55 56 57 62 63 67 69 86 87 88 89 90 91 92 93 94 95 98 99 100 108
    params (87)
        on left: 99 100 101 102
        on right: 98 99 102
    val (88)
        on left: 103 104 105 106 107 108 109 110 111 112 113 114
        on right: 80 97


State 0

    0 $accept: . s $end

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '['       shift, and go to state 20

    $default  reduce using rule 4 (cmds)

    s            go to state 21
    cmds         go to state 22
    cmd_1        go to state 23
    cmd_2        go to state 24
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    exp          go to state 36
    val          go to state 37


State 1

  106 val: NUM .

    $default  reduce using rule 106 (val)


State 2

   21 funcao: ID . LAMBDA_NOVO_OBJ
   22       | ID . ARROW BLOCO
   23       | ID . ARROW exp
   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    ADD              shift, and go to state 38
    INC              shift, and go to state 39
    LAMBDA_NOVO_OBJ  shift, and go to state 40
    ARROW            shift, and go to state 41
    '='              shift, and go to state 42
    '.'              shift, and go to state 43
    '['              shift, and go to state 44

    '['       [reduce using rule 105 (val)]
    $default  reduce using rule 105 (val)

    indices  go to state 45


State 3

    6 cmd_1: LET . decl

    ID  shift, and go to state 46

    decl  go to state 47


State 4

    7 cmd_1: VAR . decl

    ID  shift, and go to state 46

    decl  go to state 48


State 5

    8 cmd_1: CONST . decl

    ID  shift, and go to state 46

    decl  go to state 49


State 6

  109 val: OBJ .

    $default  reduce using rule 109 (val)


State 7

  110 val: ARRAY .

    $default  reduce using rule 110 (val)


State 8

  111 val: STRING .

    $default  reduce using rule 111 (val)


State 9

   81 condicional: IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF . '(' condicao ')' empilha_escopo corpo desempilha_escopo

    '('  shift, and go to state 50


State 10

   77 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 51


State 11

   78 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   79         | FOR . '(' atr ';' condicao ';' atr ')' corpo
   80         | FOR . '(' atr ';' condicao ';' val ')' OBJ

    '('  shift, and go to state 52


State 12

   18 funcao: FUNCTION . ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION . ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func
   20       | FUNCTION . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func

    ID  shift, and go to state 53

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo_func  go to state 54
    empilha_escopo       go to state 55


State 13

   12 cmd_1: RETURN .
   13      | RETURN . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    NUM       [reduce using rule 12 (cmd_1)]
    ID        [reduce using rule 12 (cmd_1)]
    OBJ       [reduce using rule 12 (cmd_1)]
    ARRAY     [reduce using rule 12 (cmd_1)]
    STRING    [reduce using rule 12 (cmd_1)]
    BLOCO     [reduce using rule 12 (cmd_1)]
    TRUE      [reduce using rule 12 (cmd_1)]
    FALSE     [reduce using rule 12 (cmd_1)]
    '-'       [reduce using rule 12 (cmd_1)]
    '('       [reduce using rule 12 (cmd_1)]
    '['       [reduce using rule 12 (cmd_1)]
    $default  reduce using rule 12 (cmd_1)

    array  go to state 31
    exp    go to state 57
    val    go to state 37


State 14

  113 val: BLOCO .

    $default  reduce using rule 113 (val)


State 15

  103 val: TRUE .

    $default  reduce using rule 103 (val)


State 16

  104 val: FALSE .

    $default  reduce using rule 104 (val)


State 17

  107 val: '-' . NUM

    NUM  shift, and go to state 58


State 18

  108 val: '(' . exp ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 59
    val    go to state 37


State 19

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 60


State 20

   65 array: '[' . corpo_array ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array        go to state 31
    corpo_array  go to state 61
    exp          go to state 62
    val          go to state 37


State 21

    0 $accept: s . $end

    $end  shift, and go to state 63


State 22

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 23

    2 cmds: cmd_1 . separador cmds

    $default  reduce using rule 76 (separador)

    separador  go to state 64


State 24

    3 cmds: cmd_2 . cmds

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '['       shift, and go to state 20

    $default  reduce using rule 4 (cmds)

    cmds         go to state 65
    cmd_1        go to state 23
    cmd_2        go to state 24
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    exp          go to state 36
    val          go to state 37


State 25

   16 cmd_2: bloco .

    $default  reduce using rule 16 (cmd_2)


State 26

   15 cmd_2: funcao .

    $default  reduce using rule 15 (cmd_2)


State 27

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 28

   33 atr: atr_id .

    $default  reduce using rule 33 (atr)


State 29

   34 atr: atr_obj .

    $default  reduce using rule 34 (atr)


State 30

   35 atr: atr_array .

    $default  reduce using rule 35 (atr)


State 31

  114 val: array .

    $default  reduce using rule 114 (val)


State 32

    9 cmd_1: loop .

    $default  reduce using rule 9 (cmd_1)


State 33

   73 loop: while_loop .

    $default  reduce using rule 73 (loop)


State 34

   74 loop: for_loop .

    $default  reduce using rule 74 (loop)


State 35

   14 cmd_2: condicional .

    $default  reduce using rule 14 (cmd_2)


State 36

   10 cmd_1: exp . ASM
   11      | exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    ASM  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    '-'       [reduce using rule 11 (cmd_1)]
    '('       [reduce using rule 11 (cmd_1)]
    $default  reduce using rule 11 (cmd_1)


State 37

   97 exp: val .

    $default  reduce using rule 97 (exp)


State 38

   38 atr_id: ID ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 73
    val    go to state 37


State 39

  112 val: ID INC .

    $default  reduce using rule 112 (val)


State 40

   21 funcao: ID LAMBDA_NOVO_OBJ .

    $default  reduce using rule 21 (funcao)


State 41

   22 funcao: ID ARROW . BLOCO
   23       | ID ARROW . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 74
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 75
    val    go to state 37


State 42

   36 atr_id: ID '=' . exp
   37       | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 76
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr_recursiva  go to state 77
    array          go to state 31
    exp            go to state 78
    val            go to state 37


State 43

   41 atr_obj: ID '.' . prop '=' exp
   42        | ID '.' . prop ADD exp
   96 exp: ID '.' . ID

    ID  shift, and go to state 79

    prop  go to state 80


State 44

   46 atr_array: ID '[' . atr ']' '=' exp
   55 indices: '[' . exp ']' indices
   56        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 81
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr        go to state 82
    atr_id     go to state 28
    atr_obj    go to state 29
    atr_array  go to state 30
    array      go to state 31
    exp        go to state 83
    val        go to state 37


State 45

   45 atr_array: ID indices . '=' rec

    '='  shift, and go to state 84


State 46

   57 decl: ID . '=' exp fim_decl
   58     | ID . fim_decl
   59     | ID . '=' funcao fim_decl
   60     | ID . '=' objeto fim_decl

    '='  shift, and go to state 85
    ','  shift, and go to state 86

    $default  reduce using rule 72 (fim_decl)

    fim_decl  go to state 87


State 47

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 48

    7 cmd_1: VAR decl .

    $default  reduce using rule 7 (cmd_1)


State 49

    8 cmd_1: CONST decl .

    $default  reduce using rule 8 (cmd_1)


State 50

   81 condicional: IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' . condicao ')' empilha_escopo corpo desempilha_escopo

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array     go to state 31
    condicao  go to state 88
    exp       go to state 89
    val       go to state 37


State 51

   77 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array     go to state 31
    condicao  go to state 90
    exp       go to state 89
    val       go to state 37


State 52

   78 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   79         | FOR '(' . atr ';' condicao ';' atr ')' corpo
   80         | FOR '(' . atr ';' condicao ';' val ')' OBJ

    ID   shift, and go to state 91
    LET  shift, and go to state 92

    atr        go to state 93
    atr_id     go to state 28
    atr_obj    go to state 29
    atr_array  go to state 30


State 53

   18 funcao: FUNCTION ID . empilha_escopo_func '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID . empilha_escopo_func '(' ')' corpo desempilha_escopo_func

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo_func  go to state 94
    empilha_escopo       go to state 55


State 54

   20 funcao: FUNCTION empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func

    '('  shift, and go to state 95


State 55

   29 empilha_escopo_func: empilha_escopo .

    $default  reduce using rule 29 (empilha_escopo_func)


State 56

   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC  shift, and go to state 39
    '.'  shift, and go to state 96

    $default  reduce using rule 105 (val)


State 57

   13 cmd_1: RETURN exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    '-'       [reduce using rule 13 (cmd_1)]
    '('       [reduce using rule 13 (cmd_1)]
    $default  reduce using rule 13 (cmd_1)


State 58

  107 val: '-' NUM .

    $default  reduce using rule 107 (val)


State 59

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'
  108 val: '(' exp . ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ')'  shift, and go to state 97


State 60

   17 bloco: '{' empilha_escopo . cmds '}' desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '['       shift, and go to state 20

    $default  reduce using rule 4 (cmds)

    cmds         go to state 98
    cmd_1        go to state 23
    cmd_2        go to state 24
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    exp          go to state 36
    val          go to state 37


State 61

   65 array: '[' corpo_array . ']'

    ']'  shift, and go to state 99


State 62

   67 corpo_array: exp . @1 exps_array
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 66 (@1)

    @1  go to state 100


State 63

    0 $accept: s $end .

    $default  accept


State 64

    2 cmds: cmd_1 separador . cmds
   75 separador: separador . ';'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '['       shift, and go to state 20
    ';'       shift, and go to state 101

    $default  reduce using rule 4 (cmds)

    cmds         go to state 102
    cmd_1        go to state 23
    cmd_2        go to state 24
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    exp          go to state 36
    val          go to state 37


State 65

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 66

   10 cmd_1: exp ASM .

    $default  reduce using rule 10 (cmd_1)


State 67

   91 exp: exp '+' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 103
    val    go to state 37


State 68

   92 exp: exp '-' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 104
    val    go to state 37


State 69

   93 exp: exp '*' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 105
    val    go to state 37


State 70

   94 exp: exp '/' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 106
    val    go to state 37


State 71

   95 exp: exp '%' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 107
    val    go to state 37


State 72

   98 exp: exp '(' . params ')'

    NUM     shift, and go to state 1
    ID      shift, and go to state 108
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    $default  reduce using rule 101 (params)

    matrix  go to state 109
    array   go to state 31
    exp     go to state 110
    params  go to state 111
    val     go to state 37


State 73

   38 atr_id: ID ADD exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 38 (atr_id)


State 74

   22 funcao: ID ARROW BLOCO .
  113 val: BLOCO .

    $end      reduce using rule 22 (funcao)
    $end      [reduce using rule 113 (val)]
    NUM       reduce using rule 22 (funcao)
    NUM       [reduce using rule 113 (val)]
    ID        reduce using rule 22 (funcao)
    ID        [reduce using rule 113 (val)]
    LET       reduce using rule 22 (funcao)
    LET       [reduce using rule 113 (val)]
    VAR       reduce using rule 22 (funcao)
    VAR       [reduce using rule 113 (val)]
    CONST     reduce using rule 22 (funcao)
    CONST     [reduce using rule 113 (val)]
    OBJ       reduce using rule 22 (funcao)
    OBJ       [reduce using rule 113 (val)]
    ARRAY     reduce using rule 22 (funcao)
    ARRAY     [reduce using rule 113 (val)]
    STRING    reduce using rule 22 (funcao)
    STRING    [reduce using rule 113 (val)]
    IF        reduce using rule 22 (funcao)
    IF        [reduce using rule 113 (val)]
    ELSE      reduce using rule 22 (funcao)
    ELSE      [reduce using rule 113 (val)]
    WHILE     reduce using rule 22 (funcao)
    WHILE     [reduce using rule 113 (val)]
    FOR       reduce using rule 22 (funcao)
    FOR       [reduce using rule 113 (val)]
    FUNCTION  reduce using rule 22 (funcao)
    FUNCTION  [reduce using rule 113 (val)]
    RETURN    reduce using rule 22 (funcao)
    RETURN    [reduce using rule 113 (val)]
    BLOCO     reduce using rule 22 (funcao)
    BLOCO     [reduce using rule 113 (val)]
    TRUE      reduce using rule 22 (funcao)
    TRUE      [reduce using rule 113 (val)]
    FALSE     reduce using rule 22 (funcao)
    FALSE     [reduce using rule 113 (val)]
    '+'       reduce using rule 113 (val)
    '-'       reduce using rule 22 (funcao)
    '-'       [reduce using rule 113 (val)]
    '*'       reduce using rule 113 (val)
    '/'       reduce using rule 113 (val)
    '%'       reduce using rule 113 (val)
    '('       reduce using rule 22 (funcao)
    '('       [reduce using rule 113 (val)]
    '{'       reduce using rule 22 (funcao)
    '{'       [reduce using rule 113 (val)]
    '}'       reduce using rule 22 (funcao)
    '}'       [reduce using rule 113 (val)]
    ','       reduce using rule 22 (funcao)
    ','       [reduce using rule 113 (val)]
    '['       reduce using rule 22 (funcao)
    '['       [reduce using rule 113 (val)]
    ';'       reduce using rule 22 (funcao)
    ';'       [reduce using rule 113 (val)]
    $default  reduce using rule 22 (funcao)


State 75

   23 funcao: ID ARROW exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    '-'       [reduce using rule 23 (funcao)]
    '('       [reduce using rule 23 (funcao)]
    $default  reduce using rule 23 (funcao)


State 76

   39 atr_recursiva: ID . '=' exp
   40              | ID . '=' atr_recursiva
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC  shift, and go to state 39
    '='  shift, and go to state 112
    '.'  shift, and go to state 96

    $default  reduce using rule 105 (val)


State 77

   37 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 37 (atr_id)


State 78

   36 atr_id: ID '=' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 36 (atr_id)


State 79

   43 prop: ID .
   44     | ID . '[' exp ']'
   96 exp: ID '.' ID .

    '['  shift, and go to state 113

    ADD       reduce using rule 43 (prop)
    '='       reduce using rule 43 (prop)
    '['       [reduce using rule 96 (exp)]
    $default  reduce using rule 96 (exp)


State 80

   41 atr_obj: ID '.' prop . '=' exp
   42        | ID '.' prop . ADD exp

    ADD  shift, and go to state 114
    '='  shift, and go to state 115


State 81

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    ADD  shift, and go to state 38
    INC  shift, and go to state 39
    '='  shift, and go to state 42
    '.'  shift, and go to state 43
    '['  shift, and go to state 44

    $default  reduce using rule 105 (val)

    indices  go to state 45


State 82

   46 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 116


State 83

   55 indices: '[' exp . ']' indices
   56        | '[' exp . ']'
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ']'  shift, and go to state 117


State 84

   45 atr_array: ID indices '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 118
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr_array  go to state 119
    rec        go to state 120
    matexp     go to state 121
    matrix     go to state 122
    array      go to state 31
    exp        go to state 123
    val        go to state 37


State 85

   57 decl: ID '=' . exp fim_decl
   59     | ID '=' . funcao fim_decl
   60     | ID '=' . objeto fim_decl

    NUM       shift, and go to state 1
    ID        shift, and go to state 124
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    FUNCTION  shift, and go to state 12
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 125
    '['       shift, and go to state 20

    funcao  go to state 126
    objeto  go to state 127
    array   go to state 31
    exp     go to state 128
    val     go to state 37


State 86

   71 fim_decl: ',' . decl

    ID  shift, and go to state 46

    decl  go to state 129


State 87

   58 decl: ID fim_decl .

    $default  reduce using rule 58 (decl)


State 88

   81 condicional: IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao . ')' empilha_escopo corpo desempilha_escopo

    ')'  shift, and go to state 130


State 89

   86 condicao: exp . '>' exp
   87         | exp . '<' exp
   88         | exp . IGUAL exp
   89         | exp . DIF exp
   90         | exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    IGUAL  shift, and go to state 131
    DIF    shift, and go to state 132
    '+'    shift, and go to state 67
    '-'    shift, and go to state 68
    '*'    shift, and go to state 69
    '/'    shift, and go to state 70
    '%'    shift, and go to state 71
    '('    shift, and go to state 72
    '>'    shift, and go to state 133
    '<'    shift, and go to state 134

    $default  reduce using rule 90 (condicao)


State 90

   77 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 135


State 91

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp

    ADD  shift, and go to state 38
    '='  shift, and go to state 42
    '.'  shift, and go to state 136
    '['  shift, and go to state 44

    indices  go to state 45


State 92

   78 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 46

    decl  go to state 137


State 93

   79 for_loop: FOR '(' atr . ';' condicao ';' atr ')' corpo
   80         | FOR '(' atr . ';' condicao ';' val ')' OBJ

    ';'  shift, and go to state 138


State 94

   18 funcao: FUNCTION ID empilha_escopo_func . '(' args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func . '(' ')' corpo desempilha_escopo_func

    '('  shift, and go to state 139


State 95

   20 funcao: FUNCTION empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 140
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    args   go to state 141
    arg    go to state 142
    array  go to state 31
    exp    go to state 143
    val    go to state 37


State 96

   96 exp: ID '.' . ID

    ID  shift, and go to state 144


State 97

  108 val: '(' exp ')' .

    $default  reduce using rule 108 (val)


State 98

   17 bloco: '{' empilha_escopo cmds . '}' desempilha_escopo

    '}'  shift, and go to state 145


State 99

   65 array: '[' corpo_array ']' .

    $default  reduce using rule 65 (array)


State 100

   67 corpo_array: exp @1 . exps_array

    ','  shift, and go to state 146

    $default  reduce using rule 70 (exps_array)

    exps_array  go to state 147


State 101

   75 separador: separador ';' .

    $default  reduce using rule 75 (separador)


State 102

    2 cmds: cmd_1 separador cmds .

    $default  reduce using rule 2 (cmds)


State 103

   91 exp: exp . '+' exp
   91    | exp '+' exp .
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 91 (exp)


State 104

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   92    | exp '-' exp .
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 92 (exp)


State 105

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   93    | exp '*' exp .
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '('  shift, and go to state 72

    $default  reduce using rule 93 (exp)


State 106

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   94    | exp '/' exp .
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '('  shift, and go to state 72

    $default  reduce using rule 94 (exp)


State 107

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   95    | exp '%' exp .
   98    | exp . '(' params ')'

    '('  shift, and go to state 72

    $default  reduce using rule 95 (exp)


State 108

   54 matrix: ID . indices
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC  shift, and go to state 39
    '.'  shift, and go to state 96
    '['  shift, and go to state 148

    $default  reduce using rule 105 (val)

    indices  go to state 149


State 109

  102 params: matrix . ',' params

    ','  shift, and go to state 150


State 110

   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'
   99 params: exp . ',' params
  100       | exp .

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ','  shift, and go to state 151

    $default  reduce using rule 100 (params)


State 111

   98 exp: exp '(' params . ')'

    ')'  shift, and go to state 152


State 112

   39 atr_recursiva: ID '=' . exp
   40              | ID '=' . atr_recursiva

    NUM     shift, and go to state 1
    ID      shift, and go to state 76
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr_recursiva  go to state 153
    array          go to state 31
    exp            go to state 154
    val            go to state 37


State 113

   44 prop: ID '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 155
    val    go to state 37


State 114

   42 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 156
    val    go to state 37


State 115

   41 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 157
    val    go to state 37


State 116

   46 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 158


State 117

   55 indices: '[' exp ']' . indices
   56        | '[' exp ']' .

    '['  shift, and go to state 148

    '['       [reduce using rule 56 (indices)]
    $default  reduce using rule 56 (indices)

    indices  go to state 159


State 118

   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
   54 matrix: ID . indices
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC  shift, and go to state 39
    '.'  shift, and go to state 96
    '['  shift, and go to state 44

    '['       [reduce using rule 105 (val)]
    $default  reduce using rule 105 (val)

    indices  go to state 160


State 119

   50 rec: atr_array .

    $default  reduce using rule 50 (rec)


State 120

   45 atr_array: ID indices '=' rec .

    $default  reduce using rule 45 (atr_array)


State 121

   48 rec: matexp .
   52 matexp: matexp . '*' matexp
   53       | matexp . '+' matexp

    '+'  shift, and go to state 161
    '*'  shift, and go to state 162

    $default  reduce using rule 48 (rec)


State 122

   51 matexp: matrix .

    $default  reduce using rule 51 (matexp)


State 123

   47 rec: exp .
   49    | exp . '=' rec
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '='  shift, and go to state 163
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    '-'       [reduce using rule 47 (rec)]
    '('       [reduce using rule 47 (rec)]
    $default  reduce using rule 47 (rec)


State 124

   21 funcao: ID . LAMBDA_NOVO_OBJ
   22       | ID . ARROW BLOCO
   23       | ID . ARROW exp
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC              shift, and go to state 39
    LAMBDA_NOVO_OBJ  shift, and go to state 40
    ARROW            shift, and go to state 41
    '.'              shift, and go to state 96

    $default  reduce using rule 105 (val)


State 125

   61 objeto: '{' . corpo_obj '}'

    ID  shift, and go to state 164

    corpo_obj  go to state 165


State 126

   59 decl: ID '=' funcao . fim_decl

    ','  shift, and go to state 86

    $default  reduce using rule 72 (fim_decl)

    fim_decl  go to state 166


State 127

   60 decl: ID '=' objeto . fim_decl

    ','  shift, and go to state 86

    $default  reduce using rule 72 (fim_decl)

    fim_decl  go to state 167


State 128

   57 decl: ID '=' exp . fim_decl
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ','  shift, and go to state 86

    '-'       [reduce using rule 72 (fim_decl)]
    '('       [reduce using rule 72 (fim_decl)]
    $default  reduce using rule 72 (fim_decl)

    fim_decl  go to state 168


State 129

   71 fim_decl: ',' decl .

    $default  reduce using rule 71 (fim_decl)


State 130

   81 condicional: IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao ')' . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 169


State 131

   88 condicao: exp IGUAL . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 170
    val    go to state 37


State 132

   89 condicao: exp DIF . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 171
    val    go to state 37


State 133

   86 condicao: exp '>' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 172
    val    go to state 37


State 134

   87 condicao: exp '<' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 173
    val    go to state 37


State 135

   77 while_loop: WHILE '(' condicao ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 177
    exp          go to state 36
    val          go to state 37


State 136

   41 atr_obj: ID '.' . prop '=' exp
   42        | ID '.' . prop ADD exp

    ID  shift, and go to state 178

    prop  go to state 80


State 137

   78 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 179


State 138

   79 for_loop: FOR '(' atr ';' . condicao ';' atr ')' corpo
   80         | FOR '(' atr ';' . condicao ';' val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array     go to state 31
    condicao  go to state 180
    exp       go to state 89
    val       go to state 37


State 139

   18 funcao: FUNCTION ID empilha_escopo_func '(' . args ')' corpo desempilha_escopo_func
   19       | FUNCTION ID empilha_escopo_func '(' . ')' corpo desempilha_escopo_func

    NUM     shift, and go to state 1
    ID      shift, and go to state 140
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    ')'     shift, and go to state 181
    '['     shift, and go to state 20

    args   go to state 182
    arg    go to state 142
    array  go to state 31
    exp    go to state 143
    val    go to state 37


State 140

   26 arg: ID .
   27    | ID . '=' exp
   96 exp: ID . '.' ID
  105 val: ID .
  112    | ID . INC

    INC  shift, and go to state 39
    '='  shift, and go to state 183
    '.'  shift, and go to state 96

    ')'       reduce using rule 26 (arg)
    ')'       [reduce using rule 105 (val)]
    ','       reduce using rule 26 (arg)
    ','       [reduce using rule 105 (val)]
    $default  reduce using rule 105 (val)


State 141

   20 funcao: FUNCTION empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   24 args: args . ',' arg

    ')'  shift, and go to state 184
    ','  shift, and go to state 185


State 142

   25 args: arg .

    $default  reduce using rule 25 (args)


State 143

   28 arg: exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 28 (arg)


State 144

   96 exp: ID '.' ID .

    $default  reduce using rule 96 (exp)


State 145

   17 bloco: '{' empilha_escopo cmds '}' . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 186


State 146

   69 exps_array: ',' . exp $@2 exps_array

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 187
    val    go to state 37


State 147

   67 corpo_array: exp @1 exps_array .

    $default  reduce using rule 67 (corpo_array)


State 148

   55 indices: '[' . exp ']' indices
   56        | '[' . exp ']'

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 83
    val    go to state 37


State 149

   54 matrix: ID indices .

    $default  reduce using rule 54 (matrix)


State 150

  102 params: matrix ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 108
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    $default  reduce using rule 101 (params)

    matrix  go to state 109
    array   go to state 31
    exp     go to state 110
    params  go to state 188
    val     go to state 37


State 151

   99 params: exp ',' . params

    NUM     shift, and go to state 1
    ID      shift, and go to state 108
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    $default  reduce using rule 101 (params)

    matrix  go to state 109
    array   go to state 31
    exp     go to state 110
    params  go to state 189
    val     go to state 37


State 152

   98 exp: exp '(' params ')' .

    $default  reduce using rule 98 (exp)


State 153

   40 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 40 (atr_recursiva)


State 154

   39 atr_recursiva: ID '=' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 39 (atr_recursiva)


State 155

   44 prop: ID '[' exp . ']'
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ']'  shift, and go to state 190


State 156

   42 atr_obj: ID '.' prop ADD exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 42 (atr_obj)


State 157

   41 atr_obj: ID '.' prop '=' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 41 (atr_obj)


State 158

   46 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 191
    val    go to state 37


State 159

   55 indices: '[' exp ']' indices .

    $default  reduce using rule 55 (indices)


State 160

   45 atr_array: ID indices . '=' rec
   54 matrix: ID indices .

    '='  shift, and go to state 84

    $default  reduce using rule 54 (matrix)


State 161

   53 matexp: matexp '+' . matexp

    ID  shift, and go to state 192

    matexp  go to state 193
    matrix  go to state 122


State 162

   52 matexp: matexp '*' . matexp

    ID  shift, and go to state 192

    matexp  go to state 194
    matrix  go to state 122


State 163

   49 rec: exp '=' . rec

    NUM     shift, and go to state 1
    ID      shift, and go to state 118
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr_array  go to state 119
    rec        go to state 195
    matexp     go to state 121
    matrix     go to state 122
    array      go to state 31
    exp        go to state 123
    val        go to state 37


State 164

   62 corpo_obj: ID . ':' exp ',' corpo_obj
   63          | ID . ':' exp
   64          | ID . ':' objeto

    ':'  shift, and go to state 196


State 165

   61 objeto: '{' corpo_obj . '}'

    '}'  shift, and go to state 197


State 166

   59 decl: ID '=' funcao fim_decl .

    $default  reduce using rule 59 (decl)


State 167

   60 decl: ID '=' objeto fim_decl .

    $default  reduce using rule 60 (decl)


State 168

   57 decl: ID '=' exp fim_decl .

    $default  reduce using rule 57 (decl)


State 169

   81 condicional: IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao ')' empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 198
    exp          go to state 36
    val          go to state 37


State 170

   88 condicao: exp IGUAL exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 88 (condicao)


State 171

   89 condicao: exp DIF exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 89 (condicao)


State 172

   86 condicao: exp '>' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 86 (condicao)


State 173

   87 condicao: exp '<' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 87 (condicao)


State 174

   17 bloco: '{' . empilha_escopo cmds '}' desempilha_escopo
   83 corpo: '{' . cmds '}'

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 19
    '['       shift, and go to state 20

    NUM       [reduce using rule 31 (empilha_escopo)]
    ID        [reduce using rule 31 (empilha_escopo)]
    LET       [reduce using rule 31 (empilha_escopo)]
    VAR       [reduce using rule 31 (empilha_escopo)]
    CONST     [reduce using rule 31 (empilha_escopo)]
    OBJ       [reduce using rule 31 (empilha_escopo)]
    ARRAY     [reduce using rule 31 (empilha_escopo)]
    STRING    [reduce using rule 31 (empilha_escopo)]
    IF        [reduce using rule 31 (empilha_escopo)]
    WHILE     [reduce using rule 31 (empilha_escopo)]
    FOR       [reduce using rule 31 (empilha_escopo)]
    FUNCTION  [reduce using rule 31 (empilha_escopo)]
    RETURN    [reduce using rule 31 (empilha_escopo)]
    BLOCO     [reduce using rule 31 (empilha_escopo)]
    TRUE      [reduce using rule 31 (empilha_escopo)]
    FALSE     [reduce using rule 31 (empilha_escopo)]
    '-'       [reduce using rule 31 (empilha_escopo)]
    '('       [reduce using rule 31 (empilha_escopo)]
    '{'       [reduce using rule 31 (empilha_escopo)]
    '}'       reduce using rule 4 (cmds)
    '}'       [reduce using rule 31 (empilha_escopo)]
    '['       [reduce using rule 31 (empilha_escopo)]
    $default  reduce using rule 4 (cmds)

    cmds            go to state 199
    cmd_1           go to state 23
    cmd_2           go to state 24
    bloco           go to state 25
    funcao          go to state 26
    empilha_escopo  go to state 60
    atr             go to state 27
    atr_id          go to state 28
    atr_obj         go to state 29
    atr_array       go to state 30
    array           go to state 31
    loop            go to state 32
    while_loop      go to state 33
    for_loop        go to state 34
    condicional     go to state 35
    exp             go to state 36
    val             go to state 37


State 175

   84 corpo: cmd_1 . ';'

    ';'  shift, and go to state 200


State 176

   85 corpo: cmd_2 .

    $default  reduce using rule 85 (corpo)


State 177

   77 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 77 (while_loop)


State 178

   43 prop: ID .
   44     | ID . '[' exp ']'

    '['  shift, and go to state 113

    $default  reduce using rule 43 (prop)


State 179

   78 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array     go to state 31
    condicao  go to state 201
    exp       go to state 89
    val       go to state 37


State 180

   79 for_loop: FOR '(' atr ';' condicao . ';' atr ')' corpo
   80         | FOR '(' atr ';' condicao . ';' val ')' OBJ

    ';'  shift, and go to state 202


State 181

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 203
    exp          go to state 36
    val          go to state 37


State 182

   18 funcao: FUNCTION ID empilha_escopo_func '(' args . ')' corpo desempilha_escopo_func
   24 args: args . ',' arg

    ')'  shift, and go to state 204
    ','  shift, and go to state 185


State 183

   27 arg: ID '=' . exp

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    array  go to state 31
    exp    go to state 205
    val    go to state 37


State 184

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 206
    exp          go to state 36
    val          go to state 37


State 185

   24 args: args ',' . arg

    NUM     shift, and go to state 1
    ID      shift, and go to state 140
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    arg    go to state 207
    array  go to state 31
    exp    go to state 143
    val    go to state 37


State 186

   17 bloco: '{' empilha_escopo cmds '}' desempilha_escopo .

    $default  reduce using rule 17 (bloco)


State 187

   69 exps_array: ',' exp . $@2 exps_array
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 68 ($@2)

    $@2  go to state 208


State 188

  102 params: matrix ',' params .

    $default  reduce using rule 102 (params)


State 189

   99 params: exp ',' params .

    $default  reduce using rule 99 (params)


State 190

   44 prop: ID '[' exp ']' .

    $default  reduce using rule 44 (prop)


State 191

   46 atr_array: ID '[' atr ']' '=' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 46 (atr_array)


State 192

   54 matrix: ID . indices

    '['  shift, and go to state 148

    indices  go to state 149


State 193

   52 matexp: matexp . '*' matexp
   53       | matexp . '+' matexp
   53       | matexp '+' matexp .

    '*'  shift, and go to state 162

    $default  reduce using rule 53 (matexp)


State 194

   52 matexp: matexp . '*' matexp
   52       | matexp '*' matexp .
   53       | matexp . '+' matexp

    $default  reduce using rule 52 (matexp)


State 195

   49 rec: exp '=' rec .

    $default  reduce using rule 49 (rec)


State 196

   62 corpo_obj: ID ':' . exp ',' corpo_obj
   63          | ID ':' . exp
   64          | ID ':' . objeto

    NUM     shift, and go to state 1
    ID      shift, and go to state 56
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '{'     shift, and go to state 125
    '['     shift, and go to state 20

    objeto  go to state 209
    array   go to state 31
    exp     go to state 210
    val     go to state 37


State 197

   61 objeto: '{' corpo_obj '}' .

    $default  reduce using rule 61 (objeto)


State 198

   81 condicional: IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao ')' empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 211


State 199

   83 corpo: '{' cmds . '}'

    '}'  shift, and go to state 212


State 200

   84 corpo: cmd_1 ';' .

    $default  reduce using rule 84 (corpo)


State 201

   78 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 213


State 202

   79 for_loop: FOR '(' atr ';' condicao ';' . atr ')' corpo
   80         | FOR '(' atr ';' condicao ';' . val ')' OBJ

    NUM     shift, and go to state 1
    ID      shift, and go to state 214
    OBJ     shift, and go to state 6
    ARRAY   shift, and go to state 7
    STRING  shift, and go to state 8
    BLOCO   shift, and go to state 14
    TRUE    shift, and go to state 15
    FALSE   shift, and go to state 16
    '-'     shift, and go to state 17
    '('     shift, and go to state 18
    '['     shift, and go to state 20

    atr        go to state 215
    atr_id     go to state 28
    atr_obj    go to state 29
    atr_array  go to state 30
    array      go to state 31
    val        go to state 216


State 203

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 217
    desempilha_escopo       go to state 218


State 204

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' . corpo desempilha_escopo_func

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 219
    exp          go to state 36
    val          go to state 37


State 205

   27 arg: ID '=' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72

    $default  reduce using rule 27 (arg)


State 206

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 220
    desempilha_escopo       go to state 218


State 207

   24 args: args ',' arg .

    $default  reduce using rule 24 (args)


State 208

   69 exps_array: ',' exp $@2 . exps_array

    ','  shift, and go to state 146

    $default  reduce using rule 70 (exps_array)

    exps_array  go to state 221


State 209

   64 corpo_obj: ID ':' objeto .

    $default  reduce using rule 64 (corpo_obj)


State 210

   62 corpo_obj: ID ':' exp . ',' corpo_obj
   63          | ID ':' exp .
   91 exp: exp . '+' exp
   92    | exp . '-' exp
   93    | exp . '*' exp
   94    | exp . '/' exp
   95    | exp . '%' exp
   98    | exp . '(' params ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71
    '('  shift, and go to state 72
    ','  shift, and go to state 222

    $default  reduce using rule 63 (corpo_obj)


State 211

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo . ELSE empilha_escopo corpo desempilha_escopo
   82            | IF '(' condicao ')' empilha_escopo corpo desempilha_escopo .

    ELSE  shift, and go to state 223

    $default  reduce using rule 82 (condicional)


State 212

   83 corpo: '{' cmds '}' .

    $default  reduce using rule 83 (corpo)


State 213

   78 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 91

    atr        go to state 224
    atr_id     go to state 28
    atr_obj    go to state 29
    atr_array  go to state 30


State 214

   36 atr_id: ID . '=' exp
   37       | ID . '=' atr_recursiva
   38       | ID . ADD exp
   41 atr_obj: ID . '.' prop '=' exp
   42        | ID . '.' prop ADD exp
   45 atr_array: ID . indices '=' rec
   46          | ID . '[' atr ']' '=' exp
  105 val: ID .
  112    | ID . INC

    ADD  shift, and go to state 38
    INC  shift, and go to state 39
    '='  shift, and go to state 42
    '.'  shift, and go to state 136
    '['  shift, and go to state 44

    $default  reduce using rule 105 (val)

    indices  go to state 45


State 215

   79 for_loop: FOR '(' atr ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 225


State 216

   80 for_loop: FOR '(' atr ';' condicao ';' val . ')' OBJ

    ')'  shift, and go to state 226


State 217

   19 funcao: FUNCTION ID empilha_escopo_func '(' ')' corpo desempilha_escopo_func .

    $default  reduce using rule 19 (funcao)


State 218

   30 desempilha_escopo_func: desempilha_escopo .

    $default  reduce using rule 30 (desempilha_escopo_func)


State 219

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo . desempilha_escopo_func

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo_func  go to state 227
    desempilha_escopo       go to state 218


State 220

   20 funcao: FUNCTION empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 20 (funcao)


State 221

   69 exps_array: ',' exp $@2 exps_array .

    $default  reduce using rule 69 (exps_array)


State 222

   62 corpo_obj: ID ':' exp ',' . corpo_obj

    ID  shift, and go to state 164

    corpo_obj  go to state 228


State 223

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE . empilha_escopo corpo desempilha_escopo

    $default  reduce using rule 31 (empilha_escopo)

    empilha_escopo  go to state 229


State 224

   78 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 230


State 225

   79 for_loop: FOR '(' atr ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 231
    exp          go to state 36
    val          go to state 37


State 226

   80 for_loop: FOR '(' atr ';' condicao ';' val ')' . OBJ

    OBJ  shift, and go to state 232


State 227

   18 funcao: FUNCTION ID empilha_escopo_func '(' args ')' corpo desempilha_escopo_func .

    $default  reduce using rule 18 (funcao)


State 228

   62 corpo_obj: ID ':' exp ',' corpo_obj .

    $default  reduce using rule 62 (corpo_obj)


State 229

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo . corpo desempilha_escopo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 233
    exp          go to state 36
    val          go to state 37


State 230

   78 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    NUM       shift, and go to state 1
    ID        shift, and go to state 2
    LET       shift, and go to state 3
    VAR       shift, and go to state 4
    CONST     shift, and go to state 5
    OBJ       shift, and go to state 6
    ARRAY     shift, and go to state 7
    STRING    shift, and go to state 8
    IF        shift, and go to state 9
    WHILE     shift, and go to state 10
    FOR       shift, and go to state 11
    FUNCTION  shift, and go to state 12
    RETURN    shift, and go to state 13
    BLOCO     shift, and go to state 14
    TRUE      shift, and go to state 15
    FALSE     shift, and go to state 16
    '-'       shift, and go to state 17
    '('       shift, and go to state 18
    '{'       shift, and go to state 174
    '['       shift, and go to state 20

    cmd_1        go to state 175
    cmd_2        go to state 176
    bloco        go to state 25
    funcao       go to state 26
    atr          go to state 27
    atr_id       go to state 28
    atr_obj      go to state 29
    atr_array    go to state 30
    array        go to state 31
    loop         go to state 32
    while_loop   go to state 33
    for_loop     go to state 34
    condicional  go to state 35
    corpo        go to state 234
    exp          go to state 36
    val          go to state 37


State 231

   79 for_loop: FOR '(' atr ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 79 (for_loop)


State 232

   80 for_loop: FOR '(' atr ';' condicao ';' val ')' OBJ .

    $default  reduce using rule 80 (for_loop)


State 233

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo . desempilha_escopo

    $default  reduce using rule 32 (desempilha_escopo)

    desempilha_escopo  go to state 235


State 234

   78 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 78 (for_loop)


State 235

   81 condicional: IF '(' condicao ')' empilha_escopo corpo desempilha_escopo ELSE empilha_escopo corpo desempilha_escopo .

    $default  reduce using rule 81 (condicional)

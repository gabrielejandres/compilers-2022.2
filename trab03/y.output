Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd ';' cmds
    3     | %empty

    4 cmd: atr
    5    | condicional
    6    | LET decl

    7 atr: atr_id
    8    | atr_obj
    9    | atr_array

   10 atr_id: ID '=' exp
   11       | ID '=' atr_recursiva
   12       | ID ADD exp_id

   13 atr_recursiva: ID '=' exp
   14              | ID '=' atr_recursiva

   15 exp_id: val '+' exp_id
   16       | val

   17 atr_obj: ID '.' prop '=' exp
   18        | ID '.' prop ADD exp

   19 prop: ID
   20     | ID '[' exp ']'

   21 atr_array: ID '[' exp ']' '=' exp

   22 decl: ID '=' exp fim_decl
   23     | ID fim_decl

   24 fim_decl: ',' decl
   25         | %empty

   26 condicional: %empty
   27            | IF '(' condicao ')' corpo ELSE corpo
   28            | IF '(' condicao ')' corpo

   29 corpo: '{' cmds '}'
   30      | cmd ';'

   31 condicao: exp '>' exp
   32         | exp '<' exp
   33         | exp IGUAL exp
   34         | exp DIF exp
   35         | exp

   36 exp: exp '+' exp
   37    | exp '-' exp
   38    | exp '*' exp
   39    | exp '/' exp
   40    | ID '.' ID
   41    | ID '[' exp ']'
   42    | val

   43 val: ID
   44    | NUM
   45    | '-' NUM
   46    | '(' exp ')'
   47    | OBJ
   48    | ARRAY
   49    | STRING
   50    | ID INC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 27 28 46
    ')' (41) 27 28 46
    '*' (42) 38
    '+' (43) 15 36
    ',' (44) 24
    '-' (45) 37 45
    '.' (46) 17 18 40
    '/' (47) 39
    ';' (59) 2 30
    '<' (60) 32
    '=' (61) 10 11 13 14 17 21 22
    '>' (62) 31
    '[' (91) 20 21 41
    ']' (93) 20 21 41
    '{' (123) 29
    '}' (125) 29
    error (256)
    NUM (258) 44 45
    ID (259) 10 11 12 13 14 17 18 19 20 21 22 23 40 41 43 50
    LET (260) 6
    OBJ (261) 47
    ARRAY (262) 48
    STRING (263) 49
    ADD (264) 12 18
    IF (265) 27 28
    ELSE (266) 27
    IGUAL (267) 33
    DIF (268) 34
    INC (269) 50


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    s (32)
        on left: 1
        on right: 0
    cmds (33)
        on left: 2 3
        on right: 1 2 29
    cmd (34)
        on left: 4 5 6
        on right: 2 30
    atr (35)
        on left: 7 8 9
        on right: 4
    atr_id (36)
        on left: 10 11 12
        on right: 7
    atr_recursiva (37)
        on left: 13 14
        on right: 11 14
    exp_id (38)
        on left: 15 16
        on right: 12 15
    atr_obj (39)
        on left: 17 18
        on right: 8
    prop (40)
        on left: 19 20
        on right: 17 18
    atr_array (41)
        on left: 21
        on right: 9
    decl (42)
        on left: 22 23
        on right: 6 24
    fim_decl (43)
        on left: 24 25
        on right: 22 23
    condicional (44)
        on left: 26 27 28
        on right: 5
    corpo (45)
        on left: 29 30
        on right: 27 28
    condicao (46)
        on left: 31 32 33 34 35
        on right: 27 28
    exp (47)
        on left: 36 37 38 39 40 41 42
        on right: 10 13 17 18 20 21 22 31 32 33 34 35 36 37 38 39 41 46
    val (48)
        on left: 43 44 45 46 47 48 49 50
        on right: 15 16 42


State 0

    0 $accept: . s $end

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 26 (condicional)
    $default  reduce using rule 3 (cmds)

    s            go to state 4
    cmds         go to state 5
    cmd          go to state 6
    atr          go to state 7
    atr_id       go to state 8
    atr_obj      go to state 9
    atr_array    go to state 10
    condicional  go to state 11


State 1

   10 atr_id: ID . '=' exp
   11       | ID . '=' atr_recursiva
   12       | ID . ADD exp_id
   17 atr_obj: ID . '.' prop '=' exp
   18        | ID . '.' prop ADD exp
   21 atr_array: ID . '[' exp ']' '=' exp

    ADD  shift, and go to state 12
    '='  shift, and go to state 13
    '.'  shift, and go to state 14
    '['  shift, and go to state 15


State 2

    6 cmd: LET . decl

    ID  shift, and go to state 16

    decl  go to state 17


State 3

   27 condicional: IF . '(' condicao ')' corpo ELSE corpo
   28            | IF . '(' condicao ')' corpo

    '('  shift, and go to state 18


State 4

    0 $accept: s . $end

    $end  shift, and go to state 19


State 5

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 6

    2 cmds: cmd . ';' cmds

    ';'  shift, and go to state 20


State 7

    4 cmd: atr .

    $default  reduce using rule 4 (cmd)


State 8

    7 atr: atr_id .

    $default  reduce using rule 7 (atr)


State 9

    8 atr: atr_obj .

    $default  reduce using rule 8 (atr)


State 10

    9 atr: atr_array .

    $default  reduce using rule 9 (atr)


State 11

    5 cmd: condicional .

    $default  reduce using rule 5 (cmd)


State 12

   12 atr_id: ID ADD . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 28
    val     go to state 29


State 13

   10 atr_id: ID '=' . exp
   11       | ID '=' . atr_recursiva

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_recursiva  go to state 31
    exp            go to state 32
    val            go to state 33


State 14

   17 atr_obj: ID '.' . prop '=' exp
   18        | ID '.' . prop ADD exp

    ID  shift, and go to state 34

    prop  go to state 35


State 15

   21 atr_array: ID '[' . exp ']' '=' exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 37
    val  go to state 33


State 16

   22 decl: ID . '=' exp fim_decl
   23     | ID . fim_decl

    '='  shift, and go to state 38
    ','  shift, and go to state 39

    $default  reduce using rule 25 (fim_decl)

    fim_decl  go to state 40


State 17

    6 cmd: LET decl .

    $default  reduce using rule 6 (cmd)


State 18

   27 condicional: IF '(' . condicao ')' corpo ELSE corpo
   28            | IF '(' . condicao ')' corpo

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    condicao  go to state 41
    exp       go to state 42
    val       go to state 33


State 19

    0 $accept: s $end .

    $default  accept


State 20

    2 cmds: cmd ';' . cmds

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 26 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 43
    cmd          go to state 6
    atr          go to state 7
    atr_id       go to state 8
    atr_obj      go to state 9
    atr_array    go to state 10
    condicional  go to state 11


State 21

   44 val: NUM .

    $default  reduce using rule 44 (val)


State 22

   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 44

    $default  reduce using rule 43 (val)


State 23

   47 val: OBJ .

    $default  reduce using rule 47 (val)


State 24

   48 val: ARRAY .

    $default  reduce using rule 48 (val)


State 25

   49 val: STRING .

    $default  reduce using rule 49 (val)


State 26

   45 val: '-' . NUM

    NUM  shift, and go to state 45


State 27

   46 val: '(' . exp ')'

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 46
    val  go to state 33


State 28

   12 atr_id: ID ADD exp_id .

    $default  reduce using rule 12 (atr_id)


State 29

   15 exp_id: val . '+' exp_id
   16       | val .

    '+'  shift, and go to state 47

    $default  reduce using rule 16 (exp_id)


State 30

   13 atr_recursiva: ID . '=' exp
   14              | ID . '=' atr_recursiva
   40 exp: ID . '.' ID
   41    | ID . '[' exp ']'
   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 44
    '='  shift, and go to state 48
    '.'  shift, and go to state 49
    '['  shift, and go to state 50

    $default  reduce using rule 43 (val)


State 31

   11 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 11 (atr_id)


State 32

   10 atr_id: ID '=' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 10 (atr_id)


State 33

   42 exp: val .

    $default  reduce using rule 42 (exp)


State 34

   19 prop: ID .
   20     | ID . '[' exp ']'

    '['  shift, and go to state 55

    $default  reduce using rule 19 (prop)


State 35

   17 atr_obj: ID '.' prop . '=' exp
   18        | ID '.' prop . ADD exp

    ADD  shift, and go to state 56
    '='  shift, and go to state 57


State 36

   40 exp: ID . '.' ID
   41    | ID . '[' exp ']'
   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 44
    '.'  shift, and go to state 49
    '['  shift, and go to state 50

    $default  reduce using rule 43 (val)


State 37

   21 atr_array: ID '[' exp . ']' '=' exp
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ']'  shift, and go to state 58


State 38

   22 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 59
    val  go to state 33


State 39

   24 fim_decl: ',' . decl

    ID  shift, and go to state 16

    decl  go to state 60


State 40

   23 decl: ID fim_decl .

    $default  reduce using rule 23 (decl)


State 41

   27 condicional: IF '(' condicao . ')' corpo ELSE corpo
   28            | IF '(' condicao . ')' corpo

    ')'  shift, and go to state 61


State 42

   31 condicao: exp . '>' exp
   32         | exp . '<' exp
   33         | exp . IGUAL exp
   34         | exp . DIF exp
   35         | exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    IGUAL  shift, and go to state 62
    DIF    shift, and go to state 63
    '+'    shift, and go to state 51
    '-'    shift, and go to state 52
    '*'    shift, and go to state 53
    '/'    shift, and go to state 54
    '>'    shift, and go to state 64
    '<'    shift, and go to state 65

    $default  reduce using rule 35 (condicao)


State 43

    2 cmds: cmd ';' cmds .

    $default  reduce using rule 2 (cmds)


State 44

   50 val: ID INC .

    $default  reduce using rule 50 (val)


State 45

   45 val: '-' NUM .

    $default  reduce using rule 45 (val)


State 46

   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp
   46 val: '(' exp . ')'

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 66


State 47

   15 exp_id: val '+' . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 67
    val     go to state 29


State 48

   13 atr_recursiva: ID '=' . exp
   14              | ID '=' . atr_recursiva

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_recursiva  go to state 68
    exp            go to state 69
    val            go to state 33


State 49

   40 exp: ID '.' . ID

    ID  shift, and go to state 70


State 50

   41 exp: ID '[' . exp ']'

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 71
    val  go to state 33


State 51

   36 exp: exp '+' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 72
    val  go to state 33


State 52

   37 exp: exp '-' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 73
    val  go to state 33


State 53

   38 exp: exp '*' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 74
    val  go to state 33


State 54

   39 exp: exp '/' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 75
    val  go to state 33


State 55

   20 prop: ID '[' . exp ']'

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 76
    val  go to state 33


State 56

   18 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 77
    val  go to state 33


State 57

   17 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 78
    val  go to state 33


State 58

   21 atr_array: ID '[' exp ']' . '=' exp

    '='  shift, and go to state 79


State 59

   22 decl: ID '=' exp . fim_decl
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ','  shift, and go to state 39

    $default  reduce using rule 25 (fim_decl)

    fim_decl  go to state 80


State 60

   24 fim_decl: ',' decl .

    $default  reduce using rule 24 (fim_decl)


State 61

   27 condicional: IF '(' condicao ')' . corpo ELSE corpo
   28            | IF '(' condicao ')' . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 81

    $default  reduce using rule 26 (condicional)

    cmd          go to state 82
    atr          go to state 7
    atr_id       go to state 8
    atr_obj      go to state 9
    atr_array    go to state 10
    condicional  go to state 11
    corpo        go to state 83


State 62

   33 condicao: exp IGUAL . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 84
    val  go to state 33


State 63

   34 condicao: exp DIF . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 85
    val  go to state 33


State 64

   31 condicao: exp '>' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 86
    val  go to state 33


State 65

   32 condicao: exp '<' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 87
    val  go to state 33


State 66

   46 val: '(' exp ')' .

    $default  reduce using rule 46 (val)


State 67

   15 exp_id: val '+' exp_id .

    $default  reduce using rule 15 (exp_id)


State 68

   14 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 14 (atr_recursiva)


State 69

   13 atr_recursiva: ID '=' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 13 (atr_recursiva)


State 70

   40 exp: ID '.' ID .

    $default  reduce using rule 40 (exp)


State 71

   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp
   41    | ID '[' exp . ']'

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ']'  shift, and go to state 88


State 72

   36 exp: exp . '+' exp
   36    | exp '+' exp .
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 36 (exp)


State 73

   36 exp: exp . '+' exp
   37    | exp . '-' exp
   37    | exp '-' exp .
   38    | exp . '*' exp
   39    | exp . '/' exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 37 (exp)


State 74

   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   38    | exp '*' exp .
   39    | exp . '/' exp

    $default  reduce using rule 38 (exp)


State 75

   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp
   39    | exp '/' exp .

    $default  reduce using rule 39 (exp)


State 76

   20 prop: ID '[' exp . ']'
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ']'  shift, and go to state 89


State 77

   18 atr_obj: ID '.' prop ADD exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 18 (atr_obj)


State 78

   17 atr_obj: ID '.' prop '=' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 17 (atr_obj)


State 79

   21 atr_array: ID '[' exp ']' '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 90
    val  go to state 33


State 80

   22 decl: ID '=' exp fim_decl .

    $default  reduce using rule 22 (decl)


State 81

   29 corpo: '{' . cmds '}'

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 26 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 91
    cmd          go to state 6
    atr          go to state 7
    atr_id       go to state 8
    atr_obj      go to state 9
    atr_array    go to state 10
    condicional  go to state 11


State 82

   30 corpo: cmd . ';'

    ';'  shift, and go to state 92


State 83

   27 condicional: IF '(' condicao ')' corpo . ELSE corpo
   28            | IF '(' condicao ')' corpo .

    ELSE  shift, and go to state 93

    $default  reduce using rule 28 (condicional)


State 84

   33 condicao: exp IGUAL exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 33 (condicao)


State 85

   34 condicao: exp DIF exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 34 (condicao)


State 86

   31 condicao: exp '>' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 31 (condicao)


State 87

   32 condicao: exp '<' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 32 (condicao)


State 88

   41 exp: ID '[' exp ']' .

    $default  reduce using rule 41 (exp)


State 89

   20 prop: ID '[' exp ']' .

    $default  reduce using rule 20 (prop)


State 90

   21 atr_array: ID '[' exp ']' '=' exp .
   36 exp: exp . '+' exp
   37    | exp . '-' exp
   38    | exp . '*' exp
   39    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 21 (atr_array)


State 91

   29 corpo: '{' cmds . '}'

    '}'  shift, and go to state 94


State 92

   30 corpo: cmd ';' .

    $default  reduce using rule 30 (corpo)


State 93

   27 condicional: IF '(' condicao ')' corpo ELSE . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 81

    $default  reduce using rule 26 (condicional)

    cmd          go to state 82
    atr          go to state 7
    atr_id       go to state 8
    atr_obj      go to state 9
    atr_array    go to state 10
    condicional  go to state 11
    corpo        go to state 95


State 94

   29 corpo: '{' cmds '}' .

    $default  reduce using rule 29 (corpo)


State 95

   27 condicional: IF '(' condicao ')' corpo ELSE corpo .

    $default  reduce using rule 27 (condicional)

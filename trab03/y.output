Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd_1 ';' cmds
    3     | cmd_2 cmds
    4     | %empty

    5 cmd_1: atr
    6      | LET decl
    7      | loop

    8 cmd_2: condicional

    9 atr: atr_id
   10    | atr_obj
   11    | atr_array

   12 atr_id: ID '=' exp
   13       | ID '=' atr_recursiva
   14       | ID ADD exp

   15 atr_recursiva: ID '=' exp
   16              | ID '=' atr_recursiva

   17 atr_obj: ID '.' prop '=' exp
   18        | ID '.' prop ADD exp

   19 prop: ID
   20     | ID '[' exp ']'

   21 atr_array: ID '[' exp ']' '=' exp
   22          | ID '[' atr ']' '=' exp

   23 decl: ID '=' exp fim_decl
   24     | ID fim_decl

   25 fim_decl: ',' decl
   26         | %empty

   27 loop: while_loop
   28     | for_loop

   29 while_loop: WHILE '(' condicao ')' corpo

   30 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo
   31         | FOR '(' decl ';' condicao ';' atr ')' corpo

   32 condicional: IF '(' condicao ')' corpo ELSE corpo
   33            | IF '(' condicao ')' corpo

   34 corpo: '{' cmds '}'
   35      | cmd_1 ';'
   36      | cmd_2

   37 condicao: exp '>' exp
   38         | exp '<' exp
   39         | exp IGUAL exp
   40         | exp DIF exp
   41         | exp

   42 exp: exp '+' exp
   43    | exp '-' exp
   44    | exp '*' exp
   45    | exp '/' exp
   46    | ID '.' ID
   47    | ID '[' exp ']'
   48    | val

   49 val: ID
   50    | NUM
   51    | '-' NUM
   52    | '(' exp ')'
   53    | OBJ
   54    | ARRAY
   55    | STRING
   56    | ID INC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 29 30 31 32 33 52
    ')' (41) 29 30 31 32 33 52
    '*' (42) 44
    '+' (43) 42
    ',' (44) 25
    '-' (45) 43 51
    '.' (46) 17 18 46
    '/' (47) 45
    ';' (59) 2 30 31 35
    '<' (60) 38
    '=' (61) 12 13 15 16 17 21 22 23
    '>' (62) 37
    'T' (84)
    '[' (91) 20 21 22 47
    ']' (93) 20 21 22 47
    '{' (123) 34
    '}' (125) 34
    error (256)
    NUM (258) 50 51
    ID (259) 12 13 14 15 16 17 18 19 20 21 22 23 24 46 47 49 56
    LET (260) 6 30
    OBJ (261) 53
    ARRAY (262) 54
    STRING (263) 55
    ADD (264) 14 18
    IF (265) 32 33
    ELSE (266) 32
    IGUAL (267) 39
    DIF (268) 40
    INC (269) 56
    WHILE (270) 29
    FOR (271) 30 31


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    s (35)
        on left: 1
        on right: 0
    cmds (36)
        on left: 2 3 4
        on right: 1 2 3 34
    cmd_1 (37)
        on left: 5 6 7
        on right: 2 35
    cmd_2 (38)
        on left: 8
        on right: 3 36
    atr (39)
        on left: 9 10 11
        on right: 5 22 30 31
    atr_id (40)
        on left: 12 13 14
        on right: 9
    atr_recursiva (41)
        on left: 15 16
        on right: 13 16
    atr_obj (42)
        on left: 17 18
        on right: 10
    prop (43)
        on left: 19 20
        on right: 17 18
    atr_array (44)
        on left: 21 22
        on right: 11
    decl (45)
        on left: 23 24
        on right: 6 25 30 31
    fim_decl (46)
        on left: 25 26
        on right: 23 24
    loop (47)
        on left: 27 28
        on right: 7
    while_loop (48)
        on left: 29
        on right: 27
    for_loop (49)
        on left: 30 31
        on right: 28
    condicional (50)
        on left: 32 33
        on right: 8
    corpo (51)
        on left: 34 35 36
        on right: 29 30 31 32 33
    condicao (52)
        on left: 37 38 39 40 41
        on right: 29 30 31 32 33
    exp (53)
        on left: 42 43 44 45 46 47 48
        on right: 12 14 15 17 18 20 21 22 23 37 38 39 40 41 42 43 44 45 47 52
    val (54)
        on left: 49 50 51 52 53 54 55 56
        on right: 48


State 0

    0 $accept: . s $end

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5

    $default  reduce using rule 4 (cmds)

    s            go to state 6
    cmds         go to state 7
    cmd_1        go to state 8
    cmd_2        go to state 9
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17


State 1

   12 atr_id: ID . '=' exp
   13       | ID . '=' atr_recursiva
   14       | ID . ADD exp
   17 atr_obj: ID . '.' prop '=' exp
   18        | ID . '.' prop ADD exp
   21 atr_array: ID . '[' exp ']' '=' exp
   22          | ID . '[' atr ']' '=' exp

    ADD  shift, and go to state 18
    '='  shift, and go to state 19
    '.'  shift, and go to state 20
    '['  shift, and go to state 21


State 2

    6 cmd_1: LET . decl

    ID  shift, and go to state 22

    decl  go to state 23


State 3

   32 condicional: IF . '(' condicao ')' corpo ELSE corpo
   33            | IF . '(' condicao ')' corpo

    '('  shift, and go to state 24


State 4

   29 while_loop: WHILE . '(' condicao ')' corpo

    '('  shift, and go to state 25


State 5

   30 for_loop: FOR . '(' LET decl ';' condicao ';' atr ')' corpo
   31         | FOR . '(' decl ';' condicao ';' atr ')' corpo

    '('  shift, and go to state 26


State 6

    0 $accept: s . $end

    $end  shift, and go to state 27


State 7

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 8

    2 cmds: cmd_1 . ';' cmds

    ';'  shift, and go to state 28


State 9

    3 cmds: cmd_2 . cmds

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5

    $default  reduce using rule 4 (cmds)

    cmds         go to state 29
    cmd_1        go to state 8
    cmd_2        go to state 9
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17


State 10

    5 cmd_1: atr .

    $default  reduce using rule 5 (cmd_1)


State 11

    9 atr: atr_id .

    $default  reduce using rule 9 (atr)


State 12

   10 atr: atr_obj .

    $default  reduce using rule 10 (atr)


State 13

   11 atr: atr_array .

    $default  reduce using rule 11 (atr)


State 14

    7 cmd_1: loop .

    $default  reduce using rule 7 (cmd_1)


State 15

   27 loop: while_loop .

    $default  reduce using rule 27 (loop)


State 16

   28 loop: for_loop .

    $default  reduce using rule 28 (loop)


State 17

    8 cmd_2: condicional .

    $default  reduce using rule 8 (cmd_2)


State 18

   14 atr_id: ID ADD . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 37
    val  go to state 38


State 19

   12 atr_id: ID '=' . exp
   13       | ID '=' . atr_recursiva

    NUM     shift, and go to state 30
    ID      shift, and go to state 39
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    atr_recursiva  go to state 40
    exp            go to state 41
    val            go to state 38


State 20

   17 atr_obj: ID '.' . prop '=' exp
   18        | ID '.' . prop ADD exp

    ID  shift, and go to state 42

    prop  go to state 43


State 21

   21 atr_array: ID '[' . exp ']' '=' exp
   22          | ID '[' . atr ']' '=' exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 44
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    atr        go to state 45
    atr_id     go to state 11
    atr_obj    go to state 12
    atr_array  go to state 13
    exp        go to state 46
    val        go to state 38


State 22

   23 decl: ID . '=' exp fim_decl
   24     | ID . fim_decl

    '='  shift, and go to state 47
    ','  shift, and go to state 48

    $default  reduce using rule 26 (fim_decl)

    fim_decl  go to state 49


State 23

    6 cmd_1: LET decl .

    $default  reduce using rule 6 (cmd_1)


State 24

   32 condicional: IF '(' . condicao ')' corpo ELSE corpo
   33            | IF '(' . condicao ')' corpo

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    condicao  go to state 50
    exp       go to state 51
    val       go to state 38


State 25

   29 while_loop: WHILE '(' . condicao ')' corpo

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    condicao  go to state 52
    exp       go to state 51
    val       go to state 38


State 26

   30 for_loop: FOR '(' . LET decl ';' condicao ';' atr ')' corpo
   31         | FOR '(' . decl ';' condicao ';' atr ')' corpo

    ID   shift, and go to state 22
    LET  shift, and go to state 53

    decl  go to state 54


State 27

    0 $accept: s $end .

    $default  accept


State 28

    2 cmds: cmd_1 ';' . cmds

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5

    $default  reduce using rule 4 (cmds)

    cmds         go to state 55
    cmd_1        go to state 8
    cmd_2        go to state 9
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17


State 29

    3 cmds: cmd_2 cmds .

    $default  reduce using rule 3 (cmds)


State 30

   50 val: NUM .

    $default  reduce using rule 50 (val)


State 31

   46 exp: ID . '.' ID
   47    | ID . '[' exp ']'
   49 val: ID .
   56    | ID . INC

    INC  shift, and go to state 56
    '.'  shift, and go to state 57
    '['  shift, and go to state 58

    $default  reduce using rule 49 (val)


State 32

   53 val: OBJ .

    $default  reduce using rule 53 (val)


State 33

   54 val: ARRAY .

    $default  reduce using rule 54 (val)


State 34

   55 val: STRING .

    $default  reduce using rule 55 (val)


State 35

   51 val: '-' . NUM

    NUM  shift, and go to state 59


State 36

   52 val: '(' . exp ')'

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 60
    val  go to state 38


State 37

   14 atr_id: ID ADD exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 14 (atr_id)


State 38

   48 exp: val .

    $default  reduce using rule 48 (exp)


State 39

   15 atr_recursiva: ID . '=' exp
   16              | ID . '=' atr_recursiva
   46 exp: ID . '.' ID
   47    | ID . '[' exp ']'
   49 val: ID .
   56    | ID . INC

    INC  shift, and go to state 56
    '='  shift, and go to state 65
    '.'  shift, and go to state 57
    '['  shift, and go to state 58

    $default  reduce using rule 49 (val)


State 40

   13 atr_id: ID '=' atr_recursiva .

    $default  reduce using rule 13 (atr_id)


State 41

   12 atr_id: ID '=' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 12 (atr_id)


State 42

   19 prop: ID .
   20     | ID . '[' exp ']'

    '['  shift, and go to state 66

    $default  reduce using rule 19 (prop)


State 43

   17 atr_obj: ID '.' prop . '=' exp
   18        | ID '.' prop . ADD exp

    ADD  shift, and go to state 67
    '='  shift, and go to state 68


State 44

   12 atr_id: ID . '=' exp
   13       | ID . '=' atr_recursiva
   14       | ID . ADD exp
   17 atr_obj: ID . '.' prop '=' exp
   18        | ID . '.' prop ADD exp
   21 atr_array: ID . '[' exp ']' '=' exp
   22          | ID . '[' atr ']' '=' exp
   46 exp: ID . '.' ID
   47    | ID . '[' exp ']'
   49 val: ID .
   56    | ID . INC

    ADD  shift, and go to state 18
    INC  shift, and go to state 56
    '='  shift, and go to state 19
    '.'  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 49 (val)


State 45

   22 atr_array: ID '[' atr . ']' '=' exp

    ']'  shift, and go to state 71


State 46

   21 atr_array: ID '[' exp . ']' '=' exp
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ']'  shift, and go to state 72


State 47

   23 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 73
    val  go to state 38


State 48

   25 fim_decl: ',' . decl

    ID  shift, and go to state 22

    decl  go to state 74


State 49

   24 decl: ID fim_decl .

    $default  reduce using rule 24 (decl)


State 50

   32 condicional: IF '(' condicao . ')' corpo ELSE corpo
   33            | IF '(' condicao . ')' corpo

    ')'  shift, and go to state 75


State 51

   37 condicao: exp . '>' exp
   38         | exp . '<' exp
   39         | exp . IGUAL exp
   40         | exp . DIF exp
   41         | exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    IGUAL  shift, and go to state 76
    DIF    shift, and go to state 77
    '+'    shift, and go to state 61
    '-'    shift, and go to state 62
    '*'    shift, and go to state 63
    '/'    shift, and go to state 64
    '>'    shift, and go to state 78
    '<'    shift, and go to state 79

    $default  reduce using rule 41 (condicao)


State 52

   29 while_loop: WHILE '(' condicao . ')' corpo

    ')'  shift, and go to state 80


State 53

   30 for_loop: FOR '(' LET . decl ';' condicao ';' atr ')' corpo

    ID  shift, and go to state 22

    decl  go to state 81


State 54

   31 for_loop: FOR '(' decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 82


State 55

    2 cmds: cmd_1 ';' cmds .

    $default  reduce using rule 2 (cmds)


State 56

   56 val: ID INC .

    $default  reduce using rule 56 (val)


State 57

   46 exp: ID '.' . ID

    ID  shift, and go to state 83


State 58

   47 exp: ID '[' . exp ']'

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 84
    val  go to state 38


State 59

   51 val: '-' NUM .

    $default  reduce using rule 51 (val)


State 60

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   52 val: '(' exp . ')'

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ')'  shift, and go to state 85


State 61

   42 exp: exp '+' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 86
    val  go to state 38


State 62

   43 exp: exp '-' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 87
    val  go to state 38


State 63

   44 exp: exp '*' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 88
    val  go to state 38


State 64

   45 exp: exp '/' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 89
    val  go to state 38


State 65

   15 atr_recursiva: ID '=' . exp
   16              | ID '=' . atr_recursiva

    NUM     shift, and go to state 30
    ID      shift, and go to state 39
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    atr_recursiva  go to state 90
    exp            go to state 91
    val            go to state 38


State 66

   20 prop: ID '[' . exp ']'

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 92
    val  go to state 38


State 67

   18 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 93
    val  go to state 38


State 68

   17 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 94
    val  go to state 38


State 69

   17 atr_obj: ID '.' . prop '=' exp
   18        | ID '.' . prop ADD exp
   46 exp: ID '.' . ID

    ID  shift, and go to state 95

    prop  go to state 43


State 70

   21 atr_array: ID '[' . exp ']' '=' exp
   22          | ID '[' . atr ']' '=' exp
   47 exp: ID '[' . exp ']'

    NUM     shift, and go to state 30
    ID      shift, and go to state 44
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    atr        go to state 45
    atr_id     go to state 11
    atr_obj    go to state 12
    atr_array  go to state 13
    exp        go to state 96
    val        go to state 38


State 71

   22 atr_array: ID '[' atr ']' . '=' exp

    '='  shift, and go to state 97


State 72

   21 atr_array: ID '[' exp ']' . '=' exp

    '='  shift, and go to state 98


State 73

   23 decl: ID '=' exp . fim_decl
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ','  shift, and go to state 48

    $default  reduce using rule 26 (fim_decl)

    fim_decl  go to state 99


State 74

   25 fim_decl: ',' decl .

    $default  reduce using rule 25 (fim_decl)


State 75

   32 condicional: IF '(' condicao ')' . corpo ELSE corpo
   33            | IF '(' condicao ')' . corpo

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5
    '{'    shift, and go to state 100

    cmd_1        go to state 101
    cmd_2        go to state 102
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17
    corpo        go to state 103


State 76

   39 condicao: exp IGUAL . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 104
    val  go to state 38


State 77

   40 condicao: exp DIF . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 105
    val  go to state 38


State 78

   37 condicao: exp '>' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 106
    val  go to state 38


State 79

   38 condicao: exp '<' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 107
    val  go to state 38


State 80

   29 while_loop: WHILE '(' condicao ')' . corpo

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5
    '{'    shift, and go to state 100

    cmd_1        go to state 101
    cmd_2        go to state 102
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17
    corpo        go to state 108


State 81

   30 for_loop: FOR '(' LET decl . ';' condicao ';' atr ')' corpo

    ';'  shift, and go to state 109


State 82

   31 for_loop: FOR '(' decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    condicao  go to state 110
    exp       go to state 51
    val       go to state 38


State 83

   46 exp: ID '.' ID .

    $default  reduce using rule 46 (exp)


State 84

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   47    | ID '[' exp . ']'

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ']'  shift, and go to state 111


State 85

   52 val: '(' exp ')' .

    $default  reduce using rule 52 (val)


State 86

   42 exp: exp . '+' exp
   42    | exp '+' exp .
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 42 (exp)


State 87

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   43    | exp '-' exp .
   44    | exp . '*' exp
   45    | exp . '/' exp

    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 43 (exp)


State 88

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   44    | exp '*' exp .
   45    | exp . '/' exp

    $default  reduce using rule 44 (exp)


State 89

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   45    | exp '/' exp .

    $default  reduce using rule 45 (exp)


State 90

   16 atr_recursiva: ID '=' atr_recursiva .

    $default  reduce using rule 16 (atr_recursiva)


State 91

   15 atr_recursiva: ID '=' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 15 (atr_recursiva)


State 92

   20 prop: ID '[' exp . ']'
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ']'  shift, and go to state 112


State 93

   18 atr_obj: ID '.' prop ADD exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 18 (atr_obj)


State 94

   17 atr_obj: ID '.' prop '=' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 17 (atr_obj)


State 95

   19 prop: ID .
   20     | ID . '[' exp ']'
   46 exp: ID '.' ID .

    '['  shift, and go to state 66

    ADD       reduce using rule 19 (prop)
    '='       reduce using rule 19 (prop)
    $default  reduce using rule 46 (exp)


State 96

   21 atr_array: ID '[' exp . ']' '=' exp
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   47    | ID '[' exp . ']'

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ']'  shift, and go to state 113


State 97

   22 atr_array: ID '[' atr ']' '=' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 114
    val  go to state 38


State 98

   21 atr_array: ID '[' exp ']' '=' . exp

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    exp  go to state 115
    val  go to state 38


State 99

   23 decl: ID '=' exp fim_decl .

    $default  reduce using rule 23 (decl)


State 100

   34 corpo: '{' . cmds '}'

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5

    $default  reduce using rule 4 (cmds)

    cmds         go to state 116
    cmd_1        go to state 8
    cmd_2        go to state 9
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17


State 101

   35 corpo: cmd_1 . ';'

    ';'  shift, and go to state 117


State 102

   36 corpo: cmd_2 .

    $default  reduce using rule 36 (corpo)


State 103

   32 condicional: IF '(' condicao ')' corpo . ELSE corpo
   33            | IF '(' condicao ')' corpo .

    ELSE  shift, and go to state 118

    $default  reduce using rule 33 (condicional)


State 104

   39 condicao: exp IGUAL exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 39 (condicao)


State 105

   40 condicao: exp DIF exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 40 (condicao)


State 106

   37 condicao: exp '>' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 37 (condicao)


State 107

   38 condicao: exp '<' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 38 (condicao)


State 108

   29 while_loop: WHILE '(' condicao ')' corpo .

    $default  reduce using rule 29 (while_loop)


State 109

   30 for_loop: FOR '(' LET decl ';' . condicao ';' atr ')' corpo

    NUM     shift, and go to state 30
    ID      shift, and go to state 31
    OBJ     shift, and go to state 32
    ARRAY   shift, and go to state 33
    STRING  shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    condicao  go to state 119
    exp       go to state 51
    val       go to state 38


State 110

   31 for_loop: FOR '(' decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 120


State 111

   47 exp: ID '[' exp ']' .

    $default  reduce using rule 47 (exp)


State 112

   20 prop: ID '[' exp ']' .

    $default  reduce using rule 20 (prop)


State 113

   21 atr_array: ID '[' exp ']' . '=' exp
   47 exp: ID '[' exp ']' .

    '='  shift, and go to state 98

    $default  reduce using rule 47 (exp)


State 114

   22 atr_array: ID '[' atr ']' '=' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 22 (atr_array)


State 115

   21 atr_array: ID '[' exp ']' '=' exp .
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64

    $default  reduce using rule 21 (atr_array)


State 116

   34 corpo: '{' cmds . '}'

    '}'  shift, and go to state 121


State 117

   35 corpo: cmd_1 ';' .

    $default  reduce using rule 35 (corpo)


State 118

   32 condicional: IF '(' condicao ')' corpo ELSE . corpo

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5
    '{'    shift, and go to state 100

    cmd_1        go to state 101
    cmd_2        go to state 102
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17
    corpo        go to state 122


State 119

   30 for_loop: FOR '(' LET decl ';' condicao . ';' atr ')' corpo

    ';'  shift, and go to state 123


State 120

   31 for_loop: FOR '(' decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 1

    atr        go to state 124
    atr_id     go to state 11
    atr_obj    go to state 12
    atr_array  go to state 13


State 121

   34 corpo: '{' cmds '}' .

    $default  reduce using rule 34 (corpo)


State 122

   32 condicional: IF '(' condicao ')' corpo ELSE corpo .

    $default  reduce using rule 32 (condicional)


State 123

   30 for_loop: FOR '(' LET decl ';' condicao ';' . atr ')' corpo

    ID  shift, and go to state 1

    atr        go to state 125
    atr_id     go to state 11
    atr_obj    go to state 12
    atr_array  go to state 13


State 124

   31 for_loop: FOR '(' decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 126


State 125

   30 for_loop: FOR '(' LET decl ';' condicao ';' atr . ')' corpo

    ')'  shift, and go to state 127


State 126

   31 for_loop: FOR '(' decl ';' condicao ';' atr ')' . corpo

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5
    '{'    shift, and go to state 100

    cmd_1        go to state 101
    cmd_2        go to state 102
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17
    corpo        go to state 128


State 127

   30 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' . corpo

    ID     shift, and go to state 1
    LET    shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    FOR    shift, and go to state 5
    '{'    shift, and go to state 100

    cmd_1        go to state 101
    cmd_2        go to state 102
    atr          go to state 10
    atr_id       go to state 11
    atr_obj      go to state 12
    atr_array    go to state 13
    loop         go to state 14
    while_loop   go to state 15
    for_loop     go to state 16
    condicional  go to state 17
    corpo        go to state 129


State 128

   31 for_loop: FOR '(' decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 31 (for_loop)


State 129

   30 for_loop: FOR '(' LET decl ';' condicao ';' atr ')' corpo .

    $default  reduce using rule 30 (for_loop)

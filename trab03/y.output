Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd ';' cmds
    3     | %empty

    4 cmd: atr
    5    | add
    6    | condicional
    7    | LET decl

    8 atr: ID '=' exp
    9    | ID '=' atr_id
   10    | atr_obj
   11    | atr_array

   12 atr_obj: ID '.' prop_obj '=' exp
   13        | ID '.' prop_obj ADD exp

   14 atr_array: ID '[' prop ']' '=' exp

   15 prop_obj: ID
   16         | ID '[' prop ']'

   17 prop: %empty
   18     | exp
   19     | ID '[' prop ']'

   20 atr_id: ID '=' exp
   21       | ID '=' atr_id

   22 add: ID ADD exp_id

   23 exp_id: val '+' exp_id
   24       | val

   25 decl: ID '=' exp fim_decl
   26     | ID fim_decl

   27 fim_decl: ',' decl
   28         | %empty

   29 condicional: %empty
   30            | IF '(' condicao ')' corpo ELSE corpo
   31            | IF '(' condicao ')' corpo

   32 corpo: '{' cmds '}'
   33      | cmd ';'

   34 condicao: exp '>' exp
   35         | exp '<' exp
   36         | exp IGUAL exp
   37         | exp DIF exp
   38         | exp

   39 exp: exp '+' exp
   40    | exp '-' exp
   41    | exp '*' exp
   42    | exp '/' exp
   43    | ID '.' ID
   44    | val

   45 val: ID
   46    | NUM
   47    | '-' NUM
   48    | '(' exp ')'
   49    | OBJ
   50    | ARRAY
   51    | STRING
   52    | ID INC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 31 48
    ')' (41) 30 31 48
    '*' (42) 41
    '+' (43) 23 39
    ',' (44) 27
    '-' (45) 40 47
    '.' (46) 12 13 43
    '/' (47) 42
    ';' (59) 2 33
    '<' (60) 35
    '=' (61) 8 9 12 14 20 21 25
    '>' (62) 34
    '[' (91) 14 16 19
    ']' (93) 14 16 19
    '{' (123) 32
    '}' (125) 32
    error (256)
    NUM (258) 46 47
    ID (259) 8 9 12 13 14 15 16 19 20 21 22 25 26 43 45 52
    LET (260) 7
    OBJ (261) 49
    ARRAY (262) 50
    STRING (263) 51
    ADD (264) 13 22
    IF (265) 30 31
    ELSE (266) 30
    IGUAL (267) 36
    DIF (268) 37
    INC (269) 52


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    s (32)
        on left: 1
        on right: 0
    cmds (33)
        on left: 2 3
        on right: 1 2 32
    cmd (34)
        on left: 4 5 6 7
        on right: 2 33
    atr (35)
        on left: 8 9 10 11
        on right: 4
    atr_obj (36)
        on left: 12 13
        on right: 10
    atr_array (37)
        on left: 14
        on right: 11
    prop_obj (38)
        on left: 15 16
        on right: 12 13
    prop (39)
        on left: 17 18 19
        on right: 14 16 19
    atr_id (40)
        on left: 20 21
        on right: 9 21
    add (41)
        on left: 22
        on right: 5
    exp_id (42)
        on left: 23 24
        on right: 22 23
    decl (43)
        on left: 25 26
        on right: 7 27
    fim_decl (44)
        on left: 27 28
        on right: 25 26
    condicional (45)
        on left: 29 30 31
        on right: 6
    corpo (46)
        on left: 32 33
        on right: 30 31
    condicao (47)
        on left: 34 35 36 37 38
        on right: 30 31
    exp (48)
        on left: 39 40 41 42 43 44
        on right: 8 12 13 14 18 20 25 34 35 36 37 38 39 40 41 42 48
    val (49)
        on left: 45 46 47 48 49 50 51 52
        on right: 23 24 44


State 0

    0 $accept: . s $end

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 29 (condicional)
    $default  reduce using rule 3 (cmds)

    s            go to state 4
    cmds         go to state 5
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 1

    8 atr: ID . '=' exp
    9    | ID . '=' atr_id
   12 atr_obj: ID . '.' prop_obj '=' exp
   13        | ID . '.' prop_obj ADD exp
   14 atr_array: ID . '[' prop ']' '=' exp
   22 add: ID . ADD exp_id

    ADD  shift, and go to state 12
    '='  shift, and go to state 13
    '.'  shift, and go to state 14
    '['  shift, and go to state 15


State 2

    7 cmd: LET . decl

    ID  shift, and go to state 16

    decl  go to state 17


State 3

   30 condicional: IF . '(' condicao ')' corpo ELSE corpo
   31            | IF . '(' condicao ')' corpo

    '('  shift, and go to state 18


State 4

    0 $accept: s . $end

    $end  shift, and go to state 19


State 5

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 6

    2 cmds: cmd . ';' cmds

    ';'  shift, and go to state 20


State 7

    4 cmd: atr .

    $default  reduce using rule 4 (cmd)


State 8

   10 atr: atr_obj .

    $default  reduce using rule 10 (atr)


State 9

   11 atr: atr_array .

    $default  reduce using rule 11 (atr)


State 10

    5 cmd: add .

    $default  reduce using rule 5 (cmd)


State 11

    6 cmd: condicional .

    $default  reduce using rule 6 (cmd)


State 12

   22 add: ID ADD . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 28
    val     go to state 29


State 13

    8 atr: ID '=' . exp
    9    | ID '=' . atr_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_id  go to state 31
    exp     go to state 32
    val     go to state 33


State 14

   12 atr_obj: ID '.' . prop_obj '=' exp
   13        | ID '.' . prop_obj ADD exp

    ID  shift, and go to state 34

    prop_obj  go to state 35


State 15

   14 atr_array: ID '[' . prop ']' '=' exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    $default  reduce using rule 17 (prop)

    prop  go to state 37
    exp   go to state 38
    val   go to state 33


State 16

   25 decl: ID . '=' exp fim_decl
   26     | ID . fim_decl

    '='  shift, and go to state 39
    ','  shift, and go to state 40

    $default  reduce using rule 28 (fim_decl)

    fim_decl  go to state 41


State 17

    7 cmd: LET decl .

    $default  reduce using rule 7 (cmd)


State 18

   30 condicional: IF '(' . condicao ')' corpo ELSE corpo
   31            | IF '(' . condicao ')' corpo

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    condicao  go to state 43
    exp       go to state 44
    val       go to state 33


State 19

    0 $accept: s $end .

    $default  accept


State 20

    2 cmds: cmd ';' . cmds

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 29 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 45
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 21

   46 val: NUM .

    $default  reduce using rule 46 (val)


State 22

   45 val: ID .
   52    | ID . INC

    INC  shift, and go to state 46

    $default  reduce using rule 45 (val)


State 23

   49 val: OBJ .

    $default  reduce using rule 49 (val)


State 24

   50 val: ARRAY .

    $default  reduce using rule 50 (val)


State 25

   51 val: STRING .

    $default  reduce using rule 51 (val)


State 26

   47 val: '-' . NUM

    NUM  shift, and go to state 47


State 27

   48 val: '(' . exp ')'

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 48
    val  go to state 33


State 28

   22 add: ID ADD exp_id .

    $default  reduce using rule 22 (add)


State 29

   23 exp_id: val . '+' exp_id
   24       | val .

    '+'  shift, and go to state 49

    $default  reduce using rule 24 (exp_id)


State 30

   20 atr_id: ID . '=' exp
   21       | ID . '=' atr_id
   43 exp: ID . '.' ID
   45 val: ID .
   52    | ID . INC

    INC  shift, and go to state 46
    '='  shift, and go to state 50
    '.'  shift, and go to state 51

    $default  reduce using rule 45 (val)


State 31

    9 atr: ID '=' atr_id .

    $default  reduce using rule 9 (atr)


State 32

    8 atr: ID '=' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 8 (atr)


State 33

   44 exp: val .

    $default  reduce using rule 44 (exp)


State 34

   15 prop_obj: ID .
   16         | ID . '[' prop ']'

    '['  shift, and go to state 56

    $default  reduce using rule 15 (prop_obj)


State 35

   12 atr_obj: ID '.' prop_obj . '=' exp
   13        | ID '.' prop_obj . ADD exp

    ADD  shift, and go to state 57
    '='  shift, and go to state 58


State 36

   19 prop: ID . '[' prop ']'
   43 exp: ID . '.' ID
   45 val: ID .
   52    | ID . INC

    INC  shift, and go to state 46
    '.'  shift, and go to state 51
    '['  shift, and go to state 59

    $default  reduce using rule 45 (val)


State 37

   14 atr_array: ID '[' prop . ']' '=' exp

    ']'  shift, and go to state 60


State 38

   18 prop: exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 18 (prop)


State 39

   25 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 61
    val  go to state 33


State 40

   27 fim_decl: ',' . decl

    ID  shift, and go to state 16

    decl  go to state 62


State 41

   26 decl: ID fim_decl .

    $default  reduce using rule 26 (decl)


State 42

   43 exp: ID . '.' ID
   45 val: ID .
   52    | ID . INC

    INC  shift, and go to state 46
    '.'  shift, and go to state 51

    $default  reduce using rule 45 (val)


State 43

   30 condicional: IF '(' condicao . ')' corpo ELSE corpo
   31            | IF '(' condicao . ')' corpo

    ')'  shift, and go to state 63


State 44

   34 condicao: exp . '>' exp
   35         | exp . '<' exp
   36         | exp . IGUAL exp
   37         | exp . DIF exp
   38         | exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    IGUAL  shift, and go to state 64
    DIF    shift, and go to state 65
    '+'    shift, and go to state 52
    '-'    shift, and go to state 53
    '*'    shift, and go to state 54
    '/'    shift, and go to state 55
    '>'    shift, and go to state 66
    '<'    shift, and go to state 67

    $default  reduce using rule 38 (condicao)


State 45

    2 cmds: cmd ';' cmds .

    $default  reduce using rule 2 (cmds)


State 46

   52 val: ID INC .

    $default  reduce using rule 52 (val)


State 47

   47 val: '-' NUM .

    $default  reduce using rule 47 (val)


State 48

   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp
   48 val: '(' exp . ')'

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    ')'  shift, and go to state 68


State 49

   23 exp_id: val '+' . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 69
    val     go to state 29


State 50

   20 atr_id: ID '=' . exp
   21       | ID '=' . atr_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_id  go to state 70
    exp     go to state 71
    val     go to state 33


State 51

   43 exp: ID '.' . ID

    ID  shift, and go to state 72


State 52

   39 exp: exp '+' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 73
    val  go to state 33


State 53

   40 exp: exp '-' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 74
    val  go to state 33


State 54

   41 exp: exp '*' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 75
    val  go to state 33


State 55

   42 exp: exp '/' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 76
    val  go to state 33


State 56

   16 prop_obj: ID '[' . prop ']'

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    $default  reduce using rule 17 (prop)

    prop  go to state 77
    exp   go to state 38
    val   go to state 33


State 57

   13 atr_obj: ID '.' prop_obj ADD . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 78
    val  go to state 33


State 58

   12 atr_obj: ID '.' prop_obj '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 79
    val  go to state 33


State 59

   19 prop: ID '[' . prop ']'

    NUM     shift, and go to state 21
    ID      shift, and go to state 36
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    $default  reduce using rule 17 (prop)

    prop  go to state 80
    exp   go to state 38
    val   go to state 33


State 60

   14 atr_array: ID '[' prop ']' . '=' exp

    '='  shift, and go to state 81


State 61

   25 decl: ID '=' exp . fim_decl
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    ','  shift, and go to state 40

    $default  reduce using rule 28 (fim_decl)

    fim_decl  go to state 82


State 62

   27 fim_decl: ',' decl .

    $default  reduce using rule 27 (fim_decl)


State 63

   30 condicional: IF '(' condicao ')' . corpo ELSE corpo
   31            | IF '(' condicao ')' . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 83

    $default  reduce using rule 29 (condicional)

    cmd          go to state 84
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11
    corpo        go to state 85


State 64

   36 condicao: exp IGUAL . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 86
    val  go to state 33


State 65

   37 condicao: exp DIF . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 87
    val  go to state 33


State 66

   34 condicao: exp '>' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 88
    val  go to state 33


State 67

   35 condicao: exp '<' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 89
    val  go to state 33


State 68

   48 val: '(' exp ')' .

    $default  reduce using rule 48 (val)


State 69

   23 exp_id: val '+' exp_id .

    $default  reduce using rule 23 (exp_id)


State 70

   21 atr_id: ID '=' atr_id .

    $default  reduce using rule 21 (atr_id)


State 71

   20 atr_id: ID '=' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 20 (atr_id)


State 72

   43 exp: ID '.' ID .

    $default  reduce using rule 43 (exp)


State 73

   39 exp: exp . '+' exp
   39    | exp '+' exp .
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 39 (exp)


State 74

   39 exp: exp . '+' exp
   40    | exp . '-' exp
   40    | exp '-' exp .
   41    | exp . '*' exp
   42    | exp . '/' exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 40 (exp)


State 75

   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   41    | exp '*' exp .
   42    | exp . '/' exp

    $default  reduce using rule 41 (exp)


State 76

   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp
   42    | exp '/' exp .

    $default  reduce using rule 42 (exp)


State 77

   16 prop_obj: ID '[' prop . ']'

    ']'  shift, and go to state 90


State 78

   13 atr_obj: ID '.' prop_obj ADD exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 13 (atr_obj)


State 79

   12 atr_obj: ID '.' prop_obj '=' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 12 (atr_obj)


State 80

   19 prop: ID '[' prop . ']'

    ']'  shift, and go to state 91


State 81

   14 atr_array: ID '[' prop ']' '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 42
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 92
    val  go to state 33


State 82

   25 decl: ID '=' exp fim_decl .

    $default  reduce using rule 25 (decl)


State 83

   32 corpo: '{' . cmds '}'

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 29 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 93
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 84

   33 corpo: cmd . ';'

    ';'  shift, and go to state 94


State 85

   30 condicional: IF '(' condicao ')' corpo . ELSE corpo
   31            | IF '(' condicao ')' corpo .

    ELSE  shift, and go to state 95

    $default  reduce using rule 31 (condicional)


State 86

   36 condicao: exp IGUAL exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 36 (condicao)


State 87

   37 condicao: exp DIF exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 37 (condicao)


State 88

   34 condicao: exp '>' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 34 (condicao)


State 89

   35 condicao: exp '<' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 35 (condicao)


State 90

   16 prop_obj: ID '[' prop ']' .

    $default  reduce using rule 16 (prop_obj)


State 91

   19 prop: ID '[' prop ']' .

    $default  reduce using rule 19 (prop)


State 92

   14 atr_array: ID '[' prop ']' '=' exp .
   39 exp: exp . '+' exp
   40    | exp . '-' exp
   41    | exp . '*' exp
   42    | exp . '/' exp

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 14 (atr_array)


State 93

   32 corpo: '{' cmds . '}'

    '}'  shift, and go to state 96


State 94

   33 corpo: cmd ';' .

    $default  reduce using rule 33 (corpo)


State 95

   30 condicional: IF '(' condicao ')' corpo ELSE . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 83

    $default  reduce using rule 29 (condicional)

    cmd          go to state 84
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11
    corpo        go to state 97


State 96

   32 corpo: '{' cmds '}' .

    $default  reduce using rule 32 (corpo)


State 97

   30 condicional: IF '(' condicao ')' corpo ELSE corpo .

    $default  reduce using rule 30 (condicional)

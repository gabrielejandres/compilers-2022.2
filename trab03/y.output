State 34 conflicts: 3 reduce/reduce


Grammar

    0 $accept: s $end

    1 s: cmds

    2 cmds: cmd ';' cmds
    3     | %empty

    4 cmd: atr
    5    | add
    6    | condicional
    7    | LET decl

    8 atr: ID '=' exp
    9    | ID '=' atr_id
   10    | atr_obj
   11    | atr_array

   12 atr_obj: ID '.' prop '=' exp
   13        | ID '.' prop ADD exp

   14 atr_array: ID '[' prop ']' '=' exp

   15 prop: ID
   16     | exp
   17     | ID '[' prop ']'

   18 atr_id: ID '=' exp
   19       | ID '=' atr_id

   20 add: ID ADD exp_id

   21 exp_id: val '+' exp_id
   22       | val

   23 decl: ID '=' exp fim_decl
   24     | ID fim_decl

   25 fim_decl: ',' decl
   26         | %empty

   27 condicional: %empty
   28            | IF '(' condicao ')' corpo ELSE corpo
   29            | IF '(' condicao ')' corpo

   30 corpo: '{' cmds '}'
   31      | cmd ';'

   32 condicao: exp '>' exp
   33         | exp '<' exp
   34         | exp IGUAL exp
   35         | exp DIF exp
   36         | exp

   37 exp: exp '+' exp
   38    | exp '-' exp
   39    | exp '*' exp
   40    | exp '/' exp
   41    | ID '.' ID
   42    | val

   43 val: ID
   44    | NUM
   45    | '-' NUM
   46    | '(' exp ')'
   47    | OBJ
   48    | ARRAY
   49    | STRING
   50    | ID INC


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 28 29 46
    ')' (41) 28 29 46
    '*' (42) 39
    '+' (43) 21 37
    ',' (44) 25
    '-' (45) 38 45
    '.' (46) 12 13 41
    '/' (47) 40
    ';' (59) 2 31
    '<' (60) 33
    '=' (61) 8 9 12 14 18 19 23
    '>' (62) 32
    '[' (91) 14 17
    ']' (93) 14 17
    '{' (123) 30
    '}' (125) 30
    error (256)
    NUM (258) 44 45
    ID (259) 8 9 12 13 14 15 17 18 19 20 23 24 41 43 50
    LET (260) 7
    OBJ (261) 47
    ARRAY (262) 48
    STRING (263) 49
    ADD (264) 13 20
    IF (265) 28 29
    ELSE (266) 28
    IGUAL (267) 34
    DIF (268) 35
    INC (269) 50


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    s (32)
        on left: 1
        on right: 0
    cmds (33)
        on left: 2 3
        on right: 1 2 30
    cmd (34)
        on left: 4 5 6 7
        on right: 2 31
    atr (35)
        on left: 8 9 10 11
        on right: 4
    atr_obj (36)
        on left: 12 13
        on right: 10
    atr_array (37)
        on left: 14
        on right: 11
    prop (38)
        on left: 15 16 17
        on right: 12 13 14 17
    atr_id (39)
        on left: 18 19
        on right: 9 19
    add (40)
        on left: 20
        on right: 5
    exp_id (41)
        on left: 21 22
        on right: 20 21
    decl (42)
        on left: 23 24
        on right: 7 25
    fim_decl (43)
        on left: 25 26
        on right: 23 24
    condicional (44)
        on left: 27 28 29
        on right: 6
    corpo (45)
        on left: 30 31
        on right: 28 29
    condicao (46)
        on left: 32 33 34 35 36
        on right: 28 29
    exp (47)
        on left: 37 38 39 40 41 42
        on right: 8 12 13 14 16 18 23 32 33 34 35 36 37 38 39 40 46
    val (48)
        on left: 43 44 45 46 47 48 49 50
        on right: 21 22 42


State 0

    0 $accept: . s $end

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 27 (condicional)
    $default  reduce using rule 3 (cmds)

    s            go to state 4
    cmds         go to state 5
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 1

    8 atr: ID . '=' exp
    9    | ID . '=' atr_id
   12 atr_obj: ID . '.' prop '=' exp
   13        | ID . '.' prop ADD exp
   14 atr_array: ID . '[' prop ']' '=' exp
   20 add: ID . ADD exp_id

    ADD  shift, and go to state 12
    '='  shift, and go to state 13
    '.'  shift, and go to state 14
    '['  shift, and go to state 15


State 2

    7 cmd: LET . decl

    ID  shift, and go to state 16

    decl  go to state 17


State 3

   28 condicional: IF . '(' condicao ')' corpo ELSE corpo
   29            | IF . '(' condicao ')' corpo

    '('  shift, and go to state 18


State 4

    0 $accept: s . $end

    $end  shift, and go to state 19


State 5

    1 s: cmds .

    $default  reduce using rule 1 (s)


State 6

    2 cmds: cmd . ';' cmds

    ';'  shift, and go to state 20


State 7

    4 cmd: atr .

    $default  reduce using rule 4 (cmd)


State 8

   10 atr: atr_obj .

    $default  reduce using rule 10 (atr)


State 9

   11 atr: atr_array .

    $default  reduce using rule 11 (atr)


State 10

    5 cmd: add .

    $default  reduce using rule 5 (cmd)


State 11

    6 cmd: condicional .

    $default  reduce using rule 6 (cmd)


State 12

   20 add: ID ADD . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 28
    val     go to state 29


State 13

    8 atr: ID '=' . exp
    9    | ID '=' . atr_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_id  go to state 31
    exp     go to state 32
    val     go to state 33


State 14

   12 atr_obj: ID '.' . prop '=' exp
   13        | ID '.' . prop ADD exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 34
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    prop  go to state 35
    exp   go to state 36
    val   go to state 33


State 15

   14 atr_array: ID '[' . prop ']' '=' exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 34
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    prop  go to state 37
    exp   go to state 36
    val   go to state 33


State 16

   23 decl: ID . '=' exp fim_decl
   24     | ID . fim_decl

    '='  shift, and go to state 38
    ','  shift, and go to state 39

    $default  reduce using rule 26 (fim_decl)

    fim_decl  go to state 40


State 17

    7 cmd: LET decl .

    $default  reduce using rule 7 (cmd)


State 18

   28 condicional: IF '(' . condicao ')' corpo ELSE corpo
   29            | IF '(' . condicao ')' corpo

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    condicao  go to state 42
    exp       go to state 43
    val       go to state 33


State 19

    0 $accept: s $end .

    $default  accept


State 20

    2 cmds: cmd ';' . cmds

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 27 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 44
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 21

   44 val: NUM .

    $default  reduce using rule 44 (val)


State 22

   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 45

    $default  reduce using rule 43 (val)


State 23

   47 val: OBJ .

    $default  reduce using rule 47 (val)


State 24

   48 val: ARRAY .

    $default  reduce using rule 48 (val)


State 25

   49 val: STRING .

    $default  reduce using rule 49 (val)


State 26

   45 val: '-' . NUM

    NUM  shift, and go to state 46


State 27

   46 val: '(' . exp ')'

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 47
    val  go to state 33


State 28

   20 add: ID ADD exp_id .

    $default  reduce using rule 20 (add)


State 29

   21 exp_id: val . '+' exp_id
   22       | val .

    '+'  shift, and go to state 48

    $default  reduce using rule 22 (exp_id)


State 30

   18 atr_id: ID . '=' exp
   19       | ID . '=' atr_id
   41 exp: ID . '.' ID
   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 45
    '='  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 43 (val)


State 31

    9 atr: ID '=' atr_id .

    $default  reduce using rule 9 (atr)


State 32

    8 atr: ID '=' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 8 (atr)


State 33

   42 exp: val .

    $default  reduce using rule 42 (exp)


State 34

   15 prop: ID .
   17     | ID . '[' prop ']'
   41 exp: ID . '.' ID
   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 45
    '.'  shift, and go to state 50
    '['  shift, and go to state 55

    ADD       reduce using rule 15 (prop)
    ADD       [reduce using rule 43 (val)]
    '='       reduce using rule 15 (prop)
    '='       [reduce using rule 43 (val)]
    ']'       reduce using rule 15 (prop)
    ']'       [reduce using rule 43 (val)]
    $default  reduce using rule 43 (val)


State 35

   12 atr_obj: ID '.' prop . '=' exp
   13        | ID '.' prop . ADD exp

    ADD  shift, and go to state 56
    '='  shift, and go to state 57


State 36

   16 prop: exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 16 (prop)


State 37

   14 atr_array: ID '[' prop . ']' '=' exp

    ']'  shift, and go to state 58


State 38

   23 decl: ID '=' . exp fim_decl

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 59
    val  go to state 33


State 39

   25 fim_decl: ',' . decl

    ID  shift, and go to state 16

    decl  go to state 60


State 40

   24 decl: ID fim_decl .

    $default  reduce using rule 24 (decl)


State 41

   41 exp: ID . '.' ID
   43 val: ID .
   50    | ID . INC

    INC  shift, and go to state 45
    '.'  shift, and go to state 50

    $default  reduce using rule 43 (val)


State 42

   28 condicional: IF '(' condicao . ')' corpo ELSE corpo
   29            | IF '(' condicao . ')' corpo

    ')'  shift, and go to state 61


State 43

   32 condicao: exp . '>' exp
   33         | exp . '<' exp
   34         | exp . IGUAL exp
   35         | exp . DIF exp
   36         | exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    IGUAL  shift, and go to state 62
    DIF    shift, and go to state 63
    '+'    shift, and go to state 51
    '-'    shift, and go to state 52
    '*'    shift, and go to state 53
    '/'    shift, and go to state 54
    '>'    shift, and go to state 64
    '<'    shift, and go to state 65

    $default  reduce using rule 36 (condicao)


State 44

    2 cmds: cmd ';' cmds .

    $default  reduce using rule 2 (cmds)


State 45

   50 val: ID INC .

    $default  reduce using rule 50 (val)


State 46

   45 val: '-' NUM .

    $default  reduce using rule 45 (val)


State 47

   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp
   46 val: '(' exp . ')'

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 66


State 48

   21 exp_id: val '+' . exp_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 22
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp_id  go to state 67
    val     go to state 29


State 49

   18 atr_id: ID '=' . exp
   19       | ID '=' . atr_id

    NUM     shift, and go to state 21
    ID      shift, and go to state 30
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    atr_id  go to state 68
    exp     go to state 69
    val     go to state 33


State 50

   41 exp: ID '.' . ID

    ID  shift, and go to state 70


State 51

   37 exp: exp '+' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 71
    val  go to state 33


State 52

   38 exp: exp '-' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 72
    val  go to state 33


State 53

   39 exp: exp '*' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 73
    val  go to state 33


State 54

   40 exp: exp '/' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 74
    val  go to state 33


State 55

   17 prop: ID '[' . prop ']'

    NUM     shift, and go to state 21
    ID      shift, and go to state 34
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    prop  go to state 75
    exp   go to state 36
    val   go to state 33


State 56

   13 atr_obj: ID '.' prop ADD . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 76
    val  go to state 33


State 57

   12 atr_obj: ID '.' prop '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 77
    val  go to state 33


State 58

   14 atr_array: ID '[' prop ']' . '=' exp

    '='  shift, and go to state 78


State 59

   23 decl: ID '=' exp . fim_decl
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ','  shift, and go to state 39

    $default  reduce using rule 26 (fim_decl)

    fim_decl  go to state 79


State 60

   25 fim_decl: ',' decl .

    $default  reduce using rule 25 (fim_decl)


State 61

   28 condicional: IF '(' condicao ')' . corpo ELSE corpo
   29            | IF '(' condicao ')' . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 80

    $default  reduce using rule 27 (condicional)

    cmd          go to state 81
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11
    corpo        go to state 82


State 62

   34 condicao: exp IGUAL . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 83
    val  go to state 33


State 63

   35 condicao: exp DIF . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 84
    val  go to state 33


State 64

   32 condicao: exp '>' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 85
    val  go to state 33


State 65

   33 condicao: exp '<' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 86
    val  go to state 33


State 66

   46 val: '(' exp ')' .

    $default  reduce using rule 46 (val)


State 67

   21 exp_id: val '+' exp_id .

    $default  reduce using rule 21 (exp_id)


State 68

   19 atr_id: ID '=' atr_id .

    $default  reduce using rule 19 (atr_id)


State 69

   18 atr_id: ID '=' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 18 (atr_id)


State 70

   41 exp: ID '.' ID .

    $default  reduce using rule 41 (exp)


State 71

   37 exp: exp . '+' exp
   37    | exp '+' exp .
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 37 (exp)


State 72

   37 exp: exp . '+' exp
   38    | exp . '-' exp
   38    | exp '-' exp .
   39    | exp . '*' exp
   40    | exp . '/' exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 38 (exp)


State 73

   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   39    | exp '*' exp .
   40    | exp . '/' exp

    $default  reduce using rule 39 (exp)


State 74

   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp
   40    | exp '/' exp .

    $default  reduce using rule 40 (exp)


State 75

   17 prop: ID '[' prop . ']'

    ']'  shift, and go to state 87


State 76

   13 atr_obj: ID '.' prop ADD exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 13 (atr_obj)


State 77

   12 atr_obj: ID '.' prop '=' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 12 (atr_obj)


State 78

   14 atr_array: ID '[' prop ']' '=' . exp

    NUM     shift, and go to state 21
    ID      shift, and go to state 41
    OBJ     shift, and go to state 23
    ARRAY   shift, and go to state 24
    STRING  shift, and go to state 25
    '-'     shift, and go to state 26
    '('     shift, and go to state 27

    exp  go to state 88
    val  go to state 33


State 79

   23 decl: ID '=' exp fim_decl .

    $default  reduce using rule 23 (decl)


State 80

   30 corpo: '{' . cmds '}'

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3

    ';'       reduce using rule 27 (condicional)
    $default  reduce using rule 3 (cmds)

    cmds         go to state 89
    cmd          go to state 6
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11


State 81

   31 corpo: cmd . ';'

    ';'  shift, and go to state 90


State 82

   28 condicional: IF '(' condicao ')' corpo . ELSE corpo
   29            | IF '(' condicao ')' corpo .

    ELSE  shift, and go to state 91

    $default  reduce using rule 29 (condicional)


State 83

   34 condicao: exp IGUAL exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 34 (condicao)


State 84

   35 condicao: exp DIF exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 35 (condicao)


State 85

   32 condicao: exp '>' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 32 (condicao)


State 86

   33 condicao: exp '<' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 33 (condicao)


State 87

   17 prop: ID '[' prop ']' .

    $default  reduce using rule 17 (prop)


State 88

   14 atr_array: ID '[' prop ']' '=' exp .
   37 exp: exp . '+' exp
   38    | exp . '-' exp
   39    | exp . '*' exp
   40    | exp . '/' exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 14 (atr_array)


State 89

   30 corpo: '{' cmds . '}'

    '}'  shift, and go to state 92


State 90

   31 corpo: cmd ';' .

    $default  reduce using rule 31 (corpo)


State 91

   28 condicional: IF '(' condicao ')' corpo ELSE . corpo

    ID   shift, and go to state 1
    LET  shift, and go to state 2
    IF   shift, and go to state 3
    '{'  shift, and go to state 80

    $default  reduce using rule 27 (condicional)

    cmd          go to state 81
    atr          go to state 7
    atr_obj      go to state 8
    atr_array    go to state 9
    add          go to state 10
    condicional  go to state 11
    corpo        go to state 93


State 92

   30 corpo: '{' cmds '}' .

    $default  reduce using rule 30 (corpo)


State 93

   28 condicional: IF '(' condicao ')' corpo ELSE corpo .

    $default  reduce using rule 28 (condicional)
